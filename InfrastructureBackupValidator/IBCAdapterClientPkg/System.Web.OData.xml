<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Web.OData</name>
  </assembly>
  <members>
    <member name="T:System.Web.OData.ClrPropertyInfoAnnotation">
      <summary>Represents a mapping from an <see cref="T:Microsoft.OData.Edm.IEdmProperty" /> to a CLR property info.</summary>
    </member>
    <member name="M:System.Web.OData.ClrPropertyInfoAnnotation.#ctor(System.Reflection.PropertyInfo)">
      <summary>Initializes a new instance of <see cref="T:System.Web.OData.ClrPropertyInfoAnnotation" /> class.</summary>
      <param name="clrPropertyInfo">The backing CLR property info for the EDM property.</param>
    </member>
    <member name="P:System.Web.OData.ClrPropertyInfoAnnotation.ClrPropertyInfo">
      <summary>Gets the backing CLR property info for the EDM property.</summary>
    </member>
    <member name="T:System.Web.OData.ClrTypeAnnotation">
      <summary>Represents a mapping from an <see cref="T:Microsoft.OData.Edm.IEdmType" /> to a CLR type.</summary>
    </member>
    <member name="M:System.Web.OData.ClrTypeAnnotation.#ctor(System.Type)">
      <summary>Initializes a new instance of <see cref="T:System.Web.OData.ClrTypeAnnotation" /> class.</summary>
      <param name="clrType">The backing CLR type for the EDM type.</param>
    </member>
    <member name="P:System.Web.OData.ClrTypeAnnotation.ClrType">
      <summary>Gets the backing CLR type for the EDM type.</summary>
    </member>
    <member name="T:System.Web.OData.Delta">
      <summary>A class the tracks changes (i.e. the Delta) for an entity.</summary>
    </member>
    <member name="M:System.Web.OData.Delta.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Delta" /> class.</summary>
    </member>
    <member name="M:System.Web.OData.Delta.Clear">
      <summary>Clears the Delta and resets the underlying Entity.</summary>
    </member>
    <member name="M:System.Web.OData.Delta.GetChangedPropertyNames">
      <summary>Returns the Properties that have been modified through this Delta as an enumeration of Property Names</summary>
      <returns>Returns <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="M:System.Web.OData.Delta.GetUnchangedPropertyNames">
      <summary>Returns the Properties that have not been modified through this Delta as an enumeration of Property Names</summary>
      <returns>Returns <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="M:System.Web.OData.Delta.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
      <summary>Overrides the DynamicObject TryGetMember method, so that only the properties of Entity can be got.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Web.OData.Delta.TryGetPropertyType(System.String,System.Type@)">
      <summary>Attempts to get the <see cref="T:System.Type" /> of the Property called <paramref name="name" /> from the underlying Entity.</summary>
      <returns>Returns true if the Property was found and false if not.</returns>
      <param name="name">The name of the Property</param>
      <param name="type">The type of the Property</param>
    </member>
    <member name="M:System.Web.OData.Delta.TryGetPropertyValue(System.String,System.Object@)">
      <summary>Attempts to get the value of the Property called <paramref name="name" /> from the underlying Entity.</summary>
      <returns>True if the Property was found</returns>
      <param name="name">The name of the Property</param>
      <param name="value">The value of the Property</param>
    </member>
    <member name="M:System.Web.OData.Delta.TrySetMember(System.Dynamic.SetMemberBinder,System.Object)">
      <summary>Overrides the DynamicObject TrySetMember method, so that only the properties of Entity can be set.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Web.OData.Delta.TrySetPropertyValue(System.String,System.Object)">
      <summary>Attempts to set the Property called <paramref name="name" /> to the <paramref name="value" /> specified.</summary>
      <returns>True if successful</returns>
      <param name="name">The name of the Property</param>
      <param name="value">The new value of the Property</param>
    </member>
    <member name="T:System.Web.OData.Delta`1">
      <summary>A class the tracks changes (i.e. the delta) for a particular <paramref name="TEntityType" />.</summary>
      <typeparam name="TEntityType">TEntityType is the base type of entity this delta tracks changes for.</typeparam>
    </member>
    <member name="M:System.Web.OData.Delta`1.#ctor">
      <summary>Initializes a new instance of <see cref="T:System.Web.OData.Delta`1" />.</summary>
    </member>
    <member name="M:System.Web.OData.Delta`1.#ctor(System.Type)">
      <summary>Initializes a new instance of <see cref="T:System.Web.OData.Delta`1" />.</summary>
      <param name="entityType">The derived entity type for which the changes would be tracked. <paramref name="entityType" /> should be assignable to instances of <paramref name="TEntityType" />.</param>
    </member>
    <member name="M:System.Web.OData.Delta`1.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Initializes a new instance of <see cref="T:System.Web.OData.Delta`1" />.</summary>
      <param name="entityType">The derived entity type for which the changes would be tracked. <paramref name="entityType" /> should be assignable to instances of <paramref name="TEntityType" />.</param>
      <param name="updatableProperties">The set of properties that can be updated or reset.</param>
    </member>
    <member name="M:System.Web.OData.Delta`1.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.String},System.Reflection.PropertyInfo)">
      <summary>Initializes a new instance of <see cref="T:System.Web.OData.Delta`1" />.</summary>
      <param name="entityType">The derived entity type for which the changes would be tracked. <paramref name="entityType" /> should be assignable to instances of <paramref name="TEntityType" />.</param>
      <param name="updatableProperties">The set of properties that can be updated or reset. Unknown property names, including those of dynamic properties, are ignored.</param>
      <param name="dynamicDictionaryPropertyInfo">The property info that is used as dictionary of dynamic properties. null means this entity type is not open.</param>
    </member>
    <member name="M:System.Web.OData.Delta`1.Clear">
      <summary>Clears the Delta and resets the underlying Entity.</summary>
    </member>
    <member name="M:System.Web.OData.Delta`1.CopyChangedValues(`0)">
      <summary>Copies the changed property values from the underlying entity (accessible via <see cref="M:System.Web.OData.Delta`1.GetEntity" /> to the <paramref name="original" /> entity.</summary>
      <param name="original">The entity to be updated.</param>
    </member>
    <member name="M:System.Web.OData.Delta`1.CopyUnchangedValues(`0)">
      <summary>Copies the unchanged property values from the underlying entity (accessible via <see cref="M:System.Web.OData.Delta`1.GetEntity" /> ) to the <paramref name="original" /> entity.</summary>
      <param name="original">The entity to be updated.</param>
    </member>
    <member name="P:System.Web.OData.Delta`1.EntityType">
      <summary>Gets the actual type of the entity for which the changes are tracked.</summary>
      <returns>The actual type of the entity for which the changes are tracked.</returns>
    </member>
    <member name="P:System.Web.OData.Delta`1.ExpectedClrType">
      <returns>Returns <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:System.Web.OData.Delta`1.GetChangedPropertyNames">
      <summary>Returns the Properties that have been modified through this Delta as an enumeration of property names.</summary>
      <returns>The property names.</returns>
    </member>
    <member name="M:System.Web.OData.Delta`1.GetEntity">
      <summary>Returns the <see cref="P:System.Web.OData.Delta`1.EntityType" /> instance that holds all the changes (and original values) being tracked by this Delta.</summary>
      <returns>The <see cref="P:System.Web.OData.Delta`1.EntityType" /> istance.</returns>
    </member>
    <member name="M:System.Web.OData.Delta`1.GetUnchangedPropertyNames">
      <summary>Returns the properties that have not been modified through this Delta as an enumeration of property names.</summary>
      <returns>The properties that have not been modified through this Delta as an enumeration of property names.</returns>
    </member>
    <member name="M:System.Web.OData.Delta`1.Patch(`0)">
      <summary>Overwrites the <paramref name="original" /> entity with the changes tracked by this Delta.</summary>
      <param name="original">The entity to be updated.</param>
    </member>
    <member name="M:System.Web.OData.Delta`1.Put(`0)">
      <summary>Overwrites the <paramref name="original" /> entity with the values stored in this Delta.</summary>
      <param name="original">The entity to be updated.</param>
    </member>
    <member name="M:System.Web.OData.Delta`1.TryGetPropertyType(System.String,System.Type@)">
      <summary>Attempts to get the <see cref="T:System.Type" /> of the property called <paramref name="name" /> from the underlying entity.</summary>
      <returns>true if the property was found; otherwise, false.</returns>
      <param name="name">The name of the property.</param>
      <param name="type">The type of the property.</param>
    </member>
    <member name="M:System.Web.OData.Delta`1.TryGetPropertyValue(System.String,System.Object@)">
      <summary>Attempts to get the value of the property called <paramref name="name" /> from the underlying entity.</summary>
      <returns>true if the property was found.</returns>
      <param name="name">The name of the property.</param>
      <param name="value">The value of the property.</param>
    </member>
    <member name="M:System.Web.OData.Delta`1.TrySetPropertyValue(System.String,System.Object)">
      <summary>Attempts to set the property called <paramref name="name" /> to the <paramref name="value" /> specified.</summary>
      <returns>true if successful; otherwise, false.</returns>
      <param name="name">The name of the property.</param>
      <param name="value">The new value of the property.</param>
    </member>
    <member name="T:System.Web.OData.EdmComplexObject">
      <summary>Represents an <see cref="T:System.Web.OData.IEdmComplexObject" /> with no backing CLR <see cref="T:System.Type" />.</summary>
    </member>
    <member name="M:System.Web.OData.EdmComplexObject.#ctor(Microsoft.OData.Edm.IEdmComplexType)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.EdmStructuredObject" /> class.</summary>
      <param name="edmType">The <see cref="T:Microsoft.OData.Edm.IEdmStructuredType" /> of this object.</param>
    </member>
    <member name="M:System.Web.OData.EdmComplexObject.#ctor(Microsoft.OData.Edm.IEdmComplexType,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.EdmStructuredObject" /> class.</summary>
      <param name="edmType">The <see cref="T:Microsoft.OData.Edm.IEdmComplexType" /> of this object.</param>
      <param name="isNullable">true if this object can be nullable; otherwise, false.</param>
    </member>
    <member name="M:System.Web.OData.EdmComplexObject.#ctor(Microsoft.OData.Edm.IEdmComplexTypeReference)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.EdmStructuredObject" /> class.</summary>
      <param name="edmType">The <see cref="T:Microsoft.OData.Edm.IEdmComplexTypeReference" /> of this object.</param>
    </member>
    <member name="T:System.Web.OData.EdmComplexObjectCollection">
      <summary>Represents an <see cref="T:System.Web.OData.IEdmObject" /> that is a collection of <see cref="T:System.Web.OData.IEdmComplexObject" />s.</summary>
    </member>
    <member name="M:System.Web.OData.EdmComplexObjectCollection.#ctor(Microsoft.OData.Edm.IEdmCollectionTypeReference)">
      <summary>Initialzes a new instance of the <see cref="T:System.Web.OData.EdmComplexObjectCollection" /> class.</summary>
      <param name="edmType">The edm type of the collection.</param>
    </member>
    <member name="M:System.Web.OData.EdmComplexObjectCollection.#ctor(Microsoft.OData.Edm.IEdmCollectionTypeReference,System.Collections.Generic.IList{System.Web.OData.IEdmComplexObject})">
      <summary>Initialzes a new instance of the <see cref="T:System.Web.OData.EdmComplexObjectCollection" /> class.</summary>
      <param name="edmType">The edm type of the collection.</param>
      <param name="list">The list that is wrapped by the new collection.</param>
    </member>
    <member name="M:System.Web.OData.EdmComplexObjectCollection.GetEdmType"></member>
    <member name="T:System.Web.OData.EdmEntityObject">
      <summary>Represents an <see cref="T:System.Web.OData.IEdmEntityObject" /> with no backing CLR <see cref="T:System.Type" />.</summary>
    </member>
    <member name="M:System.Web.OData.EdmEntityObject.#ctor(Microsoft.OData.Edm.IEdmEntityType)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.EdmStructuredObject" /> class.</summary>
      <param name="edmType">The <see cref="T:Microsoft.OData.Edm.IEdmEntityType" /> of this object.</param>
    </member>
    <member name="M:System.Web.OData.EdmEntityObject.#ctor(Microsoft.OData.Edm.IEdmEntityType,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.EdmStructuredObject" /> class.</summary>
      <param name="edmType">The <see cref="T:Microsoft.OData.Edm.IEdmEntityType" /> of this object.</param>
      <param name="isNullable">true if this object can be nullable; otherwise, false.</param>
    </member>
    <member name="M:System.Web.OData.EdmEntityObject.#ctor(Microsoft.OData.Edm.IEdmEntityTypeReference)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.EdmStructuredObject" /> class.</summary>
      <param name="edmType">The <see cref="T:Microsoft.OData.Edm.IEdmEntityTypeReference" /> of this object.</param>
    </member>
    <member name="T:System.Web.OData.EdmEntityObjectCollection">
      <summary>Represents an <see cref="T:System.Web.OData.IEdmObject" /> that is a collection of <see cref="T:System.Web.OData.IEdmEntityObject" />s.</summary>
    </member>
    <member name="M:System.Web.OData.EdmEntityObjectCollection.#ctor(Microsoft.OData.Edm.IEdmCollectionTypeReference)">
      <summary>Initialzes a new instance of the <see cref="T:System.Web.OData.EdmEntityObjectCollection" /> class.</summary>
      <param name="edmType">The edm type of the collection.</param>
    </member>
    <member name="M:System.Web.OData.EdmEntityObjectCollection.#ctor(Microsoft.OData.Edm.IEdmCollectionTypeReference,System.Collections.Generic.IList{System.Web.OData.IEdmEntityObject})">
      <summary>Initialzes a new instance of the <see cref="T:System.Web.OData.EdmEntityObjectCollection" /> class.</summary>
      <param name="edmType">The edm type of the collection.</param>
      <param name="list">The list that is wrapped by the new collection.</param>
    </member>
    <member name="M:System.Web.OData.EdmEntityObjectCollection.GetEdmType"></member>
    <member name="T:System.Web.OData.EdmModelExtensions">
      <summary>Provides extension methods for the <see cref="T:Microsoft.OData.Edm.IEdmModel" /> interface.</summary>
    </member>
    <member name="M:System.Web.OData.EdmModelExtensions.GetActionLinkBuilder(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmAction)">
      <summary>Gets the <see cref="T:System.Web.OData.Builder.ActionLinkBuilder" /> to be used while generating action links for the given action.</summary>
      <returns>The <see cref="T:System.Web.OData.Builder.ActionLinkBuilder" /> for the given action if one is set; otherwise, a new <see cref="T:System.Web.OData.Builder.ActionLinkBuilder" /> that generates action links following OData URL conventions.</returns>
      <param name="model">The <see cref="T:Microsoft.OData.Edm.IEdmModel" /> containing the action.</param>
      <param name="action">The action for which the link builder is needed.</param>
    </member>
    <member name="M:System.Web.OData.EdmModelExtensions.GetNavigationSourceLinkBuilder(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmNavigationSource)">
      <summary>Gets the <see cref="T:System.Web.OData.Builder.NavigationSourceLinkBuilderAnnotation" /> to be used while generating self and navigation links for the given navigation source.</summary>
      <returns>The <see cref="T:System.Web.OData.Builder.NavigationSourceLinkBuilderAnnotation" /> if set for the given the singleton; otherwise, a new <see cref="T:System.Web.OData.Builder.NavigationSourceLinkBuilderAnnotation" /> that generates URLs that follow OData URL conventions.</returns>
      <param name="model">The <see cref="T:Microsoft.OData.Edm.IEdmModel" /> containing the navigation source.</param>
      <param name="navigationSource">The navigation source.</param>
    </member>
    <member name="M:System.Web.OData.EdmModelExtensions.SetActionLinkBuilder(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmAction,System.Web.OData.Builder.ActionLinkBuilder)">
      <summary>Sets the <see cref="T:System.Web.OData.Builder.ActionLinkBuilder" /> to be used for generating the OData action link for the given action.</summary>
      <param name="model">The <see cref="T:Microsoft.OData.Edm.IEdmModel" /> containing the entity set.</param>
      <param name="action">The action for which the action link is to be generated.</param>
      <param name="actionLinkBuilder">The <see cref="T:System.Web.OData.Builder.ActionLinkBuilder" /> to set.</param>
    </member>
    <member name="M:System.Web.OData.EdmModelExtensions.SetFunctionLinkBuilder(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmFunction,System.Web.OData.Builder.FunctionLinkBuilder)">
      <summary>Sets the <see cref="T:System.Web.OData.Builder.FunctionLinkBuilder" /> to be used for generating the OData function link for the given function.</summary>
      <param name="model">The <see cref="T:Microsoft.OData.Edm.IEdmModel" /> containing the entity set.</param>
      <param name="function">The function for which the function link is to be generated.</param>
      <param name="functionLinkBuilder">The <see cref="T:System.Web.OData.Builder.FunctionLinkBuilder" /> to set.</param>
    </member>
    <member name="M:System.Web.OData.EdmModelExtensions.SetNavigationSourceLinkBuilder(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmNavigationSource,System.Web.OData.Builder.NavigationSourceLinkBuilderAnnotation)">
      <summary>Sets the <see cref="T:System.Web.OData.Builder.NavigationSourceLinkBuilderAnnotation" /> to be used while generating self and navigation links for the given navigation source.</summary>
      <param name="model">The <see cref="T:Microsoft.OData.Edm.IEdmModel" /> containing the navigation source.</param>
      <param name="navigationSource">The navigation source.</param>
      <param name="navigationSourceLinkBuilder">The <see cref="T:System.Web.OData.Builder.NavigationSourceLinkBuilderAnnotation" /> to set.</param>
    </member>
    <member name="T:System.Web.OData.EdmStructuredObject">
      <summary>Represents an <see cref="T:System.Web.OData.IEdmStructuredObject" /> with no backing CLR <see cref="T:System.Type" />.</summary>
    </member>
    <member name="M:System.Web.OData.EdmStructuredObject.#ctor(Microsoft.OData.Edm.IEdmStructuredType)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.EdmStructuredObject" /> class.</summary>
      <param name="edmType">The <see cref="T:Microsoft.OData.Edm.IEdmStructuredType" /> of this object.</param>
    </member>
    <member name="M:System.Web.OData.EdmStructuredObject.#ctor(Microsoft.OData.Edm.IEdmStructuredType,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.EdmStructuredObject" /> class.</summary>
      <param name="edmType">The <see cref="T:Microsoft.OData.Edm.IEdmStructuredTypeReference" /> of this object.</param>
      <param name="isNullable">true if this object can be nullable; otherwise, false.</param>
    </member>
    <member name="M:System.Web.OData.EdmStructuredObject.#ctor(Microsoft.OData.Edm.IEdmStructuredTypeReference)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.EdmStructuredObject" /> class.</summary>
      <param name="edmType">The <see cref="T:Microsoft.OData.Edm.IEdmStructuredTypeReference" /> of this object.</param>
    </member>
    <member name="P:System.Web.OData.EdmStructuredObject.ActualEdmType">
      <summary>Gets or sets the actual <see cref="T:Microsoft.OData.Edm.IEdmStructuredType" /> of the entity or complex type of this object.</summary>
    </member>
    <member name="M:System.Web.OData.EdmStructuredObject.Clear"></member>
    <member name="P:System.Web.OData.EdmStructuredObject.ExpectedEdmType">
      <summary>Gets or sets the expected <see cref="T:Microsoft.OData.Edm.IEdmStructuredType" /> of the entity or complex type of this object.</summary>
    </member>
    <member name="M:System.Web.OData.EdmStructuredObject.GetChangedPropertyNames"></member>
    <member name="M:System.Web.OData.EdmStructuredObject.GetEdmType"></member>
    <member name="M:System.Web.OData.EdmStructuredObject.GetUnchangedPropertyNames"></member>
    <member name="P:System.Web.OData.EdmStructuredObject.IsNullable">
      <summary>Gets or sets whether the EDM object is nullable or not.</summary>
    </member>
    <member name="M:System.Web.OData.EdmStructuredObject.TryGetPropertyType(System.String,System.Type@)"></member>
    <member name="M:System.Web.OData.EdmStructuredObject.TryGetPropertyValue(System.String,System.Object@)"></member>
    <member name="M:System.Web.OData.EdmStructuredObject.TrySetPropertyValue(System.String,System.Object)"></member>
    <member name="T:System.Web.OData.EnableQueryAttribute">
      <summary>This class defines an attribute that can be applied to an action to enable querying using the OData query syntax. To avoid processing unexpected or malicious queries, use the validation settings on <see cref="T:System.Web.OData.EnableQueryAttribute" /> to validate incoming queries. For more information, visit http://go.microsoft.com/fwlink/?LinkId=279712.</summary>
    </member>
    <member name="M:System.Web.OData.EnableQueryAttribute.#ctor">
      <summary>Enables a controller action to support OData query parameters.</summary>
    </member>
    <member name="P:System.Web.OData.EnableQueryAttribute.AllowedArithmeticOperators">
      <summary>Gets or sets a value that represents a list of allowed arithmetic operators including 'add', 'sub', 'mul', 'div', 'mod'.</summary>
    </member>
    <member name="P:System.Web.OData.EnableQueryAttribute.AllowedFunctions">
      <summary>Gets or sets a value that represents a list of allowed functions used in the $filter query. Supported functions include the following:[list type="definition"] [item] [term]String related:[/term] [description]substringof, endswith, startswith, length, indexof, substring, tolower, toupper, trim, concat e.g. ~/Customers?$filter=length(CompanyName) eq 19[/description] [/item] [item] [term]DateTime related:[/term] [description]year, years, month, months, day, days, hour, hours, minute, minutes, second, seconds e.g. ~/Employees?$filter=year(BirthDate) eq 1971[/description] [/item] [item] [term]Math related:[/term] [description]round, floor, ceiling[/description] [/item] [item] [term]Type related:[/term] [description]isof, cast[/description] [/item] [item] [term]Collection related:[/term] [description]any, all[/description] [/item] [/list]</summary>
    </member>
    <member name="P:System.Web.OData.EnableQueryAttribute.AllowedLogicalOperators">
      <summary>Gets or sets a value that represents a list of allowed logical Operators such as 'eq', 'ne', 'gt', 'ge', 'lt', 'le', 'and', 'or', 'not'.</summary>
    </member>
    <member name="P:System.Web.OData.EnableQueryAttribute.AllowedOrderByProperties">
      <summary>Gets or sets a string with comma seperated list of property names. The queryable result can only be ordered by those properties defined in this list.Note, by default this string is null, which means it can be ordered by any property.For example, setting this value to null or empty string means that we allow ordering the queryable result by any properties. Setting this value to "Name" means we only allow queryable result to be ordered by Name property.</summary>
    </member>
    <member name="P:System.Web.OData.EnableQueryAttribute.AllowedQueryOptions">
      <summary>Gets or sets the query parameters that are allowed in queries.</summary>
      <returns>The default includes all query options: $filter, $skip, $top, $orderby, $expand, $select, $count, $format and $skiptoken.</returns>
    </member>
    <member name="M:System.Web.OData.EnableQueryAttribute.ApplyQuery(System.Linq.IQueryable,System.Web.OData.Query.ODataQueryOptions)">
      <summary>Applies the query to the given IQueryable based on incoming query from uri and query settings. By default, the implementation supports $top, $skip, $orderby and $filter. Override this method to perform additional query composition of the query.</summary>
      <param name="queryable">The original queryable instance from the response message.</param>
      <param name="queryOptions">The <see cref="T:System.Web.OData.Query.ODataQueryOptions" /> instance constructed based on the incoming request.</param>
    </member>
    <member name="M:System.Web.OData.EnableQueryAttribute.ApplyQuery(System.Object,System.Web.OData.Query.ODataQueryOptions)">
      <summary>Applies the query to the given entity based on incoming query from uri and query settings.</summary>
      <returns>The new entity after the $select and $expand query has been applied to.</returns>
      <param name="entity">The original entity from the response message.</param>
      <param name="queryOptions">The <see cref="T:System.Web.OData.Query.ODataQueryOptions" /> instance constructed based on the incoming request.</param>
    </member>
    <member name="P:System.Web.OData.EnableQueryAttribute.EnableConstantParameterization">
      <summary>Gets or sets a value indicating whether constants should be parameterized. Parameterizing constants would result in better performance with Entity framework.</summary>
      <returns>The default value is true.</returns>
    </member>
    <member name="P:System.Web.OData.EnableQueryAttribute.EnsureStableOrdering">
      <summary>Gets or sets a value indicating whether query composition should alter the original query when necessary to ensure a stable sort order.</summary>
      <returns>A true value indicates the original query should be modified when necessary to guarantee a stable sort order. A false value indicates the sort order can be considered stable without modifying the query. Query providers that ensure a stable sort order should set this value to false. The default value is true.</returns>
    </member>
    <member name="M:System.Web.OData.EnableQueryAttribute.GetModel(System.Type,System.Net.Http.HttpRequestMessage,System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary>Gets the EDM model for the given type and request. Override this method to customize the EDM model used for querying.</summary>
      <returns>The EDM model for the given type and request.</returns>
      <param name="elementClrType">The CLR type to retrieve a model for.</param>
      <param name="request">The request message to retrieve a model for.</param>
      <param name="actionDescriptor">The action descriptor for the action being queried on.</param>
    </member>
    <member name="P:System.Web.OData.EnableQueryAttribute.HandleNullPropagation">
      <summary>Gets or sets a value indicating how null propagation should be handled during query composition.</summary>
      <returns>The default is <see cref="F:System.Web.OData.Query.HandleNullPropagationOption.Default" />.</returns>
    </member>
    <member name="P:System.Web.OData.EnableQueryAttribute.MaxAnyAllExpressionDepth">
      <summary>Gets or sets the maximum depth of the Any or All elements nested inside the query. This limit helps prevent Denial of Service attacks.</summary>
      <returns>The maxiumum depth of the Any or All elements nested inside the query. The default value is 1.</returns>
    </member>
    <member name="P:System.Web.OData.EnableQueryAttribute.MaxExpansionDepth">
      <summary>Gets or sets the max expansion depth for the $expand query option. To disable the maximum expansion depth check, set this property to 0.</summary>
    </member>
    <member name="P:System.Web.OData.EnableQueryAttribute.MaxNodeCount">
      <summary>Gets or sets the maximum number of nodes inside the $filter syntax tree.</summary>
      <returns>The default value is 100.</returns>
    </member>
    <member name="P:System.Web.OData.EnableQueryAttribute.MaxOrderByNodeCount">
      <summary>Gets or sets the maximum number of expressions that can be present in the $orderby.</summary>
    </member>
    <member name="P:System.Web.OData.EnableQueryAttribute.MaxSkip">
      <summary>Gets or sets the max value of $skip that a client can request.</summary>
    </member>
    <member name="P:System.Web.OData.EnableQueryAttribute.MaxTop">
      <summary>Gets or sets the max value of $top that a client can request.</summary>
    </member>
    <member name="M:System.Web.OData.EnableQueryAttribute.OnActionExecuted(System.Web.Http.Filters.HttpActionExecutedContext)">
      <summary>Performs the query composition after action is executed. It first tries to retrieve the IQueryable from the returning response message. It then validates the query from uri based on the validation settings on <see cref="T:System.Web.OData.EnableQueryAttribute" />. It finally applies the query appropriately, and reset it back on the response message.</summary>
      <param name="actionExecutedContext">The context related to this action, including the response message, request message and HttpConfiguration etc.</param>
    </member>
    <member name="P:System.Web.OData.EnableQueryAttribute.PageSize">
      <summary>Gets or sets the maximum number of query results to send back to clients.</summary>
      <returns>The maximum number of query results to send back to clients.</returns>
    </member>
    <member name="M:System.Web.OData.EnableQueryAttribute.ValidateQuery(System.Net.Http.HttpRequestMessage,System.Web.OData.Query.ODataQueryOptions)">
      <summary>Validates the OData query in the incoming request. By default, the implementation throws an exception if the query contains unsupported query parameters. Override this method to perform additional validation of the query.</summary>
      <param name="request">The incoming request.</param>
      <param name="queryOptions">The <see cref="T:System.Web.OData.Query.ODataQueryOptions" /> instance constructed based on the incoming request.</param>
    </member>
    <member name="T:System.Web.OData.EntityInstanceContext">
      <summary>An instance of <see cref="T:System.Web.OData.EntityInstanceContext`1" /> gets passed to the self link ( <see cref="M:NavigationSourceConfiguration.HasIdLink" />, <see cref="M:NavigationSourceConfiguration.HasEditLink" />, <see cref="M:NavigationSourceConfiguration.HasReadLink" /> ) and navigation link ( <see cref="M:NavigationSourceConfiguration.HasNavigationPropertyLink" />, <see cref="M:NavigationSourceConfiguration.HasNavigationPropertiesLink" /> ) builders and can be used by the link builders to generate links.</summary>
    </member>
    <member name="M:System.Web.OData.EntityInstanceContext.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.EntityInstanceContext" /> class.</summary>
    </member>
    <member name="M:System.Web.OData.EntityInstanceContext.#ctor(System.Web.OData.Formatter.Serialization.ODataSerializerContext,Microsoft.OData.Edm.IEdmEntityTypeReference,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.EntityInstanceContext" /> class.</summary>
      <param name="serializerContext">The backing <see cref="T:System.Web.OData.Formatter.Serialization.ODataSerializerContext" />.</param>
      <param name="entityType">The EDM entity type of this instance context.</param>
      <param name="entityInstance">The object representing the instance of this context.</param>
    </member>
    <member name="P:System.Web.OData.EntityInstanceContext.EdmModel">
      <summary>Gets or sets the <see cref="T:Microsoft.OData.Edm.IEdmModel" /> to which this instance belogs.</summary>
    </member>
    <member name="P:System.Web.OData.EntityInstanceContext.EdmObject">
      <summary>Gets or sets the <see cref="T:System.Web.OData.IEdmEntityObject" /> backing this instance.</summary>
    </member>
    <member name="P:System.Web.OData.EntityInstanceContext.EntityInstance">
      <summary>Gets or sets the value of this entity instance.</summary>
    </member>
    <member name="P:System.Web.OData.EntityInstanceContext.EntityType">
      <summary>Gets or sets the <see cref="T:Microsoft.OData.Edm.IEdmEntityType" /> of this entity instance.</summary>
    </member>
    <member name="P:System.Web.OData.EntityInstanceContext.NavigationSource">
      <summary>Gets or sets the <see cref="T:Microsoft.OData.Edm.IEdmNavigationSource" /> to which this instance belongs.</summary>
    </member>
    <member name="P:System.Web.OData.EntityInstanceContext.Request">
      <summary>Gets or sets the HTTP request that caused this instance to be generated.</summary>
    </member>
    <member name="P:System.Web.OData.EntityInstanceContext.SerializerContext">
      <summary>Gets or sets the <see cref="T:System.Web.OData.Formatter.Serialization.ODataSerializerContext" />.</summary>
    </member>
    <member name="P:System.Web.OData.EntityInstanceContext.SkipExpensiveAvailabilityChecks">
      <summary>Gets or sets a value indicating whether ActionAvailabilityChecks should be performed or not.</summary>
    </member>
    <member name="P:System.Web.OData.EntityInstanceContext.Url">
      <summary>Gets or sets a <see cref="T:System.Web.Http.Routing.UrlHelper" /> that may be used to generate links while serializing this entity instance.</summary>
    </member>
    <member name="T:System.Web.OData.EntityInstanceContext`1">
      <summary>An instance of <see cref="T:System.Web.OData.EntityInstanceContext`1" /> gets passed to the self link ( <see cref="M:EntitySetConfiguration.HasIdLink" />, <see cref="M:EntitySetConfiguration.HasEditLink" />, <see cref="M:EntitySetConfiguration.HasReadLink" /> ) and navigation link ( <see cref="M:EntitySetConfiguration.HasNavigationPropertyLink" />, <see cref="M:EntitySetConfiguration.HasNavigationPropertiesLink" /> ) builders and can be used by the link builders to generate links.</summary>
      <typeparam name="TEntityType">The entity type</typeparam>
    </member>
    <member name="M:System.Web.OData.EntityInstanceContext`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.EntityInstanceContext`1" /> class.</summary>
    </member>
    <member name="P:System.Web.OData.EntityInstanceContext`1.EntityInstance">
      <summary>Gets or sets the entity instance.</summary>
    </member>
    <member name="T:System.Web.OData.ETagMessageHandler">
      <summary>Defines a <see cref="T:System.Net.Http.HttpMessageHandler" /> to add an ETag header value to an OData response when the response is a single entity that has an ETag defined.</summary>
    </member>
    <member name="M:System.Web.OData.ETagMessageHandler.#ctor"></member>
    <member name="M:System.Web.OData.ETagMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)"></member>
    <member name="T:System.Web.OData.FeedContext">
      <summary>Contains context information about the feed currently being serialized.</summary>
    </member>
    <member name="M:System.Web.OData.FeedContext.#ctor"></member>
    <member name="P:System.Web.OData.FeedContext.EntitySetBase">
      <summary>Gets the <see cref="T:Microsoft.OData.Edm.IEdmEntitySetBase" /> this instance belongs to.</summary>
    </member>
    <member name="P:System.Web.OData.FeedContext.FeedInstance">
      <summary>Gets the value of this feed instance.</summary>
    </member>
    <member name="P:System.Web.OData.FeedContext.Request">
      <summary>Gets or sets the HTTP request that caused this instance to be generated.</summary>
    </member>
    <member name="P:System.Web.OData.FeedContext.RequestContext">
      <summary>Gets or sets the request context.</summary>
    </member>
    <member name="P:System.Web.OData.FeedContext.Url">
      <summary>Gets or sets the <see cref="T:System.Web.Http.Routing.UrlHelper" /> to be used for generating links while serializing this feed instance.</summary>
    </member>
    <member name="T:System.Web.OData.FromODataUriAttribute">
      <summary>An implementation of <see cref="T:System.Web.Http.ParameterBindingAttribute" /> that can bind URI parameters using OData conventions.</summary>
    </member>
    <member name="M:System.Web.OData.FromODataUriAttribute.#ctor"></member>
    <member name="M:System.Web.OData.FromODataUriAttribute.GetBinding(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>Gets the binding for a parameter.</summary>
      <returns>The <see cref="T:System.Web.Http.Controllers.HttpParameterBinding" /> that contains the binding.</returns>
      <param name="parameter">The parameter to bind.</param>
    </member>
    <member name="T:System.Web.OData.IDelta">
      <summary>
        <see cref="T:System.Web.OData.IDelta" /> allows and tracks changes to an object.</summary>
    </member>
    <member name="M:System.Web.OData.IDelta.Clear">
      <summary>Clears the <see cref="T:System.Web.OData.IDelta" />.</summary>
    </member>
    <member name="M:System.Web.OData.IDelta.GetChangedPropertyNames">
      <summary>Returns the Properties that have been modified through this IDelta as an enumerable of Property Names</summary>
    </member>
    <member name="M:System.Web.OData.IDelta.GetUnchangedPropertyNames">
      <summary>Returns the Properties that have not been modified through this IDelta as an enumerable of Property Names</summary>
    </member>
    <member name="M:System.Web.OData.IDelta.TryGetPropertyType(System.String,System.Type@)">
      <summary>Attempts to get the <see cref="T:System.Type" /> of the Property called <paramref name="name" /> from the underlying Entity.</summary>
      <returns>Returns true if the Property was found and false if not.</returns>
      <param name="name">The name of the Property</param>
      <param name="type">The type of the Property</param>
    </member>
    <member name="M:System.Web.OData.IDelta.TryGetPropertyValue(System.String,System.Object@)">
      <summary>Attempts to get the value of the Property called <paramref name="name" /> from the underlying Entity.</summary>
      <returns>Returns true if the Property was found and false if not.</returns>
      <param name="name">The name of the Property</param>
      <param name="value">The value of the Property</param>
    </member>
    <member name="M:System.Web.OData.IDelta.TrySetPropertyValue(System.String,System.Object)">
      <summary>Attempts to set the Property called <paramref name="name" /> to the <paramref name="value" /> specified.</summary>
      <returns>Returns true if successful and false if not.</returns>
      <param name="name">The name of the Property</param>
      <param name="value">The new value of the Property</param>
    </member>
    <member name="T:System.Web.OData.IEdmComplexObject">
      <summary>Represents an instance of an <see cref="T:Microsoft.OData.Edm.IEdmComplexType" />.</summary>
    </member>
    <member name="T:System.Web.OData.IEdmEntityObject">
      <summary>Represents an instance of an <see cref="T:Microsoft.OData.Edm.IEdmEntityType" />.</summary>
    </member>
    <member name="T:System.Web.OData.IEdmObject">
      <summary>Represents an instance of an <see cref="T:Microsoft.OData.Edm.IEdmType" />.</summary>
    </member>
    <member name="M:System.Web.OData.IEdmObject.GetEdmType">
      <summary>Gets the <see cref="T:Microsoft.OData.Edm.IEdmTypeReference" /> of this instance.</summary>
      <returns>The <see cref="T:Microsoft.OData.Edm.IEdmTypeReference" /> of this instance.</returns>
    </member>
    <member name="T:System.Web.OData.IEdmStructuredObject">
      <summary>Represents an instance of an <see cref="T:Microsoft.OData.Edm.IEdmStructuredType" />.</summary>
    </member>
    <member name="M:System.Web.OData.IEdmStructuredObject.TryGetPropertyValue(System.String,System.Object@)">
      <summary>Gets the value of the property with the given name.</summary>
      <returns>
        <see cref="true" /> if the instance contains the property with the given name; otherwise, <see cref="false" />.</returns>
      <param name="propertyName">The name of the property to get.</param>
      <param name="value">When this method returns, contains the value of the property with the given name, if the property is found; otherwise, <see cref="null" />. The parameter is passed uninitialized.</param>
    </member>
    <member name="T:System.Web.OData.MetadataController">
      <summary>Represents an <see cref="T:System.Web.Http.ApiController" /> for generating OData servicedoc and metadata document ($metadata).</summary>
    </member>
    <member name="M:System.Web.OData.MetadataController.#ctor"></member>
    <member name="M:System.Web.OData.MetadataController.GetMetadata">
      <summary>Generates the OData $metadata document.</summary>
      <returns>The <see cref="T:Microsoft.OData.Edm.IEdmModel" /> representing $metadata.</returns>
    </member>
    <member name="M:System.Web.OData.MetadataController.GetServiceDocument">
      <summary>Generates the OData service document.</summary>
      <returns>The service document for the service.</returns>
    </member>
    <member name="T:System.Web.OData.NullEdmComplexObject">
      <summary>Represents an <see cref="T:System.Web.OData.IEdmComplexObject" /> that is null.</summary>
    </member>
    <member name="M:System.Web.OData.NullEdmComplexObject.#ctor(Microsoft.OData.Edm.IEdmComplexTypeReference)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.NullEdmComplexObject" /> class.</summary>
      <param name="edmType">The EDM type of this object.</param>
    </member>
    <member name="M:System.Web.OData.NullEdmComplexObject.GetEdmType"></member>
    <member name="M:System.Web.OData.NullEdmComplexObject.TryGetPropertyValue(System.String,System.Object@)"></member>
    <member name="T:System.Web.OData.ODataActionParameters">
      <summary>ActionPayload holds the Parameter names and values provided by a client in a POST request to invoke a particular Action. The Parameter values are stored in the dictionary keyed using the Parameter name.</summary>
    </member>
    <member name="M:System.Web.OData.ODataActionParameters.#ctor"></member>
    <member name="T:System.Web.OData.ODataController">
      <summary>Defines a base class for OData controllers that support writing and reading data using the OData formats.</summary>
    </member>
    <member name="M:System.Web.OData.ODataController.#ctor"></member>
    <member name="M:System.Web.OData.ODataController.Created``1(``0)">
      <summary>Creates an action result with the specified values that is a response to a POST operation with an entity to an entity set.</summary>
      <returns>A <see cref="T:System.Web.OData.Results.CreatedODataResult`1" /> with the specified values.</returns>
      <param name="entity">The created entity.</param>
      <typeparam name="TEntity">The created entity type.</typeparam>
    </member>
    <member name="M:System.Web.OData.ODataController.Updated``1(``0)">
      <summary>Creates an action result with the specified values that is a response to a PUT, PATCH, or a MERGE operation on an OData entity.</summary>
      <returns>An <see cref="T:System.Web.OData.Results.UpdatedODataResult`1" /> with the specified values.</returns>
      <param name="entity">The updated entity.</param>
      <typeparam name="TEntity">The updated entity type.</typeparam>
    </member>
    <member name="T:System.Web.OData.ODataFormattingAttribute">
      <summary>An attribute to be placed on controllers that enables the OData formatters.</summary>
    </member>
    <member name="M:System.Web.OData.ODataFormattingAttribute.#ctor"></member>
    <member name="M:System.Web.OData.ODataFormattingAttribute.CreateODataFormatters">
      <summary>Creates the OData formatters.</summary>
      <returns>A collection of OData formatters.</returns>
    </member>
    <member name="M:System.Web.OData.ODataFormattingAttribute.Initialize(System.Web.Http.Controllers.HttpControllerSettings,System.Web.Http.Controllers.HttpControllerDescriptor)">
      <summary>Callback invoked to set per-controller overrides for this controllerDescriptor.</summary>
      <param name="controllerSettings">The controller settings to initialize.</param>
      <param name="controllerDescriptor">The controller descriptor. Note that the <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> can be associated with the derived controller type given that <see cref="T:System.Web.Http.Controllers.IControllerConfiguration" /> is inherited.</param>
    </member>
    <member name="T:System.Web.OData.ODataNullValueMessageHandler">
      <summary>Represents an <see cref="HttpMessageHandler" /> that converts null values in OData responses to HTTP NotFound responses or NoContent responses following the OData specification.</summary>
    </member>
    <member name="M:System.Web.OData.ODataNullValueMessageHandler.#ctor"></member>
    <member name="M:System.Web.OData.ODataNullValueMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)"></member>
    <member name="T:System.Web.OData.ODataQueryContext">
      <summary>This defines some context information used to perform query composition.</summary>
    </member>
    <member name="M:System.Web.OData.ODataQueryContext.#ctor(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmType,System.Web.OData.Routing.ODataPath)">
      <summary>Constructs an instance of <see cref="T:System.Web.OData.ODataQueryContext" /> with <see cref="T:Microsoft.OData.Edm.IEdmModel" />, element EDM type, and <see cref="T:System.Web.OData.Routing.ODataPath" />.</summary>
      <param name="model">The EDM model the given EDM type belongs to.</param>
      <param name="elementType">The EDM type of the element of the collection being queried.</param>
      <param name="path">The parsed <see cref="T:System.Web.OData.Routing.ODataPath" />.</param>
    </member>
    <member name="M:System.Web.OData.ODataQueryContext.#ctor(Microsoft.OData.Edm.IEdmModel,System.Type,System.Web.OData.Routing.ODataPath)">
      <summary>Constructs an instance of <see cref="T:System.Web.OData.ODataQueryContext" /> with <see cref="T:Microsoft.OData.Edm.IEdmModel" />, element CLR type, and <see cref="T:System.Web.OData.Routing.ODataPath" />.</summary>
      <param name="model">The EdmModel that includes the <see cref="T:Microsoft.OData.Edm.IEdmType" /> corresponding to the given <paramref name="elementClrType" />.</param>
      <param name="elementClrType">The CLR type of the element of the collection being queried.</param>
      <param name="path">The parsed <see cref="T:System.Web.OData.Routing.ODataPath" />.</param>
    </member>
    <member name="P:System.Web.OData.ODataQueryContext.ElementClrType">
      <summary>Gets the CLR type of the element.</summary>
    </member>
    <member name="P:System.Web.OData.ODataQueryContext.ElementType">
      <summary>Gets the <see cref="T:Microsoft.OData.Edm.IEdmType" /> of the element.</summary>
    </member>
    <member name="P:System.Web.OData.ODataQueryContext.Model">
      <summary>Gets the given <see cref="T:Microsoft.OData.Edm.IEdmModel" /> that contains the EntitySet.</summary>
    </member>
    <member name="P:System.Web.OData.ODataQueryContext.NavigationSource">
      <summary>Gets the <see cref="T:Microsoft.OData.Edm.IEdmNavigationSource" /> that contains the element.</summary>
    </member>
    <member name="P:System.Web.OData.ODataQueryContext.Path">
      <summary>Gets the <see cref="T:System.Web.OData.Routing.ODataPath" />.</summary>
    </member>
    <member name="T:System.Web.OData.ODataQueryParameterBindingAttribute">
      <summary>A <see cref="T:System.Web.Http.ParameterBindingAttribute" /> to bind parameters of type <see cref="T:System.Web.OData.Query.ODataQueryOptions" /> to the OData query from the incoming request.</summary>
    </member>
    <member name="M:System.Web.OData.ODataQueryParameterBindingAttribute.#ctor"></member>
    <member name="M:System.Web.OData.ODataQueryParameterBindingAttribute.GetBinding(System.Web.Http.Controllers.HttpParameterDescriptor)"></member>
    <member name="T:System.Web.OData.ODataRoutingAttribute">
      <summary>Defines a controller-level attribute that can be used to enable OData action selection based on routing conventions.</summary>
    </member>
    <member name="M:System.Web.OData.ODataRoutingAttribute.#ctor"></member>
    <member name="M:System.Web.OData.ODataRoutingAttribute.Initialize(System.Web.Http.Controllers.HttpControllerSettings,System.Web.Http.Controllers.HttpControllerDescriptor)">
      <summary>Callback invoked to set per-controller overrides for this controllerDescriptor.</summary>
      <param name="controllerSettings">The controller settings to initialize.</param>
      <param name="controllerDescriptor">The controller descriptor. Note that the <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> can be associated with the derived controller type given that <see cref="T:System.Web.Http.Controllers.IControllerConfiguration" /> is inherited.</param>
    </member>
    <member name="T:System.Web.OData.ODataUntypedActionParameters">
      <summary>ActionPayload holds the Parameter names and values provided by a client in a POST request to invoke a particular Action. The Parameter values are stored in the dictionary keyed using the Parameter name.</summary>
    </member>
    <member name="M:System.Web.OData.ODataUntypedActionParameters.#ctor(Microsoft.OData.Edm.IEdmAction)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.ODataUntypedActionParameters" /> class.</summary>
      <param name="action">The OData action of this parameters.</param>
    </member>
    <member name="P:System.Web.OData.ODataUntypedActionParameters.Action">
      <summary>Gets the OData action of this parameters.</summary>
    </member>
    <member name="T:System.Web.OData.PageResult">
      <summary>Represents a feed of entities that includes additional information that OData formats support.</summary>
    </member>
    <member name="M:System.Web.OData.PageResult.#ctor(System.Uri,System.Nullable{System.Int64})">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.PageResult" /> class.</summary>
      <param name="nextPageLink">The link for the next page of items in the feed.</param>
      <param name="count">The total count of items in the feed.</param>
    </member>
    <member name="P:System.Web.OData.PageResult.Count">
      <summary>Gets the total count of items in the feed.</summary>
    </member>
    <member name="P:System.Web.OData.PageResult.NextPageLink">
      <summary>Gets the link for the next page of items in the feed.</summary>
    </member>
    <member name="T:System.Web.OData.PageResult`1">
      <summary>Represents a feed of entities that includes additional information that OData formats support.</summary>
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.Web.OData.PageResult`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Uri,System.Nullable{System.Int64})">
      <summary>Creates a partial set of results - used when server driven paging is enabled.</summary>
      <param name="items">The subset of matching results that should be serialized in this page.</param>
      <param name="nextPageLink">A link to the next page of matching results (if more exists).</param>
      <param name="count">A total count of matching results so clients can know the number of matches on the server.</param>
    </member>
    <member name="M:System.Web.OData.PageResult`1.GetEnumerator">
      <summary>Returns an enumerator that iterates through a collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="P:System.Web.OData.PageResult`1.Items">
      <summary>Gets the collection of entities for this feed.</summary>
    </member>
    <member name="M:System.Web.OData.PageResult`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an enumerator that iterates through a collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="T:System.Web.OData.QueryableRestrictions">
      <summary>Represents a queryable restriction on an EDM property, including not filterable, not sortable, not navigable, not expandable or not countable.</summary>
    </member>
    <member name="M:System.Web.OData.QueryableRestrictions.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.QueryableRestrictions" /> class.</summary>
    </member>
    <member name="M:System.Web.OData.QueryableRestrictions.#ctor(System.Web.OData.Builder.PropertyConfiguration)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.QueryableRestrictions" /> class.</summary>
      <param name="propertyConfiguration">The PropertyConfiguration containing queryable restrictions.</param>
    </member>
    <member name="P:System.Web.OData.QueryableRestrictions.NonFilterable">
      <summary>Gets or sets whether the property is nonfilterable. default is false.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:System.Web.OData.QueryableRestrictions.NotCountable">
      <summary>Gets or sets whether the property is not countable. default is false.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:System.Web.OData.QueryableRestrictions.NotExpandable">
      <summary>Gets or sets whether the property is not expandable. default is false.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:System.Web.OData.QueryableRestrictions.NotFilterable">
      <summary>Gets or sets whether the property is not filterable. default is false.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:System.Web.OData.QueryableRestrictions.NotNavigable">
      <summary>Gets or sets whether the property is not navigable. default is false.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:System.Web.OData.QueryableRestrictions.NotSortable">
      <summary>Gets or sets whether the property is not sortable. default is false.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:System.Web.OData.QueryableRestrictions.Unsortable">
      <summary>Gets or sets whether the property is unsortable. default is false.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="T:System.Web.OData.QueryableRestrictionsAnnotation">
      <summary>Represents an annotation to add the queryable restrictions on an EDM property, including not filterable, not sortable, not navigable, not expandable or not countable.</summary>
    </member>
    <member name="M:System.Web.OData.QueryableRestrictionsAnnotation.#ctor(System.Web.OData.QueryableRestrictions)">
      <summary>Initializes a new instance of <see cref="T:System.Web.OData.QueryableRestrictionsAnnotation" /> class.</summary>
      <param name="restrictions">The queryable restrictions for the EDM property.</param>
    </member>
    <member name="P:System.Web.OData.QueryableRestrictionsAnnotation.Restrictions">
      <summary>Gets the restrictions for the EDM property.</summary>
    </member>
    <member name="T:System.Web.OData.TypedDelta">
      <summary>Represents a <see cref="T:System.Web.OData.Delta" /> that can be used when a backing CLR type exists for the entity type whose changes are tracked.</summary>
    </member>
    <member name="M:System.Web.OData.TypedDelta.#ctor"></member>
    <member name="P:System.Web.OData.TypedDelta.EntityType">
      <summary>Gets the actual type of the entity for which the changes are tracked.</summary>
    </member>
    <member name="P:System.Web.OData.TypedDelta.ExpectedClrType">
      <summary>Gets the expected type of the entity for which the changes are tracked.</summary>
    </member>
    <member name="T:System.Web.OData.Batch.ChangeSetRequestItem">
      <summary>Represents a ChangeSet request.</summary>
    </member>
    <member name="M:System.Web.OData.Batch.ChangeSetRequestItem.#ctor(System.Collections.Generic.IEnumerable{System.Net.Http.HttpRequestMessage})">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Batch.ChangeSetRequestItem" /> class.</summary>
      <param name="requests">The request messages in the ChangeSet.</param>
    </member>
    <member name="M:System.Web.OData.Batch.ChangeSetRequestItem.Dispose(System.Boolean)"></member>
    <member name="M:System.Web.OData.Batch.ChangeSetRequestItem.GetResourcesForDisposal">
      <summary>Gets the resources registered for dispose on each request messages of the ChangeSet.</summary>
      <returns>A collection of resources registered for dispose.</returns>
    </member>
    <member name="P:System.Web.OData.Batch.ChangeSetRequestItem.Requests">
      <summary>Gets the request messages in the ChangeSet.</summary>
    </member>
    <member name="M:System.Web.OData.Batch.ChangeSetRequestItem.SendRequestAsync(System.Net.Http.HttpMessageInvoker,System.Threading.CancellationToken)">
      <summary>Sends the ChangeSet request.</summary>
      <returns>A <see cref="T:System.Web.OData.Batch.ChangeSetResponseItem" />.</returns>
      <param name="invoker">The invoker.</param>
      <param name="cancellationToken">The token to monitor for cancellation requests.</param>
    </member>
    <member name="T:System.Web.OData.Batch.ChangeSetResponseItem">
      <summary>Represents a ChangeSet response.</summary>
    </member>
    <member name="M:System.Web.OData.Batch.ChangeSetResponseItem.#ctor(System.Collections.Generic.IEnumerable{System.Net.Http.HttpResponseMessage})">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Batch.ChangeSetResponseItem" /> class.</summary>
      <param name="responses">The response messages for the ChangeSet requests.</param>
    </member>
    <member name="M:System.Web.OData.Batch.ChangeSetResponseItem.Dispose(System.Boolean)"></member>
    <member name="P:System.Web.OData.Batch.ChangeSetResponseItem.Responses">
      <summary>Gets the response messages for the ChangeSet.</summary>
    </member>
    <member name="M:System.Web.OData.Batch.ChangeSetResponseItem.WriteResponseAsync(Microsoft.OData.Core.ODataBatchWriter,System.Threading.CancellationToken)">
      <summary>Writes the responses as a ChangeSet.</summary>
      <param name="writer">The <see cref="T:Microsoft.OData.Core.ODataBatchWriter" />.</param>
      <param name="cancellationToken">The token to monitor for cancellation requests.</param>
    </member>
    <member name="T:System.Web.OData.Batch.DefaultODataBatchHandler">
      <summary>Default implementation of <see cref="T:System.Web.OData.Batch.ODataBatchHandler" /> for handling OData batch request.</summary>
    </member>
    <member name="M:System.Web.OData.Batch.DefaultODataBatchHandler.#ctor(System.Web.Http.HttpServer)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Batch.DefaultODataBatchHandler" /> class.</summary>
      <param name="httpServer">The <see cref="T:System.Web.Http.HttpServer" /> for handling the individual batch requests.</param>
    </member>
    <member name="M:System.Web.OData.Batch.DefaultODataBatchHandler.ExecuteRequestMessagesAsync(System.Collections.Generic.IEnumerable{System.Web.OData.Batch.ODataBatchRequestItem},System.Threading.CancellationToken)">
      <summary>Executes the OData batch requests.</summary>
      <returns>A collection of <see cref="T:System.Web.OData.Batch.ODataBatchResponseItem" /> for the batch requests.</returns>
      <param name="requests">The collection of OData batch requests.</param>
      <param name="cancellationToken">The token to monitor for cancellation requests.</param>
    </member>
    <member name="M:System.Web.OData.Batch.DefaultODataBatchHandler.ParseBatchRequestsAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Converts the incoming OData batch request into a collection of request messages.</summary>
      <returns>A collection of <see cref="T:System.Web.OData.Batch.ODataBatchRequestItem" />.</returns>
      <param name="request">The request containing the batch request messages.</param>
      <param name="cancellationToken">The token to monitor for cancellation requests.</param>
    </member>
    <member name="M:System.Web.OData.Batch.DefaultODataBatchHandler.ProcessBatchAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)"></member>
    <member name="T:System.Web.OData.Batch.ODataBatchContent">
      <summary>Encapsulates a collection of OData batch responses.</summary>
    </member>
    <member name="M:System.Web.OData.Batch.ODataBatchContent.#ctor(System.Collections.Generic.IEnumerable{System.Web.OData.Batch.ODataBatchResponseItem})">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Batch.ODataBatchContent" /> class.</summary>
      <param name="responses">The batch responses.</param>
    </member>
    <member name="M:System.Web.OData.Batch.ODataBatchContent.#ctor(System.Collections.Generic.IEnumerable{System.Web.OData.Batch.ODataBatchResponseItem},Microsoft.OData.Core.ODataMessageWriterSettings)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Batch.ODataBatchContent" /> class.</summary>
      <param name="responses">The batch responses.</param>
      <param name="writerSettings">The <see cref="T:Microsoft.OData.Core.ODataMessageWriterSettings" />.</param>
    </member>
    <member name="M:System.Web.OData.Batch.ODataBatchContent.Dispose(System.Boolean)"></member>
    <member name="P:System.Web.OData.Batch.ODataBatchContent.Responses">
      <summary>Gets the batch responses.</summary>
    </member>
    <member name="M:System.Web.OData.Batch.ODataBatchContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)"></member>
    <member name="M:System.Web.OData.Batch.ODataBatchContent.TryComputeLength(System.Int64@)"></member>
    <member name="T:System.Web.OData.Batch.ODataBatchHandler">
      <summary>Defines the abstraction for handling OData batch requests.</summary>
    </member>
    <member name="M:System.Web.OData.Batch.ODataBatchHandler.#ctor(System.Web.Http.HttpServer)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Batch.ODataBatchHandler" /> class.</summary>
      <param name="httpServer">The <see cref="T:System.Web.Http.HttpServer" /> for handling the individual batch requests.</param>
    </member>
    <member name="M:System.Web.OData.Batch.ODataBatchHandler.CreateResponseMessageAsync(System.Collections.Generic.IEnumerable{System.Web.OData.Batch.ODataBatchResponseItem},System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Creates the batch response message.</summary>
      <returns>The batch response message.</returns>
      <param name="responses">The responses for the batch requests.</param>
      <param name="request">The original request containing all the batch requests.</param>
      <param name="cancellationToken">The token to monitor for cancellation requests.</param>
    </member>
    <member name="M:System.Web.OData.Batch.ODataBatchHandler.GetBaseUri(System.Net.Http.HttpRequestMessage)">
      <summary>Gets the base URI for the batched requests.</summary>
      <returns>The base URI.</returns>
      <param name="request">The original request containing all the batch requests.</param>
    </member>
    <member name="P:System.Web.OData.Batch.ODataBatchHandler.MessageQuotas">
      <summary>Gets the <see cref="T:Microsoft.OData.Core.ODataMessageQuotas" /> used for reading/writing the batch request/response.</summary>
    </member>
    <member name="P:System.Web.OData.Batch.ODataBatchHandler.ODataRouteName">
      <summary>Gets or sets the name of the OData route associated with this batch handler.</summary>
    </member>
    <member name="M:System.Web.OData.Batch.ODataBatchHandler.ValidateRequest(System.Net.Http.HttpRequestMessage)">
      <summary>Validates the incoming request that contains the batch request messages.</summary>
      <param name="request">The request containing the batch request messages.</param>
    </member>
    <member name="T:System.Web.OData.Batch.ODataBatchHttpRequestMessageExtensions">
      <summary>Provides extension methods for the <see cref="T:System.Net.Http.HttpRequestMessage" /> class.</summary>
    </member>
    <member name="M:System.Web.OData.Batch.ODataBatchHttpRequestMessageExtensions.GetODataBatchId(System.Net.Http.HttpRequestMessage)">
      <summary>Retrieves the Batch ID associated with the request.</summary>
      <returns>The Batch ID associated with this request, or null if there isn't one.</returns>
      <param name="request">The request.</param>
    </member>
    <member name="M:System.Web.OData.Batch.ODataBatchHttpRequestMessageExtensions.GetODataChangeSetId(System.Net.Http.HttpRequestMessage)">
      <summary>Retrieves the ChangeSet ID associated with the request.</summary>
      <returns>The ChangeSet ID associated with this request, or null if there isn't one.</returns>
      <param name="request">The request.</param>
    </member>
    <member name="M:System.Web.OData.Batch.ODataBatchHttpRequestMessageExtensions.GetODataContentId(System.Net.Http.HttpRequestMessage)">
      <summary>Retrieves the Content-ID associated with the sub-request of a batch.</summary>
      <returns>The Content-ID associated with this request, or null if there isn't one.</returns>
      <param name="request">The request.</param>
    </member>
    <member name="M:System.Web.OData.Batch.ODataBatchHttpRequestMessageExtensions.GetODataContentIdMapping(System.Net.Http.HttpRequestMessage)">
      <summary>Retrieves the Content-ID to Location mapping associated with the request.</summary>
      <returns>The Content-ID to Location mapping associated with this request, or null if there isn't one.</returns>
      <param name="request">The request.</param>
    </member>
    <member name="M:System.Web.OData.Batch.ODataBatchHttpRequestMessageExtensions.SetODataBatchId(System.Net.Http.HttpRequestMessage,System.Guid)">
      <summary>Associates a given Batch ID with the request.</summary>
      <param name="request">The request.</param>
      <param name="batchId">The Batch ID.</param>
    </member>
    <member name="M:System.Web.OData.Batch.ODataBatchHttpRequestMessageExtensions.SetODataChangeSetId(System.Net.Http.HttpRequestMessage,System.Guid)">
      <summary>Associates a given ChangeSet ID with the request.</summary>
      <param name="request">The request.</param>
      <param name="changeSetId">The ChangeSet ID.</param>
    </member>
    <member name="M:System.Web.OData.Batch.ODataBatchHttpRequestMessageExtensions.SetODataContentId(System.Net.Http.HttpRequestMessage,System.String)">
      <summary>Associates a given Content-ID with the sub-request of a batch.</summary>
      <param name="request">The request.</param>
      <param name="contentId">The Content-ID.</param>
    </member>
    <member name="M:System.Web.OData.Batch.ODataBatchHttpRequestMessageExtensions.SetODataContentIdMapping(System.Net.Http.HttpRequestMessage,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>Associates a given Content-ID to Location mapping with the request.</summary>
      <param name="request">The request.</param>
      <param name="contentIdMapping">The Content-ID to Location mapping.</param>
    </member>
    <member name="T:System.Web.OData.Batch.ODataBatchReaderExtensions">
      <summary>Provides extension methods for the <see cref="T:Microsoft.OData.Core.ODataBatchReader" /> class.</summary>
    </member>
    <member name="M:System.Web.OData.Batch.ODataBatchReaderExtensions.ReadChangeSetOperationRequestAsync(Microsoft.OData.Core.ODataBatchReader,System.Guid,System.Guid,System.Boolean)">
      <summary>Reads an Operation request in a ChangeSet.</summary>
      <returns>A <see cref="T:System.Net.Http.HttpRequestMessage" /> representing a ChangeSet operation</returns>
      <param name="reader">The <see cref="T:Microsoft.OData.Core.ODataBatchReader" />.</param>
      <param name="batchId">The Batch ID.</param>
      <param name="changeSetId">The ChangeSet ID.</param>
      <param name="bufferContentStream">if set to true then the request content stream will be buffered.</param>
    </member>
    <member name="M:System.Web.OData.Batch.ODataBatchReaderExtensions.ReadChangeSetOperationRequestAsync(Microsoft.OData.Core.ODataBatchReader,System.Guid,System.Guid,System.Boolean,System.Threading.CancellationToken)">
      <summary>Reads an Operation request in a ChangeSet.</summary>
      <returns>A <see cref="T:System.Net.Http.HttpRequestMessage" /> representing a ChangeSet operation</returns>
      <param name="reader">The <see cref="T:Microsoft.OData.Core.ODataBatchReader" />.</param>
      <param name="batchId">The Batch ID.</param>
      <param name="changeSetId">The ChangeSet ID.</param>
      <param name="bufferContentStream">if set to true then the request content stream will be buffered.</param>
      <param name="cancellationToken">The token to monitor for cancellation requests.</param>
    </member>
    <member name="M:System.Web.OData.Batch.ODataBatchReaderExtensions.ReadChangeSetRequestAsync(Microsoft.OData.Core.ODataBatchReader,System.Guid)">
      <summary>Reads a ChangeSet request.</summary>
      <returns>A collection of <see cref="T:System.Net.Http.HttpRequestMessage" /> in the ChangeSet.</returns>
      <param name="reader">The <see cref="T:Microsoft.OData.Core.ODataBatchReader" />.</param>
      <param name="batchId">The Batch Id.</param>
    </member>
    <member name="M:System.Web.OData.Batch.ODataBatchReaderExtensions.ReadChangeSetRequestAsync(Microsoft.OData.Core.ODataBatchReader,System.Guid,System.Threading.CancellationToken)">
      <summary>Reads a ChangeSet request.</summary>
      <returns>A collection of <see cref="T:System.Net.Http.HttpRequestMessage" /> in the ChangeSet.</returns>
      <param name="reader">The <see cref="T:Microsoft.OData.Core.ODataBatchReader" />.</param>
      <param name="batchId">The Batch Id.</param>
      <param name="cancellationToken">The token to monitor for cancellation requests.</param>
    </member>
    <member name="M:System.Web.OData.Batch.ODataBatchReaderExtensions.ReadOperationRequestAsync(Microsoft.OData.Core.ODataBatchReader,System.Guid,System.Boolean)">
      <summary>Reads an Operation request.</summary>
      <returns>A <see cref="T:System.Net.Http.HttpRequestMessage" /> representing the operation.</returns>
      <param name="reader">The <see cref="T:Microsoft.OData.Core.ODataBatchReader" />.</param>
      <param name="batchId">The Batch ID.</param>
      <param name="bufferContentStream">if set to true then the request content stream will be buffered.</param>
    </member>
    <member name="M:System.Web.OData.Batch.ODataBatchReaderExtensions.ReadOperationRequestAsync(Microsoft.OData.Core.ODataBatchReader,System.Guid,System.Boolean,System.Threading.CancellationToken)">
      <summary>Reads an Operation request.</summary>
      <returns>A <see cref="T:System.Net.Http.HttpRequestMessage" /> representing the operation.</returns>
      <param name="reader">The <see cref="T:Microsoft.OData.Core.ODataBatchReader" />.</param>
      <param name="batchId">The Batch ID.</param>
      <param name="bufferContentStream">if set to true then the request content stream will be buffered.</param>
      <param name="cancellationToken">The token to monitor for cancellation requests.</param>
    </member>
    <member name="T:System.Web.OData.Batch.ODataBatchRequestItem">
      <summary>Represents an OData batch request.</summary>
    </member>
    <member name="M:System.Web.OData.Batch.ODataBatchRequestItem.#ctor"></member>
    <member name="M:System.Web.OData.Batch.ODataBatchRequestItem.Dispose"></member>
    <member name="M:System.Web.OData.Batch.ODataBatchRequestItem.Dispose(System.Boolean)">
      <summary>Releases unmanaged and - optionally - managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="M:System.Web.OData.Batch.ODataBatchRequestItem.GetResourcesForDisposal">
      <summary>Gets the resources for disposal.</summary>
      <returns>A collection of resources for disposal.</returns>
    </member>
    <member name="M:System.Web.OData.Batch.ODataBatchRequestItem.SendMessageAsync(System.Net.Http.HttpMessageInvoker,System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken,System.Collections.Generic.Dictionary{System.String,System.String})">
      <summary>Sends a single OData batch request.</summary>
      <param name="invoker">The invoker.</param>
      <param name="request">The request.</param>
      <param name="cancellationToken">The token to monitor for cancellation requests.</param>
      <param name="contentIdToLocationMapping">The Content-ID to Location mapping.</param>
    </member>
    <member name="M:System.Web.OData.Batch.ODataBatchRequestItem.SendRequestAsync(System.Net.Http.HttpMessageInvoker,System.Threading.CancellationToken)">
      <summary>Sends the request.</summary>
      <returns>A <see cref="T:System.Web.OData.Batch.ODataBatchResponseItem" />.</returns>
      <param name="invoker">The invoker.</param>
      <param name="cancellationToken">The token to monitor for cancellation requests.</param>
    </member>
    <member name="T:System.Web.OData.Batch.ODataBatchResponseItem">
      <summary>Represents an OData batch response.</summary>
    </member>
    <member name="M:System.Web.OData.Batch.ODataBatchResponseItem.#ctor"></member>
    <member name="M:System.Web.OData.Batch.ODataBatchResponseItem.Dispose"></member>
    <member name="M:System.Web.OData.Batch.ODataBatchResponseItem.Dispose(System.Boolean)">
      <summary>Releases unmanaged and - optionally - managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="M:System.Web.OData.Batch.ODataBatchResponseItem.WriteMessageAsync(Microsoft.OData.Core.ODataBatchWriter,System.Net.Http.HttpResponseMessage)">
      <summary>Writes a single OData batch response.</summary>
      <returns>A task object representing writing the given batch response using the given writer.</returns>
      <param name="writer">The <see cref="T:Microsoft.OData.Core.ODataBatchWriter" />.</param>
      <param name="response">The response message.</param>
    </member>
    <member name="M:System.Web.OData.Batch.ODataBatchResponseItem.WriteMessageAsync(Microsoft.OData.Core.ODataBatchWriter,System.Net.Http.HttpResponseMessage,System.Threading.CancellationToken)">
      <summary>Writes a single OData batch response.</summary>
      <returns>A task object representing writing the given batch response using the given writer.</returns>
      <param name="writer">The <see cref="T:Microsoft.OData.Core.ODataBatchWriter" />.</param>
      <param name="response">The response message.</param>
      <param name="cancellationToken">The token to monitor for cancellation requests.</param>
    </member>
    <member name="M:System.Web.OData.Batch.ODataBatchResponseItem.WriteResponseAsync(Microsoft.OData.Core.ODataBatchWriter,System.Threading.CancellationToken)">
      <summary>Writes the response.</summary>
      <param name="writer">The <see cref="T:Microsoft.OData.Core.ODataBatchWriter" />.</param>
      <param name="cancellationToken">The token to monitor for cancellation requests.</param>
    </member>
    <member name="T:System.Web.OData.Batch.ODataHttpContentExtensions">
      <summary>Provides extension methods for the <see cref="T:System.Net.Http.HttpContent" /> class.</summary>
    </member>
    <member name="M:System.Web.OData.Batch.ODataHttpContentExtensions.GetODataMessageReaderAsync(System.Net.Http.HttpContent,Microsoft.OData.Core.ODataMessageReaderSettings)">
      <summary>Gets the <see cref="T:Microsoft.OData.Core.ODataMessageReader" /> for the <see cref="T:System.Net.Http.HttpContent" /> stream.</summary>
      <returns>A task object that produces an <see cref="T:Microsoft.OData.Core.ODataMessageReader" /> when completed.</returns>
      <param name="content">The <see cref="T:System.Net.Http.HttpContent" />.</param>
      <param name="settings">The <see cref="T:Microsoft.OData.Core.ODataMessageReaderSettings" />.</param>
    </member>
    <member name="M:System.Web.OData.Batch.ODataHttpContentExtensions.GetODataMessageReaderAsync(System.Net.Http.HttpContent,Microsoft.OData.Core.ODataMessageReaderSettings,System.Threading.CancellationToken)">
      <summary>Gets the <see cref="T:Microsoft.OData.Core.ODataMessageReader" /> for the <see cref="T:System.Net.Http.HttpContent" /> stream.</summary>
      <returns>A task object that produces an <see cref="T:Microsoft.OData.Core.ODataMessageReader" /> when completed.</returns>
      <param name="content">The <see cref="T:System.Net.Http.HttpContent" />.</param>
      <param name="settings">The <see cref="T:Microsoft.OData.Core.ODataMessageReaderSettings" />.</param>
      <param name="cancellationToken">The token to monitor for cancellation requests.</param>
    </member>
    <member name="T:System.Web.OData.Batch.OperationRequestItem">
      <summary>Represents an Operation request.</summary>
    </member>
    <member name="M:System.Web.OData.Batch.OperationRequestItem.#ctor(System.Net.Http.HttpRequestMessage)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Batch.OperationRequestItem" /> class.</summary>
      <param name="request">The Operation request.</param>
    </member>
    <member name="M:System.Web.OData.Batch.OperationRequestItem.Dispose(System.Boolean)"></member>
    <member name="M:System.Web.OData.Batch.OperationRequestItem.GetResourcesForDisposal">
      <summary>Gets the resources registered for dispose on the Operation request message.</summary>
      <returns>A collection of resources registered for dispose.</returns>
    </member>
    <member name="P:System.Web.OData.Batch.OperationRequestItem.Request">
      <summary>Gets the Operation request.</summary>
    </member>
    <member name="M:System.Web.OData.Batch.OperationRequestItem.SendRequestAsync(System.Net.Http.HttpMessageInvoker,System.Threading.CancellationToken)">
      <summary>Sends the Operation request.</summary>
      <returns>A <see cref="T:System.Web.OData.Batch.OperationResponseItem" />.</returns>
      <param name="invoker">The invoker.</param>
      <param name="cancellationToken">The token to monitor for cancellation requests.</param>
    </member>
    <member name="T:System.Web.OData.Batch.OperationResponseItem">
      <summary>Represents an Operation response.</summary>
    </member>
    <member name="M:System.Web.OData.Batch.OperationResponseItem.#ctor(System.Net.Http.HttpResponseMessage)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Batch.OperationResponseItem" /> class.</summary>
      <param name="response">The response messages for the Operation request.</param>
    </member>
    <member name="M:System.Web.OData.Batch.OperationResponseItem.Dispose(System.Boolean)"></member>
    <member name="P:System.Web.OData.Batch.OperationResponseItem.Response">
      <summary>Gets the response messages for the Operation.</summary>
    </member>
    <member name="M:System.Web.OData.Batch.OperationResponseItem.WriteResponseAsync(Microsoft.OData.Core.ODataBatchWriter,System.Threading.CancellationToken)">
      <summary>Writes the response as an Operation.</summary>
      <param name="writer">The <see cref="T:Microsoft.OData.Core.ODataBatchWriter" />.</param>
      <param name="cancellationToken">The token to monitor for cancellation requests.</param>
    </member>
    <member name="T:System.Web.OData.Batch.UnbufferedODataBatchHandler">
      <summary>An implementation of <see cref="T:System.Web.OData.Batch.ODataBatchHandler" /> that doesn't buffer the request content stream.</summary>
    </member>
    <member name="M:System.Web.OData.Batch.UnbufferedODataBatchHandler.#ctor(System.Web.Http.HttpServer)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Batch.UnbufferedODataBatchHandler" /> class.</summary>
      <param name="httpServer">The <see cref="T:System.Web.Http.HttpServer" /> for handling the individual batch requests.</param>
    </member>
    <member name="M:System.Web.OData.Batch.UnbufferedODataBatchHandler.ExecuteChangeSetAsync(Microsoft.OData.Core.ODataBatchReader,System.Guid,System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Executes the ChangeSet.</summary>
      <returns>The response for the ChangeSet.</returns>
      <param name="batchReader">The batch reader.</param>
      <param name="batchId">The batch id.</param>
      <param name="originalRequest">The original request containing all the batch requests.</param>
      <param name="cancellationToken">The token to monitor for cancellation requests.</param>
    </member>
    <member name="M:System.Web.OData.Batch.UnbufferedODataBatchHandler.ExecuteOperationAsync(Microsoft.OData.Core.ODataBatchReader,System.Guid,System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Executes the operation.</summary>
      <returns>The response for the operation.</returns>
      <param name="batchReader">The batch reader.</param>
      <param name="batchId">The batch id.</param>
      <param name="originalRequest">The original request containing all the batch requests.</param>
      <param name="cancellationToken">The token to monitor for cancellation requests.</param>
    </member>
    <member name="M:System.Web.OData.Batch.UnbufferedODataBatchHandler.ProcessBatchAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)"></member>
    <member name="T:System.Web.OData.Builder.ActionConfiguration">
      <summary>ActionConfiguration represents an OData action that you wish to expose via your service.</summary>
    </member>
    <member name="M:System.Web.OData.Builder.ActionConfiguration.GetActionLink">
      <summary>Retrieves the currently registered action link factory.</summary>
      <returns>The currently registered action link factory.</returns>
    </member>
    <member name="M:System.Web.OData.Builder.ActionConfiguration.HasActionLink(System.Func{System.Web.OData.EntityInstanceContext,System.Uri},System.Boolean)">
      <summary>Register a factory that creates actions links.</summary>
      <returns>A factory that crates actions links.</returns>
      <param name="actionLinkFactory">The actionLinkFactory this ActionLinkBuilder should use when building links.</param>
      <param name="followsConventions">A value indicating whether the action link factory generates links that follow OData conventions.</param>
    </member>
    <member name="P:System.Web.OData.Builder.ActionConfiguration.IsSideEffecting">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:System.Web.OData.Builder.ActionConfiguration.Kind">
      <summary>Gets the Kind of procedure, which can be either Action, Function or ServiceOperation.</summary>
      <returns>The Kind of procedure.</returns>
    </member>
    <member name="M:System.Web.OData.Builder.ActionConfiguration.Returns``1">
      <summary>Established the return type of the Action.</summary>
      <returns>The type of this <see cref="T:System.Web.OData.Builder.ActionConfiguration" />.</returns>
      <typeparam name="TReturnType">The type that is a ReturnType.</typeparam>
    </member>
    <member name="M:System.Web.OData.Builder.ActionConfiguration.ReturnsCollection``1">
      <summary>Establishes the return type of the Action Used when the return type is a collection of either Primitive or ComplexTypes.</summary>
      <returns>The return type of this <see cref="T:System.Web.OData.Builder.ActionConfiguration" />.</returns>
      <typeparam name="TReturnElementType">The type of this ReturnElementType.</typeparam>
    </member>
    <member name="M:System.Web.OData.Builder.ActionConfiguration.ReturnsCollectionFromEntitySet``1(System.String)">
      <summary>Sets the return type to a collection of EntityType instances.</summary>
      <returns>The return type of this <see cref="T:System.Web.OData.Builder.ActionConfiguration" />.</returns>
      <param name="entitySetName">The entitySetName which contains the returned EntityType instances</param>
      <typeparam name="TElementEntityType">The type that is an EntityType</typeparam>
    </member>
    <member name="M:System.Web.OData.Builder.ActionConfiguration.ReturnsCollectionFromEntitySet``1(System.Web.OData.Builder.EntitySetConfiguration{``0})">
      <summary>Sets the return type to a collection of entities.</summary>
      <returns>Returns <see cref="T:System.Web.OData.Builder.ActionConfiguration" />.</returns>
      <param name="entitySetConfiguration">The entity set which contains the returned entities.</param>
      <typeparam name="TElementEntityType">The entity type.</typeparam>
    </member>
    <member name="M:System.Web.OData.Builder.ActionConfiguration.ReturnsCollectionViaEntitySetPath``1(System.String)">
      <summary>Sets the return type to a collection of EntityType instances.</summary>
      <returns>Returns <see cref="T:System.Web.OData.Builder.ActionConfiguration" />.</returns>
      <param name="entitySetPath">The entitySetPath which contains the returned EntityType instances</param>
      <typeparam name="TElementEntityType">The type that is an EntityType</typeparam>
    </member>
    <member name="M:System.Web.OData.Builder.ActionConfiguration.ReturnsCollectionViaEntitySetPath``1(System.String[])">
      <summary>Sets the return type to a collection of EntityType instances.</summary>
      <returns>Returns <see cref="T:System.Web.OData.Builder.ActionConfiguration" />.</returns>
      <param name="entitySetPath">The entitySetPath which contains the returned EntityType instances</param>
      <typeparam name="TElementEntityType">The type that is an EntityType</typeparam>
    </member>
    <member name="M:System.Web.OData.Builder.ActionConfiguration.ReturnsEntityViaEntitySetPath``1(System.String)">
      <summary>Sets the return type to a single EntityType instance.</summary>
      <returns>Returns <see cref="T:System.Web.OData.Builder.ActionConfiguration" />.</returns>
      <param name="entitySetPath">The entitySetPath which contains the return EntityType instance</param>
      <typeparam name="TEntityType">The type that is an EntityType</typeparam>
    </member>
    <member name="M:System.Web.OData.Builder.ActionConfiguration.ReturnsEntityViaEntitySetPath``1(System.String[])">
      <summary>Sets the return type to a single EntityType instance.</summary>
      <returns>Returns <see cref="T:System.Web.OData.Builder.ActionConfiguration" />.</returns>
      <param name="entitySetPath">The entitySetPath which contains the return EntityType instance</param>
      <typeparam name="TEntityType">The type that is an EntityType</typeparam>
    </member>
    <member name="M:System.Web.OData.Builder.ActionConfiguration.ReturnsFromEntitySet``1(System.String)">
      <summary>Sets the return type to a single EntityType instance.</summary>
      <returns>The return type of this <see cref="T:System.Web.OData.Builder.ActionConfiguration" />.</returns>
      <param name="entitySetName">The entitySetName which contains the return EntityType instance</param>
      <typeparam name="TEntityType">The type that is an EntityType</typeparam>
    </member>
    <member name="M:System.Web.OData.Builder.ActionConfiguration.ReturnsFromEntitySet``1(System.Web.OData.Builder.EntitySetConfiguration{``0})">
      <summary>Sets the return type to a single EntityType instance.</summary>
      <returns>Returns <see cref="T:System.Web.OData.Builder.ActionConfiguration" />.</returns>
      <param name="entitySetConfiguration">The entity set which contains the returned entity.</param>
      <typeparam name="TEntityType">The type that is an EntityType.</typeparam>
    </member>
    <member name="M:System.Web.OData.Builder.ActionConfiguration.SetBindingParameter(System.String,System.Web.OData.Builder.IEdmTypeConfiguration)">
      <summary>Specifies the bindingParameter name, type and whether it is alwaysBindable, use only if the Action "isBindable".</summary>
    </member>
    <member name="T:System.Web.OData.Builder.ActionLinkBuilder">
      <summary>ActionLinkBuilder can be used to annotate an Action. This is how formatters create links to invoke bound actions.</summary>
    </member>
    <member name="M:System.Web.OData.Builder.ActionLinkBuilder.#ctor(System.Func{System.Web.OData.EntityInstanceContext,System.Uri},System.Boolean)">
      <summary>Create a new ActionLinkBuilder based on an actionLinkFactory.</summary>
      <param name="actionLinkFactory">The actionLinkFactory this ActionLinkBuilder should use when building links.</param>
      <param name="followsConventions">A value indicating whether the action link factory generates links that follow OData conventions.</param>
    </member>
    <member name="M:System.Web.OData.Builder.ActionLinkBuilder.BuildActionLink(System.Web.OData.EntityInstanceContext)">
      <summary>Builds the action link for the given entity.</summary>
      <returns>The generated action link.</returns>
      <param name="context">An instance context wrapping the entity instance.</param>
    </member>
    <member name="M:System.Web.OData.Builder.ActionLinkBuilder.CreateActionLinkFactory(System.Func{System.Web.OData.EntityInstanceContext,System.Uri},System.Func{System.Web.OData.EntityInstanceContext,System.Boolean})">
      <summary>Creates an action link factory that builds an action link, but only when appropriate based on the expensiveAvailabilityCheck, and whether expensive checks should be made, which is deduced by looking at the EntityInstanceContext.SkipExpensiveActionAvailabilityChecks property.</summary>
      <returns>The new action link factory.</returns>
      <param name="baseFactory">The action link factory that actually builds links if all checks pass.</param>
      <param name="expensiveAvailabilityCheck">The availability check function that is expensive but when called returns whether the action is available.</param>
    </member>
    <member name="P:System.Web.OData.Builder.ActionLinkBuilder.FollowsConventions">
      <summary>Gets a boolean indicating whether the link factory follows OData conventions or not.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="T:System.Web.OData.Builder.BindingParameterConfiguration">
      <summary>Represents a BindingParameter.</summary>
    </member>
    <member name="M:System.Web.OData.Builder.BindingParameterConfiguration.#ctor(System.String,System.Web.OData.Builder.IEdmTypeConfiguration)">
      <summary>Create a BindingParameterConfiguration</summary>
      <param name="name">The name of the Binding Parameter</param>
      <param name="parameterType">The type of the Binding Parameter</param>
    </member>
    <member name="F:System.Web.OData.Builder.BindingParameterConfiguration.DefaultBindingParameterName">
      <summary>The default parameter name for an action’s binding parameter.</summary>
    </member>
    <member name="T:System.Web.OData.Builder.CollectionPropertyConfiguration">
      <summary>CollectionPropertyConfiguration represents a CollectionProperty on either an EntityType or ComplexType.</summary>
    </member>
    <member name="M:System.Web.OData.Builder.CollectionPropertyConfiguration.#ctor(System.Reflection.PropertyInfo,System.Web.OData.Builder.StructuralTypeConfiguration)">
      <summary>Constructs a CollectionPropertyConfiguration using the <paramref name="property" /> provided.</summary>
    </member>
    <member name="P:System.Web.OData.Builder.CollectionPropertyConfiguration.ElementType">
      <summary>Returns the type of Elements in the Collection</summary>
    </member>
    <member name="M:System.Web.OData.Builder.CollectionPropertyConfiguration.IsOptional">
      <summary>Sets the CollectionProperty to optional (i.e. nullable).</summary>
    </member>
    <member name="M:System.Web.OData.Builder.CollectionPropertyConfiguration.IsRequired">
      <summary>Sets the CollectionProperty to required (i.e. non-nullable).</summary>
    </member>
    <member name="P:System.Web.OData.Builder.CollectionPropertyConfiguration.Kind"></member>
    <member name="P:System.Web.OData.Builder.CollectionPropertyConfiguration.RelatedClrType"></member>
    <member name="T:System.Web.OData.Builder.CollectionTypeConfiguration">
      <summary>Represents a Collection of some named type.</summary>
    </member>
    <member name="M:System.Web.OData.Builder.CollectionTypeConfiguration.#ctor(System.Web.OData.Builder.IEdmTypeConfiguration,System.Type)">
      <summary>Constructs a collection that contains elements of the specified ElementType and that is represented in CLR using the specified clrType.</summary>
      <param name="elementType">The EdmTypeConfiguration of the elements in the collection</param>
      <param name="clrType">The type of this collection when manifested in CLR.</param>
    </member>
    <member name="P:System.Web.OData.Builder.CollectionTypeConfiguration.ClrType">
      <summary>Gets the CLR type associated with this collection type.</summary>
    </member>
    <member name="P:System.Web.OData.Builder.CollectionTypeConfiguration.ElementType">
      <summary>Gets the <see cref="T:System.Web.OData.Builder.IEdmTypeConfiguration" /> of elements in this collection.</summary>
    </member>
    <member name="P:System.Web.OData.Builder.CollectionTypeConfiguration.FullName">
      <summary>Gets the fullname (including namespace) of this collection type.</summary>
    </member>
    <member name="P:System.Web.OData.Builder.CollectionTypeConfiguration.Kind">
      <summary>Gets the kind of the <see cref="T:Microsoft.OData.Edm.IEdmType" />. In this case, it is <see cref="F:Microsoft.OData.Edm.EdmTypeKind.Collection" />.</summary>
    </member>
    <member name="P:System.Web.OData.Builder.CollectionTypeConfiguration.ModelBuilder">
      <summary>Gets the <see cref="T:System.Web.OData.Builder.ODataModelBuilder" /> used to create this configuration.</summary>
    </member>
    <member name="P:System.Web.OData.Builder.CollectionTypeConfiguration.Name">
      <summary>Gets the name of this collection type.</summary>
    </member>
    <member name="P:System.Web.OData.Builder.CollectionTypeConfiguration.Namespace">
      <summary>Gets the namespace of this collection type.</summary>
    </member>
    <member name="T:System.Web.OData.Builder.ComplexPropertyConfiguration">
      <summary>Represents the configuration for a complex property of a structural type (an entity type or a complex type).</summary>
    </member>
    <member name="M:System.Web.OData.Builder.ComplexPropertyConfiguration.#ctor(System.Reflection.PropertyInfo,System.Web.OData.Builder.StructuralTypeConfiguration)">
      <summary>Instantiates a new instance of the <see cref="T:System.Web.OData.Builder.ComplexPropertyConfiguration" /> class.</summary>
      <param name="property">The property of the configuration.</param>
      <param name="declaringType">The declaring type of the property.</param>
    </member>
    <member name="M:System.Web.OData.Builder.ComplexPropertyConfiguration.IsOptional">
      <summary>Marks the current complex property as optional.</summary>
      <returns>Returns itself so that multiple calls can be chained.</returns>
    </member>
    <member name="M:System.Web.OData.Builder.ComplexPropertyConfiguration.IsRequired">
      <summary>Marks the current complex property as required.</summary>
      <returns>Returns itself so that multiple calls can be chained.</returns>
    </member>
    <member name="P:System.Web.OData.Builder.ComplexPropertyConfiguration.Kind"></member>
    <member name="P:System.Web.OData.Builder.ComplexPropertyConfiguration.RelatedClrType"></member>
    <member name="T:System.Web.OData.Builder.ComplexTypeConfiguration">
      <summary>Allows configuration to be performed for a complex type in a model. A ComplexTypeConfiguration can be obtained by using the method <see cref="M:System.Web.OData.Builder.ODataModelBuilder.ComplexType``1" />.</summary>
    </member>
    <member name="M:System.Web.OData.Builder.ComplexTypeConfiguration.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Builder.ComplexTypeConfiguration" /> class.</summary>
    </member>
    <member name="M:System.Web.OData.Builder.ComplexTypeConfiguration.#ctor(System.Web.OData.Builder.ODataModelBuilder,System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Builder.ComplexTypeConfiguration" /> class.</summary>
      <param name="modelBuilder">The <see cref="T:System.Web.OData.Builder.ODataModelBuilder" /> being used.</param>
      <param name="clrType">The backing CLR type for this entity type.</param>
    </member>
    <member name="M:System.Web.OData.Builder.ComplexTypeConfiguration.Abstract">
      <summary>Marks this complex type as abstract.</summary>
      <returns>Returns itself so that multiple calls can be chained.</returns>
    </member>
    <member name="P:System.Web.OData.Builder.ComplexTypeConfiguration.BaseType">
      <summary>Gets or sets the base type of this complex type.</summary>
    </member>
    <member name="M:System.Web.OData.Builder.ComplexTypeConfiguration.DerivesFrom(System.Web.OData.Builder.ComplexTypeConfiguration)">
      <summary>Sets the base type of this complex type.</summary>
      <returns>Returns itself so that multiple calls can be chained.</returns>
      <param name="baseType">The base complex type.</param>
    </member>
    <member name="M:System.Web.OData.Builder.ComplexTypeConfiguration.DerivesFromNothing">
      <summary>Sets the base type of this complex type to null meaning that this complex type does not derive from anything.</summary>
      <returns>Returns itself so that multiple calls can be chained.</returns>
    </member>
    <member name="P:System.Web.OData.Builder.ComplexTypeConfiguration.Kind"></member>
    <member name="T:System.Web.OData.Builder.ComplexTypeConfiguration`1">
      <summary>Represents an <see cref="T:Microsoft.OData.Edm.IEdmComplexType" /> that can be built using <see cref="T:System.Web.OData.Builder.ODataModelBuilder" />.</summary>
      <typeparam name="TComplexType"></typeparam>
    </member>
    <member name="M:System.Web.OData.Builder.ComplexTypeConfiguration`1.Abstract">
      <summary>Marks this complex type as abstract.</summary>
      <returns>Returns itself so that multiple calls can be chained.</returns>
    </member>
    <member name="P:System.Web.OData.Builder.ComplexTypeConfiguration`1.BaseType">
      <summary>Gets the base type of this complex type.</summary>
    </member>
    <member name="M:System.Web.OData.Builder.ComplexTypeConfiguration`1.DerivesFrom``1">
      <summary>Sets the base type of this complex type.</summary>
      <returns>Returns itself so that multiple calls can be chained.</returns>
      <typeparam name="TBaseType">The base complex type.</typeparam>
    </member>
    <member name="M:System.Web.OData.Builder.ComplexTypeConfiguration`1.DerivesFromNothing">
      <summary>Sets the base type of this complex type to null meaning that this complex type does not derive from anything.</summary>
      <returns>Returns itself so that multiple calls can be chained.</returns>
    </member>
    <member name="T:System.Web.OData.Builder.ContainedAttribute">
      <summary>Mark a navigation property as containment.</summary>
    </member>
    <member name="M:System.Web.OData.Builder.ContainedAttribute.#ctor"></member>
    <member name="T:System.Web.OData.Builder.DynamicPropertyDictionaryAnnotation">
      <summary>This annotation indicates the mapping from a <see cref="T:Microsoft.OData.Edm.IEdmStructuredType" /> to a <see cref="P:System.Web.OData.Builder.DynamicPropertyDictionaryAnnotation.PropertyInfo" />. The <see cref="T:Microsoft.OData.Edm.IEdmStructuredType" /> is an open type and the <see cref="P:System.Web.OData.Builder.DynamicPropertyDictionaryAnnotation.PropertyInfo" /> is the specific property which is used in an open type to save/retrieve the dynamic properties.</summary>
    </member>
    <member name="M:System.Web.OData.Builder.DynamicPropertyDictionaryAnnotation.#ctor(System.Reflection.PropertyInfo)">
      <summary>Initializes a new instance of <see cref="T:System.Web.OData.Builder.DynamicPropertyDictionaryAnnotation" /> class.</summary>
      <param name="propertyInfo">The backing <see cref="P:System.Web.OData.Builder.DynamicPropertyDictionaryAnnotation.PropertyInfo" />.</param>
    </member>
    <member name="P:System.Web.OData.Builder.DynamicPropertyDictionaryAnnotation.PropertyInfo">
      <summary>Gets the <see cref="P:System.Web.OData.Builder.DynamicPropertyDictionaryAnnotation.PropertyInfo" /> which backs the dynamic properties of the open type.</summary>
    </member>
    <member name="T:System.Web.OData.Builder.EntityCollectionConfiguration`1">
      <summary>EntityCollectionConfiguration represents a Collection of Entities. This class can be used to configure things that get bound to entities, like Actions bound to a collection.</summary>
      <typeparam name="TEntityType">The EntityType that is the ElementType of the EntityCollection</typeparam>
    </member>
    <member name="M:System.Web.OData.Builder.EntityCollectionConfiguration`1.Action(System.String)">
      <summary>Creates a new Action that binds to Collection(EntityType).</summary>
      <returns>An <see cref="T:System.Web.OData.Builder.ActionConfiguration" /> to allow further configuration of the Action.</returns>
      <param name="name">The name of the Action</param>
    </member>
    <member name="M:System.Web.OData.Builder.EntityCollectionConfiguration`1.Function(System.String)">
      <summary>Creates a new Function that binds to Collection(EntityType).</summary>
      <returns>A <see cref="T:System.Web.OData.Builder.FunctionConfiguration" /> to allow further configuration of the Function.</returns>
      <param name="name">The name of the Function</param>
    </member>
    <member name="T:System.Web.OData.Builder.EntitySetConfiguration">
      <summary>Allows configuration to be performed for an entity set in a model. A <see cref="T:System.Web.OData.Builder.EntitySetConfiguration" /> can be obtained by using the method <see cref="M:System.Web.OData.Builder.ODataModelBuilder.EntitySet``1(System.String)" />.</summary>
    </member>
    <member name="M:System.Web.OData.Builder.EntitySetConfiguration.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Builder.EntitySetConfiguration" /> class. The default constructor is intended for use by unit testing only.</summary>
    </member>
    <member name="M:System.Web.OData.Builder.EntitySetConfiguration.#ctor(System.Web.OData.Builder.ODataModelBuilder,System.Type,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Builder.EntitySetConfiguration" /> class.</summary>
      <param name="modelBuilder">The <see cref="T:System.Web.OData.Builder.ODataModelBuilder" />.</param>
      <param name="entityClrType">The <see cref="T:System.Type" /> of the entity type contained in this entity set.</param>
      <param name="name">The name of the entity set.</param>
    </member>
    <member name="M:System.Web.OData.Builder.EntitySetConfiguration.#ctor(System.Web.OData.Builder.ODataModelBuilder,System.Web.OData.Builder.EntityTypeConfiguration,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Builder.EntitySetConfiguration" /> class.</summary>
      <param name="modelBuilder">The <see cref="T:System.Web.OData.Builder.ODataModelBuilder" />.</param>
      <param name="entityType">The entity type <see cref="T:System.Web.OData.Builder.EntityTypeConfiguration" /> contained in this entity set.</param>
      <param name="name">The name of the entity set.</param>
    </member>
    <member name="M:System.Web.OData.Builder.EntitySetConfiguration.GetFeedSelfLink">
      <summary>Gets the builder used to generate self links for feeds for this navigation source.</summary>
      <returns>The link builder.</returns>
    </member>
    <member name="M:System.Web.OData.Builder.EntitySetConfiguration.HasFeedSelfLink(System.Func{System.Web.OData.FeedContext,System.Uri})">
      <summary>Adds a self link to the feed.</summary>
      <returns>The navigation source configuration currently being configured.</returns>
      <param name="feedSelfLinkFactory">The builder used to generate the link URL.</param>
    </member>
    <member name="T:System.Web.OData.Builder.EntitySetConfiguration`1">
      <typeparam name="TEntityType">The element type of the entity set.</typeparam>
    </member>
    <member name="M:System.Web.OData.Builder.EntitySetConfiguration`1.HasFeedSelfLink(System.Func{System.Web.OData.FeedContext,System.String})">
      <summary>Adds a self link to the feed.</summary>
      <param name="feedSelfLinkFactory">The builder used to generate the link URL.</param>
    </member>
    <member name="M:System.Web.OData.Builder.EntitySetConfiguration`1.HasFeedSelfLink(System.Func{System.Web.OData.FeedContext,System.Uri})">
      <summary>Adds a self link to the feed.</summary>
      <param name="feedSelfLinkFactory">The builder used to generate the link URL.</param>
    </member>
    <member name="T:System.Web.OData.Builder.EntityTypeConfiguration">
      <summary>Represents an <see cref="T:Microsoft.OData.Edm.IEdmEntityType" /> that can be built using <see cref="T:System.Web.OData.Builder.ODataModelBuilder" />.</summary>
    </member>
    <member name="M:System.Web.OData.Builder.EntityTypeConfiguration.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Builder.EntityTypeConfiguration" /> class.</summary>
    </member>
    <member name="M:System.Web.OData.Builder.EntityTypeConfiguration.#ctor(System.Web.OData.Builder.ODataModelBuilder,System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Builder.EntityTypeConfiguration" /> class.</summary>
      <param name="modelBuilder">The <see cref="T:System.Web.OData.Builder.ODataModelBuilder" /> being used.</param>
      <param name="clrType">The backing CLR type for this entity type.</param>
    </member>
    <member name="M:System.Web.OData.Builder.EntityTypeConfiguration.Abstract">
      <summary>Marks this entity type as abstract.</summary>
      <returns>Returns itself so that multiple calls can be chained.</returns>
    </member>
    <member name="M:System.Web.OData.Builder.EntityTypeConfiguration.AddContainedNavigationProperty(System.Reflection.PropertyInfo,Microsoft.OData.Edm.EdmMultiplicity)">
      <summary>Adds a contained EDM navigation property to this entity type.</summary>
      <returns>Returns the <see cref="T:System.Web.OData.Builder.NavigationPropertyConfiguration" /> of the added property.</returns>
      <param name="navigationProperty">The backing CLR property.</param>
      <param name="multiplicity">The <see cref="T:Microsoft.OData.Edm.EdmMultiplicity" /> of the navigation property.</param>
    </member>
    <member name="M:System.Web.OData.Builder.EntityTypeConfiguration.AddNavigationProperty(System.Reflection.PropertyInfo,Microsoft.OData.Edm.EdmMultiplicity)">
      <summary>Adds a non-contained EDM navigation property to this entity type.</summary>
      <returns>Returns the <see cref="T:System.Web.OData.Builder.NavigationPropertyConfiguration" /> of the added property.</returns>
      <param name="navigationProperty">The backing CLR property.</param>
      <param name="multiplicity">The <see cref="T:Microsoft.OData.Edm.EdmMultiplicity" /> of the navigation property.</param>
    </member>
    <member name="P:System.Web.OData.Builder.EntityTypeConfiguration.BaseType">
      <summary>Gets or sets the base type of this entity type.</summary>
    </member>
    <member name="M:System.Web.OData.Builder.EntityTypeConfiguration.DerivesFrom(System.Web.OData.Builder.EntityTypeConfiguration)">
      <summary>Sets the base type of this entity type.</summary>
      <returns>Returns itself so that multiple calls can be chained.</returns>
      <param name="baseType">The base entity type.</param>
    </member>
    <member name="M:System.Web.OData.Builder.EntityTypeConfiguration.DerivesFromNothing">
      <summary>Sets the base type of this entity type to null meaning that this entity type does not derive from anything.</summary>
      <returns>Returns itself so that multiple calls can be chained.</returns>
    </member>
    <member name="M:System.Web.OData.Builder.EntityTypeConfiguration.HasKey(System.Reflection.PropertyInfo)">
      <summary>Configures the key property(s) for this entity type.</summary>
      <returns>Returns itself so that multiple calls can be chained.</returns>
      <param name="keyProperty">The property to be added to the key properties of this entity type.</param>
    </member>
    <member name="P:System.Web.OData.Builder.EntityTypeConfiguration.Keys">
      <summary>Gets the collection of keys for this entity type.</summary>
    </member>
    <member name="P:System.Web.OData.Builder.EntityTypeConfiguration.Kind">
      <summary>Gets the <see cref="T:Microsoft.OData.Edm.EdmTypeKind" /> of this <see cref="T:System.Web.OData.Builder.IEdmTypeConfiguration" /></summary>
    </member>
    <member name="P:System.Web.OData.Builder.EntityTypeConfiguration.NavigationProperties">
      <summary>Gets the collection of <see cref="T:System.Web.OData.Builder.NavigationPropertyConfiguration" /> of this entity type.</summary>
    </member>
    <member name="M:System.Web.OData.Builder.EntityTypeConfiguration.RemoveKey(System.Web.OData.Builder.PrimitivePropertyConfiguration)">
      <summary>Removes the property from the entity keys collection.</summary>
      <param name="keyProperty">The key to be removed.</param>
    </member>
    <member name="M:System.Web.OData.Builder.EntityTypeConfiguration.RemoveProperty(System.Reflection.PropertyInfo)">
      <summary>Removes the property from the entity.</summary>
      <param name="propertyInfo">The <see cref="T:System.Reflection.PropertyInfo" /> of the property to be removed.</param>
    </member>
    <member name="T:System.Web.OData.Builder.EntityTypeConfiguration`1">
      <summary>Represents an <see cref="T:Microsoft.OData.Edm.IEdmEntityType" /> that can be built using <see cref="T:System.Web.OData.Builder.ODataModelBuilder" />.</summary>
      <typeparam name="TEntityType">The backing CLR type for this <see cref="T:Microsoft.OData.Edm.IEdmEntityType" />.</typeparam>
    </member>
    <member name="M:System.Web.OData.Builder.EntityTypeConfiguration`1.Abstract">
      <summary>Marks this entity type as abstract.</summary>
      <returns>Returns itself so that multiple calls can be chained.</returns>
    </member>
    <member name="M:System.Web.OData.Builder.EntityTypeConfiguration`1.Action(System.String)">
      <summary>Create an Action that binds to this EntityType.</summary>
      <returns>The ActionConfiguration to allow further configuration of the new Action.</returns>
      <param name="name">The name of the action.</param>
    </member>
    <member name="P:System.Web.OData.Builder.EntityTypeConfiguration`1.BaseType">
      <summary>Gets the base type of this entity type.</summary>
    </member>
    <member name="P:System.Web.OData.Builder.EntityTypeConfiguration`1.Collection">
      <summary>Used to access a Collection of Entities through which you can configure actions and functions that are bindable to EntityCollections.</summary>
    </member>
    <member name="M:System.Web.OData.Builder.EntityTypeConfiguration`1.ContainsMany``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})">
      <summary>Configures a relationship from this entity type to a contained collection navigation property.</summary>
      <returns>A configuration object that can be used to further configure the relationship.</returns>
      <param name="navigationPropertyExpression">A lambda expression representing the navigation property for the relationship. For example, in C# t =&gt; t.MyProperty and in Visual Basic .NET Function(t) t.MyProperty.</param>
      <typeparam name="TTargetEntity">The type of the entity at the other end of the relationship.</typeparam>
    </member>
    <member name="M:System.Web.OData.Builder.EntityTypeConfiguration`1.ContainsOptional``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>Configures an optional relationship from this entity type to a single contained navigation property.</summary>
      <returns>A configuration object that can be used to further configure the relationship.</returns>
      <param name="navigationPropertyExpression">A lambda expression representing the navigation property for the relationship. For example, in C# t =&gt; t.MyProperty and in Visual Basic .NET Function(t) t.MyProperty.</param>
      <typeparam name="TTargetEntity">The type of the entity at the other end of the relationship.</typeparam>
    </member>
    <member name="M:System.Web.OData.Builder.EntityTypeConfiguration`1.ContainsRequired``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>Configures a required relationship from this entity type to a single contained navigation property.</summary>
      <returns>A configuration object that can be used to further configure the relationship.</returns>
      <param name="navigationPropertyExpression">A lambda expression representing the navigation property for the relationship. For example, in C# t =&gt; t.MyProperty and in Visual Basic .NET Function(t) t.MyProperty.</param>
      <typeparam name="TTargetEntity">The type of the entity at the other end of the relationship.</typeparam>
    </member>
    <member name="M:System.Web.OData.Builder.EntityTypeConfiguration`1.DerivesFrom``1">
      <summary>Sets the base type of this entity type.</summary>
      <returns>Returns itself so that multiple calls can be chained.</returns>
      <typeparam name="TBaseType">The base entity type.</typeparam>
    </member>
    <member name="M:System.Web.OData.Builder.EntityTypeConfiguration`1.DerivesFromNothing">
      <summary>Sets the base type of this entity type to null meaning that this entity type does not derive from anything.</summary>
      <returns>Returns itself so that multiple calls can be chained.</returns>
    </member>
    <member name="M:System.Web.OData.Builder.EntityTypeConfiguration`1.Function(System.String)">
      <summary>Create a Function that binds to this EntityType.</summary>
      <returns>The FunctionConfiguration to allow further configuration of the new Function.</returns>
      <param name="name">The name of the function.</param>
    </member>
    <member name="M:System.Web.OData.Builder.EntityTypeConfiguration`1.HasKey``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>Configures the key property(s) for this entity type.</summary>
      <returns>Returns itself so that multiple calls can be chained.</returns>
      <param name="keyDefinitionExpression">A lambda expression representing the property to be used as the primary key. For example, in C# t =&amp;gt; t.Id and in Visual Basic .Net Function(t) t.Id.</param>
      <typeparam name="TKey">The type of key.</typeparam>
    </member>
    <member name="M:System.Web.OData.Builder.EntityTypeConfiguration`1.HasMany``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})">
      <summary>Configures a many relationship from this entity type.</summary>
      <returns>A configuration object that can be used to further configure the relationship.</returns>
      <param name="navigationPropertyExpression">A lambda expression representing the navigation property for the relationship. For example, in C# t =&gt; t.MyProperty and in Visual Basic .NET Function(t) t.MyProperty.</param>
      <typeparam name="TTargetEntity">The type of the entity at the other end of the relationship.</typeparam>
    </member>
    <member name="M:System.Web.OData.Builder.EntityTypeConfiguration`1.HasOptional``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>Configures an optional relationship from this entity type.</summary>
      <returns>A configuration object that can be used to further configure the relationship.</returns>
      <param name="navigationPropertyExpression">A lambda expression representing the navigation property for the relationship. For example, in C# t =&gt; t.MyProperty and in Visual Basic .NET Function(t) t.MyProperty.</param>
      <typeparam name="TTargetEntity">The type of the entity at the other end of the relationship.</typeparam>
    </member>
    <member name="M:System.Web.OData.Builder.EntityTypeConfiguration`1.HasRequired``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>Configures a required relationship from this entity type.</summary>
      <returns>A configuration object that can be used to further configure the relationship.</returns>
      <param name="navigationPropertyExpression">A lambda expression representing the navigation property for the relationship. For example, in C# t =&gt; t.MyProperty and in Visual Basic .NET Function(t) t.MyProperty.</param>
      <typeparam name="TTargetEntity">The type of the entity at the other end of the relationship.</typeparam>
    </member>
    <member name="P:System.Web.OData.Builder.EntityTypeConfiguration`1.NavigationProperties">
      <summary>Gets the collection of <see cref="T:System.Web.OData.Builder.NavigationPropertyConfiguration" /> of this entity type.</summary>
    </member>
    <member name="T:System.Web.OData.Builder.EnumMemberConfiguration">
      <summary>Represents the configuration for an enum member of an enum type.</summary>
    </member>
    <member name="M:System.Web.OData.Builder.EnumMemberConfiguration.#ctor(System.Enum,System.Web.OData.Builder.EnumTypeConfiguration)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Builder.EnumMemberConfiguration" /> class.</summary>
      <param name="member">The member of the enum type.</param>
      <param name="declaringType">The declaring type of the member.</param>
    </member>
    <member name="P:System.Web.OData.Builder.EnumMemberConfiguration.AddedExplicitly">
      <summary>Gets or sets a value that is <see cref="true" /> if the member was added by the user; <see cref="false" /> if it was inferred through conventions.</summary>
    </member>
    <member name="P:System.Web.OData.Builder.EnumMemberConfiguration.DeclaringType">
      <summary>Gets the declaring type.</summary>
    </member>
    <member name="P:System.Web.OData.Builder.EnumMemberConfiguration.MemberInfo">
      <summary>Gets the mapping CLR <see cref="T:System.Enum" />.</summary>
    </member>
    <member name="P:System.Web.OData.Builder.EnumMemberConfiguration.Name">
      <summary>Gets or sets the name of the member.</summary>
    </member>
    <member name="T:System.Web.OData.Builder.EnumPropertyConfiguration">
      <summary>Used to configure an enum property of an entity type or complex type. This configuration functionality is exposed by the model builder Fluent API, see <see cref="T:System.Web.OData.Builder.ODataModelBuilder" />.</summary>
    </member>
    <member name="M:System.Web.OData.Builder.EnumPropertyConfiguration.#ctor(System.Reflection.PropertyInfo,System.Web.OData.Builder.StructuralTypeConfiguration)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Builder.EnumPropertyConfiguration" /> class.</summary>
      <param name="property">The property of the configuration.</param>
      <param name="declaringType">The declaring type of the property.</param>
    </member>
    <member name="M:System.Web.OData.Builder.EnumPropertyConfiguration.IsConcurrencyToken">
      <summary>Configures the property to be used in concurrency checks. For OData this means to be part of the ETag.</summary>
      <returns>Returns itself so that multiple calls can be chained.</returns>
    </member>
    <member name="M:System.Web.OData.Builder.EnumPropertyConfiguration.IsOptional">
      <summary>Configures the property to be optional.</summary>
      <returns>Returns itself so that multiple calls can be chained.</returns>
    </member>
    <member name="M:System.Web.OData.Builder.EnumPropertyConfiguration.IsRequired">
      <summary>Configures the property to be required.</summary>
      <returns>Returns itself so that multiple calls can be chained.</returns>
    </member>
    <member name="P:System.Web.OData.Builder.EnumPropertyConfiguration.Kind">
      <summary>Gets the type of this property.</summary>
    </member>
    <member name="P:System.Web.OData.Builder.EnumPropertyConfiguration.RelatedClrType">
      <summary>Gets the backing CLR type of this property type.</summary>
    </member>
    <member name="T:System.Web.OData.Builder.EnumTypeConfiguration">
      <summary>Represents an <see cref="T:Microsoft.OData.Edm.IEdmEnumType" /> that can be built using <see cref="T:System.Web.OData.Builder.ODataModelBuilder" />.</summary>
    </member>
    <member name="M:System.Web.OData.Builder.EnumTypeConfiguration.#ctor(System.Web.OData.Builder.ODataModelBuilder,System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Builder.EnumTypeConfiguration" /> class.</summary>
    </member>
    <member name="P:System.Web.OData.Builder.EnumTypeConfiguration.AddedExplicitly">
      <summary>Gets or sets a value that is <see cref="true" /> if the type's name or namespace was set by the user; <see cref="false" /> if it was inferred through conventions.</summary>
    </member>
    <member name="M:System.Web.OData.Builder.EnumTypeConfiguration.AddMember(System.Enum)">
      <summary>Adds an enum member to this enum type.</summary>
      <returns>The <see cref="T:System.Web.OData.Builder.EnumMemberConfiguration" /> so that the member can be configured further.</returns>
      <param name="member">The member being added.</param>
    </member>
    <member name="P:System.Web.OData.Builder.EnumTypeConfiguration.ClrType">
      <summary>Gets the backing CLR <see cref="T:System.Type" />.</summary>
    </member>
    <member name="P:System.Web.OData.Builder.EnumTypeConfiguration.ExplicitMembers">
      <summary>Gets the collection of explicitly added members.</summary>
    </member>
    <member name="P:System.Web.OData.Builder.EnumTypeConfiguration.FullName">
      <summary>Gets the full name of this EDM type.</summary>
    </member>
    <member name="P:System.Web.OData.Builder.EnumTypeConfiguration.IgnoredMembers">
      <summary>Gets the members from the backing CLR type that are to be ignored on this enum type.</summary>
    </member>
    <member name="P:System.Web.OData.Builder.EnumTypeConfiguration.IsFlags">
      <summary>Gets the <see cref="P:System.Web.OData.Builder.EnumTypeConfiguration.IsFlags" /> of this enum type. If it is true, a combined value is equivalent to the bitwise OR of the discrete values.</summary>
    </member>
    <member name="P:System.Web.OData.Builder.EnumTypeConfiguration.Kind">
      <summary>Gets the <see cref="T:Microsoft.OData.Edm.EdmTypeKind" /> of this EDM type.</summary>
    </member>
    <member name="P:System.Web.OData.Builder.EnumTypeConfiguration.Members">
      <summary>Gets all possible members(defined values) of this enum type, which will be added to the EDM model as edm:Member elements.</summary>
    </member>
    <member name="P:System.Web.OData.Builder.EnumTypeConfiguration.ModelBuilder">
      <summary>Get the <see cref="T:System.Web.OData.Builder.ODataModelBuilder" />.</summary>
    </member>
    <member name="P:System.Web.OData.Builder.EnumTypeConfiguration.Name">
      <summary>Gets or sets the name of this EDM type.</summary>
    </member>
    <member name="P:System.Web.OData.Builder.EnumTypeConfiguration.Namespace">
      <summary>Gets or sets the namespace of this EDM type.</summary>
    </member>
    <member name="P:System.Web.OData.Builder.EnumTypeConfiguration.RemovedMembers">
      <summary>Gets the collection of explicitly removed members.</summary>
    </member>
    <member name="M:System.Web.OData.Builder.EnumTypeConfiguration.RemoveMember(System.Enum)">
      <summary>Removes the given member.</summary>
      <param name="member">The member being removed.</param>
    </member>
    <member name="P:System.Web.OData.Builder.EnumTypeConfiguration.UnderlyingType">
      <summary>Gets this enum underlying <see cref="T:System.Type" />.</summary>
    </member>
    <member name="T:System.Web.OData.Builder.EnumTypeConfiguration`1">
      <summary>Represents an <see cref="T:Microsoft.OData.Edm.IEdmEnumType" /> that can be built using <see cref="T:System.Web.OData.Builder.ODataModelBuilder" />.</summary>
      <typeparam name="TEnumType"></typeparam>
    </member>
    <member name="P:System.Web.OData.Builder.EnumTypeConfiguration`1.FullName">
      <summary>Gets the full name of this EDM type.</summary>
    </member>
    <member name="M:System.Web.OData.Builder.EnumTypeConfiguration`1.Member(`0)">
      <summary>Adds a required enum member to the EDM type.</summary>
      <returns>A configuration object that can be used to further configure the type.</returns>
      <param name="enumMember">The member being added.</param>
    </member>
    <member name="P:System.Web.OData.Builder.EnumTypeConfiguration`1.Members">
      <summary>Gets the collection of EDM enum members that belong to this type.</summary>
    </member>
    <member name="P:System.Web.OData.Builder.EnumTypeConfiguration`1.Name">
      <summary>Gets or sets the name of this EDM type.</summary>
    </member>
    <member name="P:System.Web.OData.Builder.EnumTypeConfiguration`1.Namespace">
      <summary>Gets or sets the namespace of this EDM type.</summary>
    </member>
    <member name="M:System.Web.OData.Builder.EnumTypeConfiguration`1.RemoveMember(`0)">
      <summary>Excludes a member from the type.</summary>
      <param name="member">The member being excluded.</param>
    </member>
    <member name="T:System.Web.OData.Builder.FunctionConfiguration">
      <summary>FunctionConfiguration represents an OData function that you wish to expose via your service.</summary>
    </member>
    <member name="M:System.Web.OData.Builder.FunctionConfiguration.GetFunctionLink">
      <summary>Retrieves the currently registered function link factory.</summary>
      <returns>Returns <see cref="T:System.Func`2" />.</returns>
    </member>
    <member name="M:System.Web.OData.Builder.FunctionConfiguration.HasFunctionLink(System.Func{System.Web.OData.EntityInstanceContext,System.Uri},System.Boolean)">
      <summary>Register a factory that creates functions links.</summary>
      <returns>Returns <see cref="T:System.Web.OData.Builder.FunctionConfiguration" />.</returns>
    </member>
    <member name="P:System.Web.OData.Builder.FunctionConfiguration.IncludeInServiceDocument">
      <summary>Gets or sets a value indicating whether the procedure is included in service document or not. Meaningful only for function imports; ignore for bound functions.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:System.Web.OData.Builder.FunctionConfiguration.IsComposable">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:System.Web.OData.Builder.FunctionConfiguration.IsSideEffecting">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:System.Web.OData.Builder.FunctionConfiguration.Kind">
      <returns>Returns <see cref="T:System.Web.OData.Builder.ProcedureKind" />.</returns>
    </member>
    <member name="M:System.Web.OData.Builder.FunctionConfiguration.Returns``1">
      <summary>Establishes the return type of the Function.</summary>
      <returns>Returns <see cref="T:System.Web.OData.Builder.FunctionConfiguration" />.</returns>
      <typeparam name="TReturnType"></typeparam>
    </member>
    <member name="M:System.Web.OData.Builder.FunctionConfiguration.ReturnsCollection``1">
      <summary>Establishes the return type of the Function</summary>
      <returns>Returns <see cref="T:System.Web.OData.Builder.FunctionConfiguration" />.</returns>
      <typeparam name="TReturnElementType"></typeparam>
    </member>
    <member name="M:System.Web.OData.Builder.FunctionConfiguration.ReturnsCollectionFromEntitySet``1(System.String)">
      <summary>Sets the return type to a collection of EntityType instances.</summary>
      <returns>Returns <see cref="T:System.Web.OData.Builder.FunctionConfiguration" />.</returns>
      <param name="entitySetName">The entitySetName which contains the returned EntityType instances</param>
      <typeparam name="TElementEntityType">The type that is an EntityType</typeparam>
    </member>
    <member name="M:System.Web.OData.Builder.FunctionConfiguration.ReturnsCollectionViaEntitySetPath``1(System.String)">
      <summary>Sets the return type to a collection of EntityType instances.</summary>
      <returns>Returns <see cref="T:System.Web.OData.Builder.FunctionConfiguration" />.</returns>
      <param name="entitySetPath">The entitySetPath which contains the returned EntityType instances</param>
      <typeparam name="TElementEntityType">The type that is an EntityType</typeparam>
    </member>
    <member name="M:System.Web.OData.Builder.FunctionConfiguration.ReturnsCollectionViaEntitySetPath``1(System.String[])">
      <summary>Sets the return type to a collection of EntityType instances.</summary>
      <returns>Returns <see cref="T:System.Web.OData.Builder.FunctionConfiguration" />.</returns>
      <param name="entitySetPath">The entitySetPath which contains the returned EntityType instances</param>
      <typeparam name="TElementEntityType">The type that is an EntityType</typeparam>
    </member>
    <member name="M:System.Web.OData.Builder.FunctionConfiguration.ReturnsEntityViaEntitySetPath``1(System.String)">
      <summary>Sets the return type to a single EntityType instance.</summary>
      <returns>Returns <see cref="T:System.Web.OData.Builder.FunctionConfiguration" />.</returns>
      <param name="entitySetPath">The entitySetPath which contains the return EntityType instance</param>
      <typeparam name="TEntityType">The type that is an EntityType</typeparam>
    </member>
    <member name="M:System.Web.OData.Builder.FunctionConfiguration.ReturnsEntityViaEntitySetPath``1(System.String[])">
      <summary>Sets the return type to a single EntityType instance.</summary>
      <returns>Returns <see cref="T:System.Web.OData.Builder.FunctionConfiguration" />.</returns>
      <param name="entitySetPath">The entitySetPath which contains the return EntityType instance</param>
      <typeparam name="TEntityType">The type that is an EntityType</typeparam>
    </member>
    <member name="M:System.Web.OData.Builder.FunctionConfiguration.ReturnsFromEntitySet``1(System.String)">
      <summary>Sets the return type to a single EntityType instance.</summary>
      <returns>Returns <see cref="T:System.Web.OData.Builder.FunctionConfiguration" />.</returns>
      <param name="entitySetName">The entitySetName which contains the return EntityType instance</param>
      <typeparam name="TEntityType">The type that is an EntityType</typeparam>
    </member>
    <member name="M:System.Web.OData.Builder.FunctionConfiguration.SetBindingParameter(System.String,System.Web.OData.Builder.IEdmTypeConfiguration)">
      <summary>Specifies the bindingParameter name, type and whether it is alwaysBindable, use only if the Function "isBindable".</summary>
    </member>
    <member name="P:System.Web.OData.Builder.FunctionConfiguration.SupportedInFilter">
      <summary>Gets and sets a value indicating whether the function is supported in $filter.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:System.Web.OData.Builder.FunctionConfiguration.SupportedInOrderBy">
      <summary>Gets and sets a value indicating whether the function is supported in $orderby.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="T:System.Web.OData.Builder.FunctionLinkBuilder">
      <summary>FunctionLinkBuilder can be used to annotate an Function. This is how formatters create links to invoke bound functions.</summary>
    </member>
    <member name="M:System.Web.OData.Builder.FunctionLinkBuilder.#ctor(System.Func{System.Web.OData.EntityInstanceContext,System.Uri},System.Boolean)">
      <summary>Create a new FunctionLinkBuilder based on an functionLinkFactory.</summary>
      <param name="functionLinkFactory">The functionLinkFactory this FunctionLinkBuilder should use when building links.</param>
      <param name="followsConventions">A value indicating whether the function link factory generates links that follow OData conventions.</param>
    </member>
    <member name="M:System.Web.OData.Builder.FunctionLinkBuilder.BuildFunctionLink(System.Web.OData.EntityInstanceContext)">
      <summary>Builds the function link for the given entity.</summary>
      <returns>The generated function link.</returns>
      <param name="context">An instance context wrapping the entity instance.</param>
    </member>
    <member name="M:System.Web.OData.Builder.FunctionLinkBuilder.CreateFunctionLinkFactory(System.Func{System.Web.OData.EntityInstanceContext,System.Uri},System.Func{System.Web.OData.EntityInstanceContext,System.Boolean})">
      <summary>Creates an function link factory that builds an function link, but only when appropriate based on the expensiveAvailabilityCheck, and whether expensive checks should be made, which is deduced by looking at the EntityInstanceContext.SkipExpensiveFunctionAvailabilityChecks property.</summary>
      <returns>The new function link factory.</returns>
      <param name="baseFactory">The function link factory that actually builds links if all checks pass.</param>
      <param name="expensiveAvailabilityCheck">The availability check function that is expensive but when called returns whether the function is available.</param>
    </member>
    <member name="P:System.Web.OData.Builder.FunctionLinkBuilder.FollowsConventions">
      <summary>Gets a boolean indicating whether the link factory follows OData conventions or not.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="T:System.Web.OData.Builder.IEdmTypeConfiguration">
      <summary>Represents an EdmType</summary>
    </member>
    <member name="P:System.Web.OData.Builder.IEdmTypeConfiguration.ClrType">
      <summary>The CLR type associated with the EdmType.</summary>
    </member>
    <member name="P:System.Web.OData.Builder.IEdmTypeConfiguration.FullName">
      <summary>The fullname (including namespace) of the EdmType.</summary>
    </member>
    <member name="P:System.Web.OData.Builder.IEdmTypeConfiguration.Kind">
      <summary>The kind of the EdmType. Examples include EntityType, ComplexType, PrimitiveType, CollectionType, EnumType.</summary>
    </member>
    <member name="P:System.Web.OData.Builder.IEdmTypeConfiguration.ModelBuilder">
      <summary>The ODataModelBuilder used to create this IEdmType.</summary>
    </member>
    <member name="P:System.Web.OData.Builder.IEdmTypeConfiguration.Name">
      <summary>The name of the EdmType.</summary>
    </member>
    <member name="P:System.Web.OData.Builder.IEdmTypeConfiguration.Namespace">
      <summary>The namespace of the EdmType.</summary>
    </member>
    <member name="T:System.Web.OData.Builder.INavigationSourceConfiguration">
      <summary>Represents a navigation source</summary>
    </member>
    <member name="M:System.Web.OData.Builder.INavigationSourceConfiguration.AddBinding(System.Web.OData.Builder.NavigationPropertyConfiguration,System.Web.OData.Builder.INavigationSourceConfiguration)">
      <summary>Binds the given navigation property to the target navigation source.</summary>
      <returns>The <see cref="T:System.Web.OData.Builder.NavigationPropertyBindingConfiguration" /> so that it can be further configured.</returns>
      <param name="navigationConfiguration">The navigation property.</param>
      <param name="targetNavigationSource">The target navigation source.</param>
    </member>
    <member name="P:System.Web.OData.Builder.INavigationSourceConfiguration.Bindings">
      <summary>Gets the navigation targets of <see cref="T:System.Web.OData.Builder.NavigationSourceConfiguration" />.</summary>
    </member>
    <member name="P:System.Web.OData.Builder.INavigationSourceConfiguration.ClrType">
      <summary>Gets the backing <see cref="T:System.Type" /> for the entity type contained in this navigation source.</summary>
    </member>
    <member name="P:System.Web.OData.Builder.INavigationSourceConfiguration.EntityType">
      <summary>Gets the entity type contained in this navigation source.</summary>
    </member>
    <member name="M:System.Web.OData.Builder.INavigationSourceConfiguration.FindBinding(System.String)">
      <summary>Gets the <see cref="T:System.Web.OData.Builder.NavigationPropertyBindingConfiguration" /> for the navigation property with the given name.</summary>
      <returns>The <see cref="T:System.Web.OData.Builder.NavigationPropertyBindingConfiguration" />.</returns>
      <param name="propertyName">The name of the navigation property.</param>
    </member>
    <member name="M:System.Web.OData.Builder.INavigationSourceConfiguration.FindBinding(System.Web.OData.Builder.NavigationPropertyConfiguration)">
      <summary>Finds the binding for the given navigation property and tries to create it if it doesnot exist.</summary>
      <returns>The <see cref="T:System.Web.OData.Builder.NavigationPropertyBindingConfiguration" /> so that it can be further configured.</returns>
      <param name="navigationConfiguration">The navigation property.</param>
    </member>
    <member name="M:System.Web.OData.Builder.INavigationSourceConfiguration.FindBinding(System.Web.OData.Builder.NavigationPropertyConfiguration,System.Boolean)">
      <summary>Finds the binding for the given navigation property.</summary>
      <returns>The <see cref="T:System.Web.OData.Builder.NavigationPropertyBindingConfiguration" /> so that it can be further configured.</returns>
      <param name="navigationConfiguration">The navigation property.</param>
      <param name="autoCreate">Tells whether the binding should be auto created if it does not exist.</param>
    </member>
    <member name="M:System.Web.OData.Builder.INavigationSourceConfiguration.GetEditLink">
      <summary>Gets the builder used to generate edit links for this navigation source.</summary>
      <returns>The link builder.</returns>
    </member>
    <member name="M:System.Web.OData.Builder.INavigationSourceConfiguration.GetIdLink">
      <summary>Gets the builder used to generate ID for this navigation source.</summary>
      <returns>The builder.</returns>
    </member>
    <member name="M:System.Web.OData.Builder.INavigationSourceConfiguration.GetNavigationPropertyLink(System.Web.OData.Builder.NavigationPropertyConfiguration)">
      <summary>Gets the builder used to generate navigation link for the given navigation property for this navigation source.</summary>
      <returns>The link builder.</returns>
      <param name="navigationProperty">The navigation property.</param>
    </member>
    <member name="M:System.Web.OData.Builder.INavigationSourceConfiguration.GetReadLink">
      <summary>Gets the builder used to generate read links for this navigation source.</summary>
      <returns>The link builder.</returns>
    </member>
    <member name="M:System.Web.OData.Builder.INavigationSourceConfiguration.GetUrl">
      <summary>Gets the navigation source URL.</summary>
      <returns>The navigation source URL.</returns>
    </member>
    <member name="M:System.Web.OData.Builder.INavigationSourceConfiguration.HasEditLink(System.Web.OData.Builder.SelfLinkBuilder{System.Uri})">
      <summary>Configures the edit link for this navigation source.</summary>
      <returns>Returns itself so that multiple calls can be chained.</returns>
      <param name="editLinkBuilder">The builder used to generate the edit link.</param>
    </member>
    <member name="M:System.Web.OData.Builder.INavigationSourceConfiguration.HasIdLink(System.Web.OData.Builder.SelfLinkBuilder{System.Uri})">
      <summary>Configures the ID link for this navigation source.</summary>
      <returns>Returns itself so that multiple calls can be chained.</returns>
      <param name="idLinkBuilder">The builder used to generate the ID.</param>
    </member>
    <member name="M:System.Web.OData.Builder.INavigationSourceConfiguration.HasNavigationPropertiesLink(System.Collections.Generic.IEnumerable{System.Web.OData.Builder.NavigationPropertyConfiguration},System.Web.OData.Builder.NavigationLinkBuilder)">
      <summary>Configures the navigation link for the given navigation properties for this navigation source.</summary>
      <returns>Returns itself so that multiple calls can be chained.</returns>
      <param name="navigationProperties">The navigation properties for which the navigation link is being generated.</param>
      <param name="navigationLinkBuilder">The builder used to generate the navigation link.</param>
    </member>
    <member name="M:System.Web.OData.Builder.INavigationSourceConfiguration.HasNavigationPropertyLink(System.Web.OData.Builder.NavigationPropertyConfiguration,System.Web.OData.Builder.NavigationLinkBuilder)">
      <summary>Configures the navigation link for the given navigation property for this navigation source.</summary>
      <returns>Returns itself so that multiple calls can be chained.</returns>
      <param name="navigationProperty">The navigation property for which the navigation link is being generated.</param>
      <param name="navigationLinkBuilder">The builder used to generate the navigation link.</param>
    </member>
    <member name="M:System.Web.OData.Builder.INavigationSourceConfiguration.HasReadLink(System.Web.OData.Builder.SelfLinkBuilder{System.Uri})">
      <summary>Configures the read link for this navigation source.</summary>
      <returns>Returns itself so that multiple calls can be chained.</returns>
      <param name="readLinkBuilder">The builder used to generate the read link.</param>
    </member>
    <member name="M:System.Web.OData.Builder.INavigationSourceConfiguration.HasUrl(System.String)">
      <summary>Configures the navigation source URL.</summary>
      <returns>Returns itself so that multiple calls can be chained.</returns>
      <param name="url">The navigation source URL.</param>
    </member>
    <member name="P:System.Web.OData.Builder.INavigationSourceConfiguration.Name">
      <summary>Gets the name of this navigation source.</summary>
    </member>
    <member name="M:System.Web.OData.Builder.INavigationSourceConfiguration.RemoveBinding(System.Web.OData.Builder.NavigationPropertyConfiguration)">
      <summary>Removes the binding for the given navigation property.</summary>
      <param name="navigationConfiguration">The navigation property</param>
    </member>
    <member name="T:System.Web.OData.Builder.LinkGenerationHelpers">
      <summary>Contains helper methods for generating OData links that follow OData URL conventions.</summary>
    </member>
    <member name="M:System.Web.OData.Builder.LinkGenerationHelpers.GenerateActionLink(System.Web.OData.EntityInstanceContext,Microsoft.OData.Edm.IEdmOperation)">
      <summary>Generates an action link following the OData URL conventions for the action <paramref name="action" /> and bound to the entity represented by <paramref name="entityContext" />.</summary>
      <returns>The generated action link following OData URL conventions.</returns>
      <param name="entityContext">The <see cref="T:System.Web.OData.EntityInstanceContext" /> representing the entity for which the action link needs to be generated.</param>
      <param name="action">The action for which the action link needs to be generated.</param>
    </member>
    <member name="M:System.Web.OData.Builder.LinkGenerationHelpers.GenerateFunctionLink(System.Web.OData.EntityInstanceContext,Microsoft.OData.Edm.IEdmOperation)">
      <summary>Generates an function link following the OData URL conventions for the function <paramref name="function" /> and bound to the entity represented by <paramref name="entityContext" />.</summary>
      <returns>The generated function link following OData URL conventions.</returns>
      <param name="entityContext">The <see cref="T:System.Web.OData.EntityInstanceContext" /> representing the entity for which the function link needs to be generated.</param>
      <param name="function">The function for which the function link needs to be generated.</param>
    </member>
    <member name="M:System.Web.OData.Builder.LinkGenerationHelpers.GenerateNavigationPropertyLink(System.Web.OData.EntityInstanceContext,Microsoft.OData.Edm.IEdmNavigationProperty,System.Boolean)">
      <summary>Generates a navigation link following the OData URL conventions for the entity represented by <paramref name="entityContext" /> and the given navigation property.</summary>
      <returns>The navigation link following the OData URL conventions.</returns>
      <param name="entityContext">The <see cref="T:System.Web.OData.EntityInstanceContext" /> representing the entity for which the navigation link needs to be generated.</param>
      <param name="navigationProperty">The EDM navigation property.</param>
      <param name="includeCast">Represents whether the generated link should have a cast segment representing a type cast.</param>
    </member>
    <member name="M:System.Web.OData.Builder.LinkGenerationHelpers.GenerateSelfLink(System.Web.OData.EntityInstanceContext,System.Boolean)">
      <summary>Generates a self link following the OData URL conventions for the entity represented by <paramref name="entityContext" />.</summary>
      <returns>The self link following the OData URL conventions.</returns>
      <param name="entityContext">The <see cref="T:System.Web.OData.EntityInstanceContext" /> representing the entity for which the self link needs to be generated.</param>
      <param name="includeCast">Represents whether the generated link should have a cast segment representing a type cast.</param>
    </member>
    <member name="T:System.Web.OData.Builder.LowerCamelCaser">
      <summary>Default lower camel caser to resolve property names for <see cref="T:System.Web.OData.Builder.ODataConventionModelBuilder" />. The rule is to convert the leading upper case characters to lower case, until a character, which is not the first character and is followed by a non-upper case character, is met. id =&amp;amp;gt; id, ID =&amp;amp;gt; id, MyName =&amp;amp;gt; myName, IOStream =&amp;amp;gt; ioStream, MyID =&amp;amp;gt; myid, yourID =&amp;amp;gt; yourID</summary>
    </member>
    <member name="M:System.Web.OData.Builder.LowerCamelCaser.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Builder.LowerCamelCaser" /> class.</summary>
    </member>
    <member name="M:System.Web.OData.Builder.LowerCamelCaser.#ctor(System.Web.OData.Builder.NameResolverOptions)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Builder.LowerCamelCaser" /> class.</summary>
      <param name="options">Name resolver options for camelizing.</param>
    </member>
    <member name="M:System.Web.OData.Builder.LowerCamelCaser.ApplyLowerCamelCase(System.Web.OData.Builder.ODataConventionModelBuilder)">
      <summary>Applies lower camel case.</summary>
      <param name="builder">The <see cref="T:System.Web.OData.Builder.ODataConventionModelBuilder" /> to be applied on.</param>
    </member>
    <member name="M:System.Web.OData.Builder.LowerCamelCaser.ToLowerCamelCase(System.String)">
      <summary>Converts a <see cref="T:System.String" /> to lower camel case.</summary>
      <returns>The converted name.</returns>
      <param name="name">The name to be converted with lower camel case.</param>
    </member>
    <member name="T:System.Web.OData.Builder.NameResolverOptions">
      <summary>Options for resolving names.</summary>
    </member>
    <member name="F:System.Web.OData.Builder.NameResolverOptions.ProcessDataMemberAttributePropertyNames">
      <summary>Process property names in DataMemberAttribute such as [DataMember(Name = "DataMemberCustomerName")].</summary>
    </member>
    <member name="F:System.Web.OData.Builder.NameResolverOptions.ProcessExplicitPropertyNames">
      <summary>Process explicit property names such as entityTypeConfiguration.Property(e =&amp;amp;gt; e.Key).Name="Id".</summary>
    </member>
    <member name="F:System.Web.OData.Builder.NameResolverOptions.ProcessReflectedPropertyNames">
      <summary>Process reflected property names.</summary>
    </member>
    <member name="T:System.Web.OData.Builder.NavigationLinkBuilder">
      <summary>Encapsulates a navigation link factory and whether the link factory follows conventions or not.</summary>
    </member>
    <member name="M:System.Web.OData.Builder.NavigationLinkBuilder.#ctor(System.Func{System.Web.OData.EntityInstanceContext,Microsoft.OData.Edm.IEdmNavigationProperty,System.Uri},System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Builder.NavigationLinkBuilder" /> class.</summary>
      <param name="navigationLinkFactory">The navigation link factory for creating navigation links.</param>
      <param name="followsConventions">Represents whether this factory follows OData conventions or not.</param>
    </member>
    <member name="P:System.Web.OData.Builder.NavigationLinkBuilder.Factory">
      <summary>Gets the navigation link factory for creating navigation links.</summary>
    </member>
    <member name="P:System.Web.OData.Builder.NavigationLinkBuilder.FollowsConventions">
      <summary>Gets a value representing whether this factory follows OData conventions or not.</summary>
    </member>
    <member name="T:System.Web.OData.Builder.NavigationPropertyBindingConfiguration">
      <summary>Used to configure the binding for a navigation property for a navigation source. This configuration functionality is exposed by the model builder Fluent API, see <see cref="T:System.Web.OData.Builder.ODataModelBuilder" />.</summary>
    </member>
    <member name="M:System.Web.OData.Builder.NavigationPropertyBindingConfiguration.#ctor(System.Web.OData.Builder.NavigationPropertyConfiguration,System.Web.OData.Builder.INavigationSourceConfiguration)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Builder.NavigationPropertyBindingConfiguration" /> class.</summary>
      <param name="navigationProperty">The navigation property for the binding.</param>
      <param name="navigationSource">The target navigation source of the binding.</param>
    </member>
    <member name="P:System.Web.OData.Builder.NavigationPropertyBindingConfiguration.NavigationProperty">
      <summary>Gets the navigation property of the binding.</summary>
    </member>
    <member name="P:System.Web.OData.Builder.NavigationPropertyBindingConfiguration.TargetNavigationSource">
      <summary>Gets the target navigation source of the binding.</summary>
    </member>
    <member name="T:System.Web.OData.Builder.NavigationPropertyConfiguration">
      <summary>Represents the configuration for a navigation property of an entity type.</summary>
    </member>
    <member name="M:System.Web.OData.Builder.NavigationPropertyConfiguration.#ctor(System.Reflection.PropertyInfo,Microsoft.OData.Edm.EdmMultiplicity,System.Web.OData.Builder.EntityTypeConfiguration)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Builder.NavigationPropertyConfiguration" /> class.</summary>
      <param name="property">The backing CLR property.</param>
      <param name="multiplicity">The <see cref="T:Microsoft.OData.Edm.EdmMultiplicity" />.</param>
      <param name="declaringType">The declaring entity type.</param>
    </member>
    <member name="M:System.Web.OData.Builder.NavigationPropertyConfiguration.Contained">
      <summary>Marks the navigation property as containment.</summary>
    </member>
    <member name="P:System.Web.OData.Builder.NavigationPropertyConfiguration.ContainsTarget">
      <summary>Gets whether this navigation property is a containment, default to false.</summary>
    </member>
    <member name="P:System.Web.OData.Builder.NavigationPropertyConfiguration.DeclaringEntityType">
      <summary>Gets the declaring entity type.</summary>
    </member>
    <member name="P:System.Web.OData.Builder.NavigationPropertyConfiguration.Kind">
      <summary>Gets the <see cref="T:System.Web.OData.Builder.PropertyKind" /> of this property.</summary>
    </member>
    <member name="P:System.Web.OData.Builder.NavigationPropertyConfiguration.Multiplicity">
      <summary>Gets the <see cref="T:Microsoft.OData.Edm.EdmMultiplicity" /> of this navigation property.</summary>
    </member>
    <member name="M:System.Web.OData.Builder.NavigationPropertyConfiguration.NonContained">
      <summary>Marks the navigation property as non-contained.</summary>
    </member>
    <member name="M:System.Web.OData.Builder.NavigationPropertyConfiguration.Optional">
      <summary>Marks the navigation property as optional.</summary>
    </member>
    <member name="P:System.Web.OData.Builder.NavigationPropertyConfiguration.RelatedClrType">
      <summary>Gets the backing CLR type of this property type.</summary>
    </member>
    <member name="M:System.Web.OData.Builder.NavigationPropertyConfiguration.Required">
      <summary>Marks the navigation property as required.</summary>
    </member>
    <member name="T:System.Web.OData.Builder.NavigationSourceConfiguration">
      <summary>Allows configuration to be performed for a navigation source (entity set, singleton) in a model.</summary>
    </member>
    <member name="M:System.Web.OData.Builder.NavigationSourceConfiguration.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Builder.NavigationSourceConfiguration" /> class. The default constructor is intended for use by unit testing only.</summary>
    </member>
    <member name="M:System.Web.OData.Builder.NavigationSourceConfiguration.#ctor(System.Web.OData.Builder.ODataModelBuilder,System.Type,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Builder.NavigationSourceConfiguration" /> class.</summary>
      <param name="modelBuilder">The <see cref="T:System.Web.OData.Builder.ODataModelBuilder" />.</param>
      <param name="entityClrType">The <see cref="T:System.Type" /> of the entity type contained in this navigation source.</param>
      <param name="name">The name of the navigation source.</param>
    </member>
    <member name="M:System.Web.OData.Builder.NavigationSourceConfiguration.#ctor(System.Web.OData.Builder.ODataModelBuilder,System.Web.OData.Builder.EntityTypeConfiguration,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Builder.NavigationSourceConfiguration" /> class.</summary>
      <param name="modelBuilder">The <see cref="T:System.Web.OData.Builder.ODataModelBuilder" />.</param>
      <param name="entityType">The entity type <see cref="T:System.Web.OData.Builder.EntityTypeConfiguration" /> contained in this navigation source.</param>
      <param name="name">The name of the navigation source.</param>
    </member>
    <member name="M:System.Web.OData.Builder.NavigationSourceConfiguration.AddBinding(System.Web.OData.Builder.NavigationPropertyConfiguration,System.Web.OData.Builder.INavigationSourceConfiguration)">
      <summary>Binds the given navigation property to the target navigation source.</summary>
      <returns>The <see cref="T:System.Web.OData.Builder.NavigationPropertyBindingConfiguration" /> so that it can be further configured.</returns>
      <param name="navigationConfiguration">The navigation property.</param>
      <param name="targetNavigationSource">The target navigation source.</param>
    </member>
    <member name="P:System.Web.OData.Builder.NavigationSourceConfiguration.Bindings">
      <summary>Gets the navigation targets of <see cref="T:System.Web.OData.Builder.NavigationSourceConfiguration" />.</summary>
    </member>
    <member name="P:System.Web.OData.Builder.NavigationSourceConfiguration.ClrType">
      <summary>Gets the backing <see cref="T:System.Type" /> for the entity type contained in this navigation source.</summary>
    </member>
    <member name="P:System.Web.OData.Builder.NavigationSourceConfiguration.EntityType">
      <summary>Gets the entity type contained in this navigation source.</summary>
    </member>
    <member name="M:System.Web.OData.Builder.NavigationSourceConfiguration.FindBinding(System.String)">
      <summary>Gets the <see cref="T:System.Web.OData.Builder.NavigationPropertyBindingConfiguration" /> for the navigation property with the given name.</summary>
      <returns>The <see cref="T:System.Web.OData.Builder.NavigationPropertyBindingConfiguration" />.</returns>
      <param name="propertyName">The name of the navigation property.</param>
    </member>
    <member name="M:System.Web.OData.Builder.NavigationSourceConfiguration.FindBinding(System.Web.OData.Builder.NavigationPropertyConfiguration)">
      <summary>Finds the binding for the given navigation property and tries to create it if it doesnot exist.</summary>
      <returns>The <see cref="T:System.Web.OData.Builder.NavigationPropertyBindingConfiguration" /> so that it can be further configured.</returns>
      <param name="navigationConfiguration">The navigation property.</param>
    </member>
    <member name="M:System.Web.OData.Builder.NavigationSourceConfiguration.FindBinding(System.Web.OData.Builder.NavigationPropertyConfiguration,System.Boolean)">
      <summary>Finds the binding for the given navigation property.</summary>
      <returns>The <see cref="T:System.Web.OData.Builder.NavigationPropertyBindingConfiguration" /> so that it can be further configured.</returns>
      <param name="navigationConfiguration">The navigation property.</param>
      <param name="autoCreate">Tells whether the binding should be auto created if it does not exist.</param>
    </member>
    <member name="M:System.Web.OData.Builder.NavigationSourceConfiguration.GetEditLink">
      <summary>Gets the builder used to generate edit links for this navigation source.</summary>
      <returns>The link builder.</returns>
    </member>
    <member name="M:System.Web.OData.Builder.NavigationSourceConfiguration.GetIdLink">
      <summary>Gets the builder used to generate ID for this navigation source.</summary>
      <returns>The builder.</returns>
    </member>
    <member name="M:System.Web.OData.Builder.NavigationSourceConfiguration.GetNavigationPropertyLink(System.Web.OData.Builder.NavigationPropertyConfiguration)">
      <summary>Gets the builder used to generate navigation link for the given navigation property for this navigation source.</summary>
      <returns>The link builder.</returns>
      <param name="navigationProperty">The navigation property.</param>
    </member>
    <member name="M:System.Web.OData.Builder.NavigationSourceConfiguration.GetReadLink">
      <summary>Gets the builder used to generate read links for this navigation source.</summary>
      <returns>The link builder.</returns>
    </member>
    <member name="M:System.Web.OData.Builder.NavigationSourceConfiguration.GetUrl">
      <summary>Gets the navigation source URL.</summary>
      <returns>The navigation source URL.</returns>
    </member>
    <member name="M:System.Web.OData.Builder.NavigationSourceConfiguration.HasEditLink(System.Web.OData.Builder.SelfLinkBuilder{System.Uri})">
      <summary>Configures the edit link for this navigation source.</summary>
      <returns>Returns itself so that multiple calls can be chained.</returns>
      <param name="editLinkBuilder">The builder used to generate the edit link.</param>
    </member>
    <member name="M:System.Web.OData.Builder.NavigationSourceConfiguration.HasIdLink(System.Web.OData.Builder.SelfLinkBuilder{System.Uri})">
      <summary>Configures the ID link for this navigation source.</summary>
      <returns>Returns itself so that multiple calls can be chained.</returns>
      <param name="idLinkBuilder">The builder used to generate the ID.</param>
    </member>
    <member name="M:System.Web.OData.Builder.NavigationSourceConfiguration.HasNavigationPropertiesLink(System.Collections.Generic.IEnumerable{System.Web.OData.Builder.NavigationPropertyConfiguration},System.Web.OData.Builder.NavigationLinkBuilder)">
      <summary>Configures the navigation link for the given navigation properties for this navigation source.</summary>
      <returns>Returns itself so that multiple calls can be chained.</returns>
      <param name="navigationProperties">The navigation properties for which the navigation link is being generated.</param>
      <param name="navigationLinkBuilder">The builder used to generate the navigation link.</param>
    </member>
    <member name="M:System.Web.OData.Builder.NavigationSourceConfiguration.HasNavigationPropertyLink(System.Web.OData.Builder.NavigationPropertyConfiguration,System.Web.OData.Builder.NavigationLinkBuilder)">
      <summary>Configures the navigation link for the given navigation property for this navigation source.</summary>
      <returns>Returns itself so that multiple calls can be chained.</returns>
      <param name="navigationProperty">The navigation property for which the navigation link is being generated.</param>
      <param name="navigationLinkBuilder">The builder used to generate the navigation link.</param>
    </member>
    <member name="M:System.Web.OData.Builder.NavigationSourceConfiguration.HasReadLink(System.Web.OData.Builder.SelfLinkBuilder{System.Uri})">
      <summary>Configures the read link for this navigation source.</summary>
      <returns>Returns itself so that multiple calls can be chained.</returns>
      <param name="readLinkBuilder">The builder used to generate the read link.</param>
    </member>
    <member name="M:System.Web.OData.Builder.NavigationSourceConfiguration.HasUrl(System.String)">
      <summary>Configures the navigation source URL.</summary>
      <returns>Returns itself so that multiple calls can be chained.</returns>
      <param name="url">The navigation source URL.</param>
    </member>
    <member name="P:System.Web.OData.Builder.NavigationSourceConfiguration.Name">
      <summary>Gets the name of this navigation source.</summary>
    </member>
    <member name="M:System.Web.OData.Builder.NavigationSourceConfiguration.RemoveBinding(System.Web.OData.Builder.NavigationPropertyConfiguration)">
      <summary>Removes the binding for the given navigation property.</summary>
      <param name="navigationConfiguration">The navigation property</param>
    </member>
    <member name="T:System.Web.OData.Builder.NavigationSourceConfiguration`1">
      <typeparam name="TEntityType">The entity type of the navigation source.</typeparam>
    </member>
    <member name="P:System.Web.OData.Builder.NavigationSourceConfiguration`1.EntityType">
      <summary>Gets the entity type contained in this navigation source configuration.</summary>
    </member>
    <member name="M:System.Web.OData.Builder.NavigationSourceConfiguration`1.FindBinding(System.String)">
      <summary>Finds the <see cref="T:System.Web.OData.Builder.NavigationPropertyBindingConfiguration" /> for the navigation property with the given name.</summary>
      <returns>The binding, if found; otherwise, <see cref="null" />.</returns>
      <param name="propertyName">The name of the navigation property.</param>
    </member>
    <member name="M:System.Web.OData.Builder.NavigationSourceConfiguration`1.FindBinding(System.Web.OData.Builder.NavigationPropertyConfiguration)">
      <summary>Finds the <see cref="T:System.Web.OData.Builder.NavigationPropertyBindingConfiguration" /> for the given navigation property and creates it if it does not exist.</summary>
      <returns>The binding if found else the created binding.</returns>
      <param name="navigationConfiguration">The navigation property.</param>
    </member>
    <member name="M:System.Web.OData.Builder.NavigationSourceConfiguration`1.FindBinding(System.Web.OData.Builder.NavigationPropertyConfiguration,System.Boolean)">
      <summary>Finds the <see cref="T:System.Web.OData.Builder.NavigationPropertyBindingConfiguration" /> for the given navigation property.</summary>
      <returns>The binding if found.</returns>
      <param name="navigationConfiguration">The navigation property.</param>
      <param name="autoCreate">Represents a value specifying if the binding should be created if it is not found.</param>
    </member>
    <member name="M:System.Web.OData.Builder.NavigationSourceConfiguration`1.HasEditLink(System.Func{System.Web.OData.EntityInstanceContext{`0},System.Uri},System.Boolean)">
      <summary>Configures the edit link for the entities from this navigation source.</summary>
      <param name="editLinkFactory">The factory used to generate the edit link.</param>
      <param name="followsConventions">
        <see cref="true" /> if the factory follows OData edit link conventions; otherwise, <see cref="false" />.</param>
    </member>
    <member name="M:System.Web.OData.Builder.NavigationSourceConfiguration`1.HasIdLink(System.Func{System.Web.OData.EntityInstanceContext{`0},System.Uri},System.Boolean)">
      <summary>Configures the ID link for the entities from this navigation source.</summary>
      <param name="idLinkFactory">The factory used to generate the ID link.</param>
      <param name="followsConventions">
        <see cref="true" /> if the factory follows OData ID link conventions; otherwise, <see cref="false" />.</param>
    </member>
    <member name="M:System.Web.OData.Builder.NavigationSourceConfiguration`1.HasManyBinding``2(System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0}}},System.String)">
      <summary>Configures an one-to-many relationship from this entity type and binds the corresponding navigation property to the given entity set.</summary>
      <returns>A configuration object that can be used to further configure the relationship further.</returns>
      <param name="navigationExpression">A lambda expression representing the navigation property for the relationship. For example, in C# t =&gt; t.MyProperty and in Visual Basic .NET Function(t) t.MyProperty.</param>
      <param name="entitySetName">The target navigation source (entity set) name for the binding.</param>
      <typeparam name="TTargetType">The target navigation source type.</typeparam>
      <typeparam name="TDerivedEntityType">The target entity type.</typeparam>
    </member>
    <member name="M:System.Web.OData.Builder.NavigationSourceConfiguration`1.HasManyBinding``2(System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0}}},System.Web.OData.Builder.NavigationSourceConfiguration{``0})">
      <summary>Configures an one-to-many relationship from this entity type and binds the corresponding navigation property to the given entity set.</summary>
      <returns>A configuration object that can be used to further configure the relationship further.</returns>
      <param name="navigationExpression">A lambda expression representing the navigation property for the relationship. For example, in C# t =&gt; t.MyProperty and in Visual Basic .NET Function(t) t.MyProperty.</param>
      <param name="targetEntitySet">The target navigation source (entity set) for the binding.</param>
      <typeparam name="TTargetType">The target navigation source type.</typeparam>
      <typeparam name="TDerivedEntityType">The target entity type.</typeparam>
    </member>
    <member name="M:System.Web.OData.Builder.NavigationSourceConfiguration`1.HasManyBinding``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.String)">
      <summary>Configures an one-to-many relationship from this entity type and binds the corresponding navigation property to the given entity set.</summary>
      <returns>A configuration object that can be used to further configure the relationship.</returns>
      <param name="navigationExpression">A lambda expression representing the navigation property for the relationship. For example, in C# t =&gt; t.MyProperty and in Visual Basic .NET Function(t) t.MyProperty.</param>
      <param name="entitySetName">The target navigation source (entity set) name for the binding.</param>
      <typeparam name="TTargetType">The target navigation source type.</typeparam>
    </member>
    <member name="M:System.Web.OData.Builder.NavigationSourceConfiguration`1.HasManyBinding``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Web.OData.Builder.NavigationSourceConfiguration{``0})">
      <summary>Configures an one-to-many relationship from this entity type and binds the corresponding navigation property to the given entity set.</summary>
      <returns>A configuration object that can be used to further configure the relationship further.</returns>
      <param name="navigationExpression">A lambda expression representing the navigation property for the relationship. For example, in C# t =&gt; t.MyProperty and in Visual Basic .NET Function(t) t.MyProperty.</param>
      <param name="targetEntitySet">The target navigation source (entity set) for the binding.</param>
      <typeparam name="TTargetType">The target navigation source type.</typeparam>
    </member>
    <member name="M:System.Web.OData.Builder.NavigationSourceConfiguration`1.HasNavigationPropertiesLink(System.Collections.Generic.IEnumerable{System.Web.OData.Builder.NavigationPropertyConfiguration},System.Func{System.Web.OData.EntityInstanceContext{`0},Microsoft.OData.Edm.IEdmNavigationProperty,System.Uri},System.Boolean)">
      <summary>Configures the navigation link for the given navigation properties for entities from this navigation source.</summary>
      <param name="navigationProperties">The navigation properties for which the navigation link is being generated.</param>
      <param name="navigationLinkFactory">The factory used to generate the navigation link.</param>
      <param name="followsConventions">
        <see cref="true" /> if the factory follows OData navigation link conventions; otherwise, <see cref="false" />.</param>
    </member>
    <member name="M:System.Web.OData.Builder.NavigationSourceConfiguration`1.HasNavigationPropertyLink(System.Web.OData.Builder.NavigationPropertyConfiguration,System.Func{System.Web.OData.EntityInstanceContext{`0},Microsoft.OData.Edm.IEdmNavigationProperty,System.Uri},System.Boolean)">
      <summary>Configures the navigation link for the given navigation property for entities from this navigation source.</summary>
      <param name="navigationProperty">The navigation property for which the navigation link is being generated.</param>
      <param name="navigationLinkFactory">The factory used to generate the navigation link.</param>
      <param name="followsConventions">
        <see cref="true" /> if the factory follows OData navigation link conventions; otherwise, <see cref="false" />.</param>
    </member>
    <member name="M:System.Web.OData.Builder.NavigationSourceConfiguration`1.HasOptionalBinding``2(System.Linq.Expressions.Expression{System.Func{``1,``0}},System.String)">
      <summary>Configures an optional relationship from this entity type and binds the corresponding navigation property to the given entity set.</summary>
      <returns>A configuration object that can be used to further configure the relationship further.</returns>
      <param name="navigationExpression">A lambda expression representing the navigation property for the relationship. For example, in C# t =&gt; t.MyProperty and in Visual Basic .NET Function(t) t.MyProperty.</param>
      <param name="entitySetName">The target navigation source (entity set) name for the binding.</param>
      <typeparam name="TTargetType">The target navigation source type.</typeparam>
      <typeparam name="TDerivedEntityType">The target entity type.</typeparam>
    </member>
    <member name="M:System.Web.OData.Builder.NavigationSourceConfiguration`1.HasOptionalBinding``2(System.Linq.Expressions.Expression{System.Func{``1,``0}},System.Web.OData.Builder.NavigationSourceConfiguration{``0})">
      <summary>Configures an optional relationship from this entity type and binds the corresponding navigation property to the given entity set.</summary>
      <returns>A configuration object that can be used to further configure the relationship further.</returns>
      <param name="navigationExpression">A lambda expression representing the navigation property for the relationship. For example, in C# t =&gt; t.MyProperty and in Visual Basic .NET Function(t) t.MyProperty.</param>
      <param name="targetEntitySet">The target navigation source (entity set) for the binding.</param>
      <typeparam name="TTargetType">The target navigation source type.</typeparam>
      <typeparam name="TDerivedEntityType">The target entity type.</typeparam>
    </member>
    <member name="M:System.Web.OData.Builder.NavigationSourceConfiguration`1.HasOptionalBinding``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String)">
      <summary>Configures an optional relationship from this entity type and binds the corresponding navigation property to the given entity set.</summary>
      <returns>A configuration object that can be used to further configure the relationship further.</returns>
      <param name="navigationExpression">A lambda expression representing the navigation property for the relationship. For example, in C# t =&gt; t.MyProperty and in Visual Basic .NET Function(t) t.MyProperty.</param>
      <param name="entitySetName">The target navigation source (entity set) name for the binding.</param>
      <typeparam name="TTargetType">The target navigation source type.</typeparam>
    </member>
    <member name="M:System.Web.OData.Builder.NavigationSourceConfiguration`1.HasOptionalBinding``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Web.OData.Builder.NavigationSourceConfiguration{``0})">
      <summary>Configures an optional relationship from this entity type and binds the corresponding navigation property to the given entity set.</summary>
      <returns>A configuration object that can be used to further configure the relationship further.</returns>
      <param name="navigationExpression">A lambda expression representing the navigation property for the relationship. For example, in C# t =&gt; t.MyProperty and in Visual Basic .NET Function(t) t.MyProperty.</param>
      <param name="targetEntitySet">The target navigation source (entity set) for the binding.</param>
      <typeparam name="TTargetType">The target navigation source type.</typeparam>
    </member>
    <member name="M:System.Web.OData.Builder.NavigationSourceConfiguration`1.HasReadLink(System.Func{System.Web.OData.EntityInstanceContext{`0},System.Uri},System.Boolean)">
      <summary>Configures the read link for the entities from this navigation source.</summary>
      <param name="readLinkFactory">The factory used to generate the read link.</param>
      <param name="followsConventions">
        <see cref="true" /> if the factory follows OData read link conventions; otherwise, <see cref="false" />.</param>
    </member>
    <member name="M:System.Web.OData.Builder.NavigationSourceConfiguration`1.HasRequiredBinding``2(System.Linq.Expressions.Expression{System.Func{``1,``0}},System.String)">
      <summary>Configures a required relationship from this entity type and binds the corresponding navigation property to the given entity set.</summary>
      <returns>A configuration object that can be used to further configure the relationship further.</returns>
      <param name="navigationExpression">A lambda expression representing the navigation property for the relationship. For example, in C# t =&gt; t.MyProperty and in Visual Basic .NET Function(t) t.MyProperty.</param>
      <param name="entitySetName">The target navigation source (entity set) name for the binding.</param>
      <typeparam name="TTargetType">The target navigation source type.</typeparam>
      <typeparam name="TDerivedEntityType">The target entity type.</typeparam>
    </member>
    <member name="M:System.Web.OData.Builder.NavigationSourceConfiguration`1.HasRequiredBinding``2(System.Linq.Expressions.Expression{System.Func{``1,``0}},System.Web.OData.Builder.NavigationSourceConfiguration{``0})">
      <summary>Configures a required relationship from this entity type and binds the corresponding navigation property to the given entity set.</summary>
      <returns>A configuration object that can be used to further configure the relationship further.</returns>
      <param name="navigationExpression">A lambda expression representing the navigation property for the relationship. For example, in C# t =&gt; t.MyProperty and in Visual Basic .NET Function(t) t.MyProperty.</param>
      <param name="targetEntitySet">The target navigation source (entity set) for the binding.</param>
      <typeparam name="TTargetType">The target navigation source type.</typeparam>
      <typeparam name="TDerivedEntityType">The target entity type.</typeparam>
    </member>
    <member name="M:System.Web.OData.Builder.NavigationSourceConfiguration`1.HasRequiredBinding``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String)">
      <summary>Configures a required relationship from this entity type and binds the corresponding navigation property to the given entity set.</summary>
      <returns>A configuration object that can be used to further configure the relationship further.</returns>
      <param name="navigationExpression">A lambda expression representing the navigation property for the relationship. For example, in C# t =&gt; t.MyProperty and in Visual Basic .NET Function(t) t.MyProperty.</param>
      <param name="entitySetName">The target navigation source (entity set) name for the binding.</param>
      <typeparam name="TTargetType">The target navigation source type.</typeparam>
    </member>
    <member name="M:System.Web.OData.Builder.NavigationSourceConfiguration`1.HasRequiredBinding``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Web.OData.Builder.NavigationSourceConfiguration{``0})">
      <summary>Configures a required relationship from this entity type and binds the corresponding navigation property to the given entity set.</summary>
      <returns>A configuration object that can be used to further configure the relationship further.</returns>
      <param name="navigationExpression">A lambda expression representing the navigation property for the relationship. For example, in C# t =&gt; t.MyProperty and in Visual Basic .NET Function(t) t.MyProperty.</param>
      <param name="targetEntitySet">The target navigation source (entity set) for the binding.</param>
      <typeparam name="TTargetType">The target navigation source type.</typeparam>
    </member>
    <member name="M:System.Web.OData.Builder.NavigationSourceConfiguration`1.HasSingletonBinding``2(System.Linq.Expressions.Expression{System.Func{``1,``0}},System.String)">
      <summary>Configures a required relationship from this entity type and binds the corresponding navigation property to the given singleton.</summary>
      <returns>A configuration object that can be used to further configure the relationship further.</returns>
      <param name="navigationExpression">A lambda expression representing the navigation property for the relationship. For example, in C# t =&gt; t.MyProperty and in Visual Basic .NET Function(t) t.MyProperty.</param>
      <param name="singletonName">The target navigation source (singleton) name for the binding.</param>
      <typeparam name="TTargetType">The target navigation source type.</typeparam>
      <typeparam name="TDerivedEntityType">The target entity type.</typeparam>
    </member>
    <member name="M:System.Web.OData.Builder.NavigationSourceConfiguration`1.HasSingletonBinding``2(System.Linq.Expressions.Expression{System.Func{``1,``0}},System.Web.OData.Builder.NavigationSourceConfiguration{``0})">
      <summary>Configures a required relationship from this entity type and binds the corresponding navigation property to the given singleton.</summary>
      <returns>A configuration object that can be used to further configure the relationship further.</returns>
      <param name="navigationExpression">A lambda expression representing the navigation property for the relationship. For example, in C# t =&gt; t.MyProperty and in Visual Basic .NET Function(t) t.MyProperty.</param>
      <param name="targetSingleton">The target singleton for the binding.</param>
      <typeparam name="TTargetType">The target navigation source type.</typeparam>
      <typeparam name="TDerivedEntityType">The target entity type.</typeparam>
    </member>
    <member name="M:System.Web.OData.Builder.NavigationSourceConfiguration`1.HasSingletonBinding``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String)">
      <summary>Configures a required relationship from this entity type and binds the corresponding navigation property to the given singleton.</summary>
      <returns>A configuration object that can be used to further configure the relationship further.</returns>
      <param name="navigationExpression">A lambda expression representing the navigation property for the relationship. For example, in C# t =&gt; t.MyProperty and in Visual Basic .NET Function(t) t.MyProperty.</param>
      <param name="singletonName">The target navigation source (singleton) name for the binding.</param>
      <typeparam name="TTargetType">The target navigation source type.</typeparam>
    </member>
    <member name="M:System.Web.OData.Builder.NavigationSourceConfiguration`1.HasSingletonBinding``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Web.OData.Builder.NavigationSourceConfiguration{``0})">
      <summary>Configures a required relationship from this entity type and binds the corresponding navigation property to the given singleton.</summary>
      <returns>A configuration object that can be used to further configure the relationship further.</returns>
      <param name="navigationExpression">A lambda expression representing the navigation property for the relationship. For example, in C# t =&gt; t.MyProperty and in Visual Basic .NET Function(t) t.MyProperty.</param>
      <param name="targetSingleton">The target navigation source (singleton) for the binding.</param>
      <typeparam name="TTargetType">The target navigation source type.</typeparam>
    </member>
    <member name="T:System.Web.OData.Builder.NavigationSourceLinkBuilderAnnotation">
      <summary>
        <see cref="T:System.Web.OData.Builder.NavigationSourceLinkBuilderAnnotation" /> is a class used to annotate an <see cref="T:Microsoft.OData.Edm.IEdmNavigationSource" /> inside an <see cref="T:Microsoft.OData.Edm.IEdmModel" /> with information about how to build links related to that navigation source.</summary>
    </member>
    <member name="M:System.Web.OData.Builder.NavigationSourceLinkBuilderAnnotation.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Builder.NavigationSourceLinkBuilderAnnotation" /> class.</summary>
    </member>
    <member name="M:System.Web.OData.Builder.NavigationSourceLinkBuilderAnnotation.#ctor(Microsoft.OData.Edm.IEdmNavigationSource,Microsoft.OData.Edm.IEdmModel)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Builder.NavigationSourceLinkBuilderAnnotation" /> class.</summary>
      <param name="navigationSource">The navigation source for which the link builder is being constructed.</param>
      <param name="model">The EDM model that this navigation source belongs to.</param>
    </member>
    <member name="M:System.Web.OData.Builder.NavigationSourceLinkBuilderAnnotation.#ctor(Microsoft.OData.Edm.IEdmNavigationSource,System.Web.OData.Builder.SelfLinkBuilder{System.Uri},System.Web.OData.Builder.SelfLinkBuilder{System.Uri},System.Web.OData.Builder.SelfLinkBuilder{System.Uri})">
      <summary>Constructs an instance of an <see cref="T:System.Web.OData.Builder.NavigationSourceLinkBuilderAnnotation" /> class.</summary>
      <param name="navigationSource">The navigation source for which the link builder is being constructed.</param>
      <param name="idLinkBuilder">The ID link builder which is used to build the ID link.</param>
      <param name="editLinkBuilder">The Edit link builder which is used to build the Edit link.</param>
      <param name="readLinkBuilder">The Read link builder which is used to build the Read link.</param>
    </member>
    <member name="M:System.Web.OData.Builder.NavigationSourceLinkBuilderAnnotation.#ctor(System.Web.OData.Builder.NavigationSourceConfiguration)">
      <summary>Constructs an instance of an <see cref="T:System.Web.OData.Builder.NavigationSourceLinkBuilderAnnotation" /> from an <see cref="T:System.Web.OData.Builder.NavigationSourceConfiguration" />.</summary>
    </member>
    <member name="M:System.Web.OData.Builder.NavigationSourceLinkBuilderAnnotation.AddNavigationPropertyLinkBuilder(Microsoft.OData.Edm.IEdmNavigationProperty,System.Web.OData.Builder.NavigationLinkBuilder)">
      <summary>Register a link builder for a <see cref="T:Microsoft.OData.Edm.IEdmNavigationProperty" /> that navigates from Entities in this navigation source.</summary>
    </member>
    <member name="M:System.Web.OData.Builder.NavigationSourceLinkBuilderAnnotation.BuildEditLink(System.Web.OData.EntityInstanceContext,System.Web.OData.Formatter.ODataMetadataLevel,System.Uri)">
      <summary>Constructs the EditLink URL for a particular <see cref="T:System.Web.OData.EntityInstanceContext" /> and <see cref="T:System.Web.OData.Formatter.ODataMetadataLevel" />.</summary>
    </member>
    <member name="M:System.Web.OData.Builder.NavigationSourceLinkBuilderAnnotation.BuildEntitySelfLinks(System.Web.OData.EntityInstanceContext,System.Web.OData.Formatter.ODataMetadataLevel)">
      <summary>Constructs the <see cref="T:System.Web.OData.Formatter.Serialization.EntitySelfLinks" /> for a particular <see cref="T:System.Web.OData.EntityInstanceContext" /> and <see cref="T:System.Web.OData.Formatter.ODataMetadataLevel" />.</summary>
    </member>
    <member name="M:System.Web.OData.Builder.NavigationSourceLinkBuilderAnnotation.BuildIdLink(System.Web.OData.EntityInstanceContext,System.Web.OData.Formatter.ODataMetadataLevel)">
      <summary>Constructs the IdLink for a particular <see cref="T:System.Web.OData.EntityInstanceContext" /> and <see cref="T:System.Web.OData.Formatter.ODataMetadataLevel" />.</summary>
    </member>
    <member name="M:System.Web.OData.Builder.NavigationSourceLinkBuilderAnnotation.BuildNavigationLink(System.Web.OData.EntityInstanceContext,Microsoft.OData.Edm.IEdmNavigationProperty,System.Web.OData.Formatter.ODataMetadataLevel)">
      <summary>Constructs a NavigationLink for a particular <see cref="T:System.Web.OData.EntityInstanceContext" />, <see cref="T:Microsoft.OData.Edm.IEdmNavigationProperty" /> and <see cref="T:System.Web.OData.Formatter.ODataMetadataLevel" />.</summary>
    </member>
    <member name="M:System.Web.OData.Builder.NavigationSourceLinkBuilderAnnotation.BuildReadLink(System.Web.OData.EntityInstanceContext,System.Web.OData.Formatter.ODataMetadataLevel,System.Uri)">
      <summary>Constructs a ReadLink URL for a particular <see cref="T:System.Web.OData.EntityInstanceContext" /> and <see cref="T:System.Web.OData.Formatter.ODataMetadataLevel" />.</summary>
    </member>
    <member name="T:System.Web.OData.Builder.NonbindingParameterConfiguration">
      <summary>Represents a non-binding procedure parameter.</summary>
    </member>
    <member name="M:System.Web.OData.Builder.NonbindingParameterConfiguration.#ctor(System.String,System.Web.OData.Builder.IEdmTypeConfiguration)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Builder.NonbindingParameterConfiguration" /> class.</summary>
      <param name="name">The name of the parameter.</param>
      <param name="parameterType">The EDM type of the parameter.</param>
    </member>
    <member name="T:System.Web.OData.Builder.ODataConventionModelBuilder">
      <summary>
        <see cref="T:System.Web.OData.Builder.ODataConventionModelBuilder" /> is used to automatically map CLR classes to an EDM model based on a set of <see cref="T:System.Web.OData.Builder.Conventions.IConvention" />.</summary>
    </member>
    <member name="M:System.Web.OData.Builder.ODataConventionModelBuilder.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Builder.ODataConventionModelBuilder" /> class.</summary>
    </member>
    <member name="M:System.Web.OData.Builder.ODataConventionModelBuilder.#ctor(System.Web.Http.HttpConfiguration)">
      <summary>Initializes a new <see cref="T:System.Web.OData.Builder.ODataConventionModelBuilder" />.</summary>
      <param name="configuration">The <see cref="T:System.Web.Http.HttpConfiguration" /> to use.</param>
    </member>
    <member name="M:System.Web.OData.Builder.ODataConventionModelBuilder.#ctor(System.Web.Http.HttpConfiguration,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Builder.ODataConventionModelBuilder" /> class.</summary>
      <param name="configuration">The <see cref="T:System.Web.Http.HttpConfiguration" /> to use.</param>
      <param name="isQueryCompositionMode">If the model is being built for only querying.</param>
    </member>
    <member name="M:System.Web.OData.Builder.ODataConventionModelBuilder.AddComplexType(System.Type)"></member>
    <member name="M:System.Web.OData.Builder.ODataConventionModelBuilder.AddEntitySet(System.String,System.Web.OData.Builder.EntityTypeConfiguration)"></member>
    <member name="M:System.Web.OData.Builder.ODataConventionModelBuilder.AddEntityType(System.Type)"></member>
    <member name="M:System.Web.OData.Builder.ODataConventionModelBuilder.AddEnumType(System.Type)"></member>
    <member name="M:System.Web.OData.Builder.ODataConventionModelBuilder.AddSingleton(System.String,System.Web.OData.Builder.EntityTypeConfiguration)"></member>
    <member name="M:System.Web.OData.Builder.ODataConventionModelBuilder.GetEdmModel"></member>
    <member name="M:System.Web.OData.Builder.ODataConventionModelBuilder.Ignore``1">
      <summary>Excludes a type from the model. This is used to remove types from the model that were added by convention during initial model discovery.</summary>
      <returns>The same  so that multiple calls can be chained.</returns>
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.Web.OData.Builder.ODataConventionModelBuilder.Ignore(System.Type[])">
      <summary>Excludes a type or types from the model. This is used to remove types from the model that were added by convention during initial model discovery.</summary>
      <returns>The same  so that multiple calls can be chained.</returns>
      <param name="types">The types to be excluded from the model.</param>
    </member>
    <member name="P:System.Web.OData.Builder.ODataConventionModelBuilder.ModelAliasingEnabled">
      <summary>Gets or sets if model aliasing is enabled or not. The default value is true.</summary>
    </member>
    <member name="P:System.Web.OData.Builder.ODataConventionModelBuilder.OnModelCreating">
      <summary>This action is invoked after the <see cref="T:System.Web.OData.Builder.ODataConventionModelBuilder" /> has run all the conventions, but before the configuration is locked down and used to build the <see cref="T:Microsoft.OData.Edm.IEdmModel" />.</summary>
    </member>
    <member name="M:System.Web.OData.Builder.ODataConventionModelBuilder.ValidateModel(Microsoft.OData.Edm.IEdmModel)"></member>
    <member name="T:System.Web.OData.Builder.ODataConventionModelBuilderExtensions">
      <summary>Provides extension methods for the <see cref="T:System.Web.OData.Builder.ODataConventionModelBuilder" /> class.</summary>
    </member>
    <member name="M:System.Web.OData.Builder.ODataConventionModelBuilderExtensions.EnableLowerCamelCase(System.Web.OData.Builder.ODataConventionModelBuilder)"></member>
    <member name="M:System.Web.OData.Builder.ODataConventionModelBuilderExtensions.EnableLowerCamelCase(System.Web.OData.Builder.ODataConventionModelBuilder,System.Web.OData.Builder.NameResolverOptions)"></member>
    <member name="T:System.Web.OData.Builder.ODataModelBuilder">
      <summary>Represents a model builder that is used to map CLR classes to an EDM model.</summary>
    </member>
    <member name="M:System.Web.OData.Builder.ODataModelBuilder.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Builder.ODataModelBuilder" /> class.</summary>
    </member>
    <member name="M:System.Web.OData.Builder.ODataModelBuilder.Action(System.String)">
      <summary>Adds a non-bindable action to the builder.</summary>
      <returns>The configuration object for the specified action.</returns>
      <param name="name">The name of the action.</param>
    </member>
    <member name="M:System.Web.OData.Builder.ODataModelBuilder.AddComplexType(System.Type)">
      <summary>Registers a complex type as part of the model and returns an object that can be used to configure the entity. This method can be called multiple times for the same entity to perform multiple lines of configuration.</summary>
      <returns>The configuration object for the specified complex type.</returns>
      <param name="type">The type to be registered or configured.</param>
    </member>
    <member name="M:System.Web.OData.Builder.ODataModelBuilder.AddEntitySet(System.String,System.Web.OData.Builder.EntityTypeConfiguration)">
      <summary>Registers an entity set as a part of the model and returns an object that can be used to configure the entity set. This method can be called multiple times for the same type to perform multiple lines of configuration.</summary>
      <returns>The configuration object for the specified entity set.</returns>
      <param name="name">The name of the entity set.</param>
      <param name="entityType">The type to be registered or configured.</param>
    </member>
    <member name="M:System.Web.OData.Builder.ODataModelBuilder.AddEntityType(System.Type)">
      <summary>Registers an entity type as part of the model and returns an object that can be used to configure the entity. This method can be called multiple times for the same entity to perform multiple lines of configuration.</summary>
      <returns>The configuration object for the specified entity type.</returns>
      <param name="type">The type to be registered or configured.</param>
    </member>
    <member name="M:System.Web.OData.Builder.ODataModelBuilder.AddEnumType(System.Type)">
      <summary>Registers an enum type as part of the model and returns an object that can be used to configure the enum type.</summary>
      <returns>The configuration object for the specified enum type.</returns>
      <param name="type">The type to be registered or configured.</param>
    </member>
    <member name="M:System.Web.OData.Builder.ODataModelBuilder.AddProcedure(System.Web.OData.Builder.ProcedureConfiguration)">
      <summary>Adds a procedure to the model.</summary>
      <param name="procedure">The procedure to be added.</param>
    </member>
    <member name="M:System.Web.OData.Builder.ODataModelBuilder.AddSingleton(System.String,System.Web.OData.Builder.EntityTypeConfiguration)">
      <summary>Registers a singleton as a part of the model and returns an object that can be used to configure the singleton. This method can be called multiple times for the same type to perform multiple lines of configuration.</summary>
      <returns>The configuration object for the specified singleton.</returns>
      <param name="name">The name of the singleton.</param>
      <param name="entityType">The type to be registered or configured.</param>
    </member>
    <member name="M:System.Web.OData.Builder.ODataModelBuilder.ComplexType``1">
      <summary>Registers a type as a complex type in the model and returns an object that can be used to configure the complex type. This method can be called multiple times for the same type to perform multiple lines of configuration.</summary>
      <returns>The configuration object for the specified complex type.</returns>
      <typeparam name="TComplexType">The type to be registered or configured.</typeparam>
    </member>
    <member name="P:System.Web.OData.Builder.ODataModelBuilder.ContainerName">
      <summary>Gets or sets the name of the container that will hold all the entity sets, actions and functions.</summary>
      <returns>The name of the container</returns>
    </member>
    <member name="P:System.Web.OData.Builder.ODataModelBuilder.DataServiceVersion">
      <summary>Gets or sets the data service version of the model. The default value is 3.0.</summary>
      <returns>The data service version of the model.</returns>
    </member>
    <member name="M:System.Web.OData.Builder.ODataModelBuilder.EntitySet``1(System.String)">
      <summary>Registers an entity set as a part of the model and returns an object that can be used to configure the entity set. This method can be called multiple times for the same type to perform multiple lines of configuration.</summary>
      <returns>The configuration object for the specified entity set.</returns>
      <param name="name">The name of the entity set.</param>
      <typeparam name="TEntityType">The entity type of the entity set.</typeparam>
    </member>
    <member name="P:System.Web.OData.Builder.ODataModelBuilder.EntitySets">
      <summary>Gets the collection of EDM entity sets in the model to be built.</summary>
      <returns>The collection of EDM entity sets in the model to be built.</returns>
    </member>
    <member name="M:System.Web.OData.Builder.ODataModelBuilder.EntityType``1">
      <returns>Returns <see cref="T:System.Web.OData.Builder.EntityTypeConfiguration`1" />.</returns>
      <typeparam name="TEntityType"></typeparam>
    </member>
    <member name="M:System.Web.OData.Builder.ODataModelBuilder.EnumType``1">
      <returns>Returns <see cref="T:System.Web.OData.Builder.EnumTypeConfiguration`1" />.</returns>
      <typeparam name="TEnumType"></typeparam>
    </member>
    <member name="P:System.Web.OData.Builder.ODataModelBuilder.EnumTypes">
      <summary>Gets the collection of EDM types in the model to be built.</summary>
      <returns>Returns <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="M:System.Web.OData.Builder.ODataModelBuilder.Function(System.String)">
      <summary>Adds an unbound function to the builder.</summary>
      <returns>The configuration object for the specified function.</returns>
      <param name="name">The name of the function.</param>
    </member>
    <member name="M:System.Web.OData.Builder.ODataModelBuilder.GetEdmModel">
      <summary>Creates and returns a <see cref="T:Microsoft.Data.Edm.IEdmModel" /> based on the configuration performed using this builder.</summary>
      <returns>The model that was built.</returns>
    </member>
    <member name="M:System.Web.OData.Builder.ODataModelBuilder.GetTypeConfigurationOrNull(System.Type)">
      <summary>Attempts to find either a pre-configured structural type or a primitive type that matches the <paramref name="type" />. If no matches are found null is returned.</summary>
      <returns>A pre-configured structural type or a primitive type if found; otherwise, null.</returns>
      <param name="type">The type to find.</param>
    </member>
    <member name="P:System.Web.OData.Builder.ODataModelBuilder.MaxDataServiceVersion">
      <summary>Gets or sets the maximum data service version of the model. The default value is 3.0.</summary>
      <returns>The maximum data service version of the model.</returns>
    </member>
    <member name="P:System.Web.OData.Builder.ODataModelBuilder.Namespace">
      <summary>Gets or sets the namespace that will be used for the resulting model.</summary>
      <returns>The namespace that will be used for the resulting model.</returns>
    </member>
    <member name="P:System.Web.OData.Builder.ODataModelBuilder.NavigationSources">
      <summary>Gets the collection of EDM navigation sources (entity sets and singletons) in the model to be built.</summary>
      <returns>Returns <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="P:System.Web.OData.Builder.ODataModelBuilder.Procedures">
      <summary>Gets the collection of procedures (such as actions, functions and service operations) in the model to be built</summary>
      <returns>The collection of procedures.</returns>
    </member>
    <member name="M:System.Web.OData.Builder.ODataModelBuilder.RemoveEntitySet(System.String)">
      <summary>Removes the entity set from the model.</summary>
      <returns>true if the entity set is present in the model; false otherwise.</returns>
      <param name="name">The name of the entity set to be removed.</param>
    </member>
    <member name="M:System.Web.OData.Builder.ODataModelBuilder.RemoveEnumType(System.Type)">
      <summary>Removes the type from the model.</summary>
      <returns>true if the type is present in the model and false otherwise.</returns>
      <param name="type">The type to be removed.</param>
    </member>
    <member name="M:System.Web.OData.Builder.ODataModelBuilder.RemoveProcedure(System.String)">
      <summary>Removes the procedure from the model.</summary>
      <returns>true if the procedure is present in the model; false otherwise.</returns>
      <param name="name">The name of the procedure to be removed.</param>
    </member>
    <member name="M:System.Web.OData.Builder.ODataModelBuilder.RemoveProcedure(System.Web.OData.Builder.ProcedureConfiguration)">
      <summary>Removes the procedure from the model.</summary>
      <returns>true if the procedure is present in the model; false otherwise.</returns>
      <param name="procedure">The procedure to be removed.</param>
    </member>
    <member name="M:System.Web.OData.Builder.ODataModelBuilder.RemoveSingleton(System.String)">
      <summary>Removes the singleton from the model.</summary>
      <returns>true if the singleton is present in the model and false otherwise.</returns>
      <param name="name">The name of the singleton to be removed.</param>
    </member>
    <member name="M:System.Web.OData.Builder.ODataModelBuilder.RemoveStructuralType(System.Type)">
      <summary>Removes the type from the model.</summary>
      <returns>true if the type is present in the model and false otherwise.</returns>
      <param name="type">The type to be removed.</param>
    </member>
    <member name="M:System.Web.OData.Builder.ODataModelBuilder.Singleton``1(System.String)">
      <returns>Returns <see cref="T:System.Web.OData.Builder.SingletonConfiguration`1" />.</returns>
      <typeparam name="TEntityType"></typeparam>
    </member>
    <member name="P:System.Web.OData.Builder.ODataModelBuilder.Singletons">
      <summary>Gets the collection of EDM singletons in the model to be built.</summary>
      <returns>Returns <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="P:System.Web.OData.Builder.ODataModelBuilder.StructuralTypes">
      <summary>Gets the collection of EDM structural types in the model to be built.</summary>
      <returns>The collection of EDM structural types in the model.</returns>
    </member>
    <member name="M:System.Web.OData.Builder.ODataModelBuilder.ValidateModel(Microsoft.OData.Edm.IEdmModel)">
      <summary>Validates the IEdmModel that is being created.</summary>
      <param name="model">The model that will be validated.</param>
    </member>
    <member name="T:System.Web.OData.Builder.ParameterConfiguration">
      <summary>Represents a parameter to a Procedure</summary>
    </member>
    <member name="M:System.Web.OData.Builder.ParameterConfiguration.#ctor(System.String,System.Web.OData.Builder.IEdmTypeConfiguration)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Builder.ParameterConfiguration" /> class.</summary>
      <param name="name">The name of the parameter.</param>
      <param name="parameterType">The EDM type of the paramter.</param>
    </member>
    <member name="P:System.Web.OData.Builder.ParameterConfiguration.Name">
      <summary>The name of the parameter</summary>
    </member>
    <member name="P:System.Web.OData.Builder.ParameterConfiguration.TypeConfiguration">
      <summary>The type of the parameter</summary>
    </member>
    <member name="T:System.Web.OData.Builder.PrimitivePropertyConfiguration">
      <summary>Used to configure a primitive property of an entity type or complex type. This configuration functionality is exposed by the model builder Fluent API, see <see cref="T:System.Web.OData.Builder.ODataModelBuilder" />.</summary>
    </member>
    <member name="M:System.Web.OData.Builder.PrimitivePropertyConfiguration.#ctor(System.Reflection.PropertyInfo,System.Web.OData.Builder.StructuralTypeConfiguration)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Builder.PrimitivePropertyConfiguration" /> class.</summary>
      <param name="property">The name of the property.</param>
      <param name="declaringType">The declaring EDM type of the property.</param>
    </member>
    <member name="M:System.Web.OData.Builder.PrimitivePropertyConfiguration.IsConcurrencyToken">
      <summary>Configures the property to be used in concurrency checks. For OData this means to be part of the ETag.</summary>
      <returns>Returns itself so that multiple calls can be chained.</returns>
    </member>
    <member name="M:System.Web.OData.Builder.PrimitivePropertyConfiguration.IsOptional">
      <summary>Configures the property to be optional.</summary>
      <returns>Returns itself so that multiple calls can be chained.</returns>
    </member>
    <member name="M:System.Web.OData.Builder.PrimitivePropertyConfiguration.IsRequired">
      <summary>Configures the property to be required.</summary>
      <returns>Returns itself so that multiple calls can be chained.</returns>
    </member>
    <member name="P:System.Web.OData.Builder.PrimitivePropertyConfiguration.Kind">
      <summary>Gets the type of this property.</summary>
    </member>
    <member name="P:System.Web.OData.Builder.PrimitivePropertyConfiguration.RelatedClrType">
      <summary>Gets the backing CLR type of this property type.</summary>
    </member>
    <member name="T:System.Web.OData.Builder.PrimitiveTypeConfiguration">
      <summary>Represents a PrimitiveType</summary>
    </member>
    <member name="M:System.Web.OData.Builder.PrimitiveTypeConfiguration.#ctor(System.Web.OData.Builder.ODataModelBuilder,Microsoft.OData.Edm.IEdmPrimitiveType,System.Type)">
      <summary>This constructor is public only for unit testing purposes. To get a PrimitiveTypeConfiguration use ODataModelBuilder.GetTypeConfigurationOrNull(Type)</summary>
    </member>
    <member name="P:System.Web.OData.Builder.PrimitiveTypeConfiguration.ClrType">
      <summary>Gets the backing CLR type of this EDM type.</summary>
    </member>
    <member name="P:System.Web.OData.Builder.PrimitiveTypeConfiguration.EdmPrimitiveType">
      <summary>Returns the IEdmPrimitiveType associated with this PrimitiveTypeConfiguration</summary>
    </member>
    <member name="P:System.Web.OData.Builder.PrimitiveTypeConfiguration.FullName">
      <summary>Gets the full name of this EDM type.</summary>
    </member>
    <member name="P:System.Web.OData.Builder.PrimitiveTypeConfiguration.Kind">
      <summary>Gets the <see cref="T:Microsoft.OData.Edm.EdmTypeKind" /> of this EDM type.</summary>
    </member>
    <member name="P:System.Web.OData.Builder.PrimitiveTypeConfiguration.ModelBuilder">
      <summary>Gets the <see cref="T:System.Web.OData.Builder.ODataModelBuilder" /> used to create this configuration.</summary>
    </member>
    <member name="P:System.Web.OData.Builder.PrimitiveTypeConfiguration.Name">
      <summary>Gets the name of this EDM type.</summary>
    </member>
    <member name="P:System.Web.OData.Builder.PrimitiveTypeConfiguration.Namespace">
      <summary>Gets the namespace of this EDM type.</summary>
    </member>
    <member name="T:System.Web.OData.Builder.ProcedureConfiguration">
      <summary>Represents a Procedure that is exposed in the model</summary>
    </member>
    <member name="M:System.Web.OData.Builder.ProcedureConfiguration.AddParameter(System.String,System.Web.OData.Builder.IEdmTypeConfiguration)">
      <summary>Adds a new non-binding parameter.</summary>
      <returns>Returns <see cref="T:System.Web.OData.Builder.ParameterConfiguration" />.</returns>
    </member>
    <member name="P:System.Web.OData.Builder.ProcedureConfiguration.BindingParameter">
      <summary>Gets the binding parameter.</summary>
      <returns>Returns <see cref="T:System.Web.OData.Builder.BindingParameterConfiguration" />.</returns>
    </member>
    <member name="M:System.Web.OData.Builder.ProcedureConfiguration.CollectionParameter``1(System.String)">
      <summary>Adds a new non-binding collection parameter</summary>
      <returns>Returns <see cref="T:System.Web.OData.Builder.ParameterConfiguration" />.</returns>
      <typeparam name="TElementType"></typeparam>
    </member>
    <member name="P:System.Web.OData.Builder.ProcedureConfiguration.EntitySetPath">
      <summary>The EntitySetPathExpression that entities are returned from.</summary>
      <returns>Returns <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="P:System.Web.OData.Builder.ProcedureConfiguration.FollowsConventions">
      <summary>Gets a value indicating whether procedure links follow OData conventions.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:System.Web.OData.Builder.ProcedureConfiguration.FullyQualifiedName">
      <summary>The FullyQualifiedName is the ContainerQualifiedName further qualified using the Namespace. Typically this is not required, because most services have at most one container with the same name.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Web.OData.Builder.ProcedureConfiguration.IsBindable">
      <summary>Can the procedure be bound to a url representing the BindingParameter.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:System.Web.OData.Builder.ProcedureConfiguration.IsComposable">
      <summary>Can the procedure be composed upon. For example can a URL that invokes the procedure be used as the base url for a request that invokes the procedure and does something else with the results</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:System.Web.OData.Builder.ProcedureConfiguration.IsSideEffecting">
      <summary>Does the procedure have side-effects.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:System.Web.OData.Builder.ProcedureConfiguration.Kind">
      <summary>The Kind of procedure, which can be either Action, Function or ServiceOperation</summary>
      <returns>Returns <see cref="T:System.Web.OData.Builder.ProcedureKind" />.</returns>
    </member>
    <member name="P:System.Web.OData.Builder.ProcedureConfiguration.LinkFactory">
      <summary>Gets or sets the currently registered procedure link factory.</summary>
      <returns>Returns <see cref="T:System.Func`2" />.</returns>
    </member>
    <member name="P:System.Web.OData.Builder.ProcedureConfiguration.ModelBuilder">
      <summary>Gets or sets the <see cref="T:System.Web.OData.Builder.ODataModelBuilder" /> used to create this configuration.</summary>
      <returns>Returns <see cref="T:System.Web.OData.Builder.ODataModelBuilder" />.</returns>
    </member>
    <member name="P:System.Web.OData.Builder.ProcedureConfiguration.Name">
      <summary>The Name of the procedure</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Web.OData.Builder.ProcedureConfiguration.NavigationSource">
      <summary>The Navigation Source that are returned from.</summary>
      <returns>Returns <see cref="T:System.Web.OData.Builder.NavigationSourceConfiguration" />.</returns>
    </member>
    <member name="M:System.Web.OData.Builder.ProcedureConfiguration.Parameter``1(System.String)">
      <summary>Adds a new non-binding parameter</summary>
      <returns>Returns <see cref="T:System.Web.OData.Builder.ParameterConfiguration" />.</returns>
      <typeparam name="TParameter"></typeparam>
    </member>
    <member name="P:System.Web.OData.Builder.ProcedureConfiguration.Parameters">
      <summary>The parameters the procedure takes</summary>
      <returns>Returns <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="P:System.Web.OData.Builder.ProcedureConfiguration.ReturnType">
      <summary>The type returned when the procedure is invoked.</summary>
      <returns>Returns <see cref="T:System.Web.OData.Builder.IEdmTypeConfiguration" />.</returns>
    </member>
    <member name="P:System.Web.OData.Builder.ProcedureConfiguration.Title">
      <summary>The Title of the procedure. When customized, the title of the procedure will be sent back when the OData client asks for an entity or a feed in JSON full metadata.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:System.Web.OData.Builder.ProcedureKind">
      <summary>The Kind of OData Procedure. One of Action, Function or ServiceOperation.</summary>
    </member>
    <member name="F:System.Web.OData.Builder.ProcedureKind.Action">
      <summary>An action</summary>
    </member>
    <member name="F:System.Web.OData.Builder.ProcedureKind.Function">
      <summary>A function</summary>
    </member>
    <member name="F:System.Web.OData.Builder.ProcedureKind.ServiceOperation">
      <summary>A service operation</summary>
    </member>
    <member name="T:System.Web.OData.Builder.PropertyConfiguration">
      <summary>Base class for all property configurations.</summary>
    </member>
    <member name="M:System.Web.OData.Builder.PropertyConfiguration.#ctor(System.Reflection.PropertyInfo,System.Web.OData.Builder.StructuralTypeConfiguration)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Builder.PropertyConfiguration" /> class.</summary>
      <param name="property">The name of the property.</param>
      <param name="declaringType">The declaring EDM type of the property.</param>
    </member>
    <member name="P:System.Web.OData.Builder.PropertyConfiguration.AddedExplicitly">
      <summary>Gets or sets a value that is <see cref="true" /> if the property was added by the user; <see cref="false" /> if it was inferred through conventions.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:System.Web.OData.Builder.PropertyConfiguration.DeclaringType">
      <summary>Gets the declaring type.</summary>
      <returns>Returns <see cref="T:System.Web.OData.Builder.StructuralTypeConfiguration" />.</returns>
    </member>
    <member name="M:System.Web.OData.Builder.PropertyConfiguration.IsCountable">
      <summary>Sets the property as countable.</summary>
      <returns>Returns <see cref="T:System.Web.OData.Builder.PropertyConfiguration" />.</returns>
    </member>
    <member name="M:System.Web.OData.Builder.PropertyConfiguration.IsExpandable">
      <summary>Sets the property as expandable.</summary>
      <returns>Returns <see cref="T:System.Web.OData.Builder.PropertyConfiguration" />.</returns>
    </member>
    <member name="M:System.Web.OData.Builder.PropertyConfiguration.IsFilterable">
      <summary>Sets the property as filterable.</summary>
      <returns>Returns <see cref="T:System.Web.OData.Builder.PropertyConfiguration" />.</returns>
    </member>
    <member name="M:System.Web.OData.Builder.PropertyConfiguration.IsNavigable">
      <summary>Sets the property as navigable.</summary>
      <returns>Returns <see cref="T:System.Web.OData.Builder.PropertyConfiguration" />.</returns>
    </member>
    <member name="M:System.Web.OData.Builder.PropertyConfiguration.IsNonFilterable">
      <summary>Sets the property as nonfilterable.</summary>
      <returns>Returns <see cref="T:System.Web.OData.Builder.PropertyConfiguration" />.</returns>
    </member>
    <member name="M:System.Web.OData.Builder.PropertyConfiguration.IsNotCountable">
      <summary>Sets the property as not countable.</summary>
      <returns>Returns <see cref="T:System.Web.OData.Builder.PropertyConfiguration" />.</returns>
    </member>
    <member name="M:System.Web.OData.Builder.PropertyConfiguration.IsNotExpandable">
      <summary>Sets the property as not expandable.</summary>
      <returns>Returns <see cref="T:System.Web.OData.Builder.PropertyConfiguration" />.</returns>
    </member>
    <member name="M:System.Web.OData.Builder.PropertyConfiguration.IsNotFilterable">
      <summary>Sets the property as not filterable.</summary>
      <returns>Returns <see cref="T:System.Web.OData.Builder.PropertyConfiguration" />.</returns>
    </member>
    <member name="M:System.Web.OData.Builder.PropertyConfiguration.IsNotNavigable">
      <summary>Sets the property as not navigable.</summary>
      <returns>Returns <see cref="T:System.Web.OData.Builder.PropertyConfiguration" />.</returns>
    </member>
    <member name="M:System.Web.OData.Builder.PropertyConfiguration.IsNotSortable">
      <summary>Sets the property as not sortable.</summary>
      <returns>Returns <see cref="T:System.Web.OData.Builder.PropertyConfiguration" />.</returns>
    </member>
    <member name="P:System.Web.OData.Builder.PropertyConfiguration.IsRestricted">
      <summary>Gets whether the property is restricted, i.e. not filterable, not sortable, not navigable, not expandable, or not countable.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Web.OData.Builder.PropertyConfiguration.IsSortable">
      <summary>Sets the property as sortable.</summary>
      <returns>Returns <see cref="T:System.Web.OData.Builder.PropertyConfiguration" />.</returns>
    </member>
    <member name="M:System.Web.OData.Builder.PropertyConfiguration.IsUnsortable">
      <summary>Sets the property as unsortable.</summary>
      <returns>Returns <see cref="T:System.Web.OData.Builder.PropertyConfiguration" />.</returns>
    </member>
    <member name="P:System.Web.OData.Builder.PropertyConfiguration.Kind">
      <summary>Gets the <see cref="T:System.Web.OData.Builder.PropertyKind" /> of the property.</summary>
      <returns>Returns <see cref="T:System.Web.OData.Builder.PropertyKind" />.</returns>
    </member>
    <member name="P:System.Web.OData.Builder.PropertyConfiguration.Name">
      <summary>Gets or sets the name of the property.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Web.OData.Builder.PropertyConfiguration.NonFilterable">
      <summary>Gets or sets whether the property is nonfilterable. default is false.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:System.Web.OData.Builder.PropertyConfiguration.NotCountable">
      <summary>Gets or sets whether the property is not countable. default is false.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:System.Web.OData.Builder.PropertyConfiguration.NotExpandable">
      <summary>Gets or sets whether the property is not expandable. default is false.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:System.Web.OData.Builder.PropertyConfiguration.NotFilterable">
      <summary>Gets or sets whether the property is not filterable. default is false.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:System.Web.OData.Builder.PropertyConfiguration.NotNavigable">
      <summary>Gets or sets whether the property is not navigable. default is false.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:System.Web.OData.Builder.PropertyConfiguration.NotSortable">
      <summary>Gets or sets whether the property is not sortable. default is false.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:System.Web.OData.Builder.PropertyConfiguration.PropertyInfo">
      <summary>Gets the mapping CLR <see cref="P:System.Web.OData.Builder.PropertyConfiguration.PropertyInfo" />.</summary>
      <returns>Returns <see cref="T:System.Reflection.PropertyInfo" />.</returns>
    </member>
    <member name="P:System.Web.OData.Builder.PropertyConfiguration.RelatedClrType">
      <summary>Gets the CLR <see cref="T:System.Type" /> of the property.</summary>
      <returns>Returns <see cref="T:System.Type" />.</returns>
    </member>
    <member name="P:System.Web.OData.Builder.PropertyConfiguration.Unsortable">
      <summary>Gets or sets whether the property is unsortable. default is false.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="T:System.Web.OData.Builder.PropertyKind">
      <summary>The kind of the EDM property.</summary>
    </member>
    <member name="F:System.Web.OData.Builder.PropertyKind.Collection">
      <summary>Represents an EDM collection property.</summary>
    </member>
    <member name="F:System.Web.OData.Builder.PropertyKind.Complex">
      <summary>Represents an EDM complex property.</summary>
    </member>
    <member name="F:System.Web.OData.Builder.PropertyKind.Dynamic">
      <summary>Represents a dynamic property dictionary for an open type.</summary>
    </member>
    <member name="F:System.Web.OData.Builder.PropertyKind.Enum">
      <summary>Represents an EDM enum property.</summary>
    </member>
    <member name="F:System.Web.OData.Builder.PropertyKind.Navigation">
      <summary>Represents an EDM navigation property.</summary>
    </member>
    <member name="F:System.Web.OData.Builder.PropertyKind.Primitive">
      <summary>Represents an EDM primitive property.</summary>
    </member>
    <member name="T:System.Web.OData.Builder.SelfLinkBuilder`1">
      <summary>Encapsulates a self link factory and whether the link factory follows conventions or not.</summary>
      <typeparam name="T">The type of the self link generated. This should be <see cref="T:System.String" /> for ID links and <see cref="T:System.Uri" /> for read and edit links.</typeparam>
    </member>
    <member name="M:System.Web.OData.Builder.SelfLinkBuilder`1.#ctor(System.Func{System.Web.OData.EntityInstanceContext,`0},System.Boolean)">
      <summary>Constructs a new instance of <see cref="T:System.Web.OData.Builder.SelfLinkBuilder`1" />.</summary>
      <param name="linkFactory">The link factory.</param>
      <param name="followsConventions">Whether the factory follows odata conventions for link generation.</param>
    </member>
    <member name="P:System.Web.OData.Builder.SelfLinkBuilder`1.Factory">
      <summary>Gets the factory for generating links.</summary>
    </member>
    <member name="P:System.Web.OData.Builder.SelfLinkBuilder`1.FollowsConventions">
      <summary>Gets a boolean indicating whether the link factory follows OData conventions or not.</summary>
    </member>
    <member name="T:System.Web.OData.Builder.SingletonAttribute">
      <summary>Represents an <see cref="T:System.Attribute" /> that can be placed on a property to specify that the property must bind to a singleton. It's used in convention model builder.</summary>
    </member>
    <member name="M:System.Web.OData.Builder.SingletonAttribute.#ctor"></member>
    <member name="T:System.Web.OData.Builder.SingletonConfiguration">
      <summary>Allows configuration to be performed for a singleton in a model. A <see cref="T:System.Web.OData.Builder.SingletonConfiguration" /> can be obtained by using the method <see cref="P:System.Web.OData.Builder.ODataModelBuilder.Singletons" />.</summary>
    </member>
    <member name="M:System.Web.OData.Builder.SingletonConfiguration.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Builder.SingletonConfiguration" /> class. The default constructor is intended for use by unit testing only.</summary>
    </member>
    <member name="M:System.Web.OData.Builder.SingletonConfiguration.#ctor(System.Web.OData.Builder.ODataModelBuilder,System.Type,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Builder.SingletonConfiguration" /> class.</summary>
      <param name="modelBuilder">The <see cref="T:System.Web.OData.Builder.ODataModelBuilder" />.</param>
      <param name="entityClrType">The <see cref="T:System.Type" /> of the entity type contained in this singleton.</param>
      <param name="name">The name of the singleton.</param>
    </member>
    <member name="M:System.Web.OData.Builder.SingletonConfiguration.#ctor(System.Web.OData.Builder.ODataModelBuilder,System.Web.OData.Builder.EntityTypeConfiguration,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Builder.SingletonConfiguration" /> class.</summary>
      <param name="modelBuilder">The <see cref="T:System.Web.OData.Builder.ODataModelBuilder" />.</param>
      <param name="entityType">The entity type <see cref="T:System.Web.OData.Builder.EntityTypeConfiguration" /> contained in this singleton.</param>
      <param name="name">The name of the singleton.</param>
    </member>
    <member name="T:System.Web.OData.Builder.SingletonConfiguration`1">
      <summary>Represents an <see cref="T:Microsoft.OData.Edm.IEdmSingleton" /> that can be built using <see cref="T:System.Web.OData.Builder.ODataModelBuilder" />.</summary>
      <typeparam name="TEntityType"></typeparam>
    </member>
    <member name="T:System.Web.OData.Builder.StructuralPropertyConfiguration">
      <summary>Base class for all structural property configurations.</summary>
    </member>
    <member name="M:System.Web.OData.Builder.StructuralPropertyConfiguration.#ctor(System.Reflection.PropertyInfo,System.Web.OData.Builder.StructuralTypeConfiguration)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Builder.StructuralPropertyConfiguration" /> class.</summary>
      <param name="property">The property of the configuration.</param>
      <param name="declaringType">The declaring type of the property.</param>
    </member>
    <member name="P:System.Web.OData.Builder.StructuralPropertyConfiguration.ConcurrencyToken">
      <summary>Gets or sets a value indicating whether this property is a concurrency token or not.</summary>
    </member>
    <member name="P:System.Web.OData.Builder.StructuralPropertyConfiguration.OptionalProperty">
      <summary>Gets or sets a value indicating whether this property is optional or not.</summary>
    </member>
    <member name="T:System.Web.OData.Builder.StructuralTypeConfiguration">
      <summary>Represents an <see cref="T:Microsoft.OData.Edm.IEdmStructuredType" /> that can be built using <see cref="T:System.Web.OData.Builder.ODataModelBuilder" />.</summary>
    </member>
    <member name="M:System.Web.OData.Builder.StructuralTypeConfiguration.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Builder.StructuralTypeConfiguration" /> class.</summary>
    </member>
    <member name="M:System.Web.OData.Builder.StructuralTypeConfiguration.#ctor(System.Web.OData.Builder.ODataModelBuilder,System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Builder.StructuralTypeConfiguration" /> class.</summary>
      <param name="modelBuilder">The associated <see cref="T:System.Web.OData.Builder.ODataModelBuilder" />.</param>
      <param name="clrType">The backing CLR type for this EDM structural type.</param>
    </member>
    <member name="M:System.Web.OData.Builder.StructuralTypeConfiguration.AddCollectionProperty(System.Reflection.PropertyInfo)">
      <summary>Adds a collection property to this edm type.</summary>
      <returns>The <see cref="T:System.Web.OData.Builder.CollectionPropertyConfiguration" /> so that the property can be configured further.</returns>
      <param name="propertyInfo">The property being added.</param>
    </member>
    <member name="M:System.Web.OData.Builder.StructuralTypeConfiguration.AddComplexProperty(System.Reflection.PropertyInfo)">
      <summary>Adds a complex property to this edm type.</summary>
      <returns>The <see cref="T:System.Web.OData.Builder.ComplexPropertyConfiguration" /> so that the property can be configured further.</returns>
      <param name="propertyInfo">The property being added.</param>
    </member>
    <member name="M:System.Web.OData.Builder.StructuralTypeConfiguration.AddDynamicPropertyDictionary(System.Reflection.PropertyInfo)">
      <summary>Adds the property info of the dynamic properties to this structural type.</summary>
      <param name="propertyInfo">The property being added.</param>
    </member>
    <member name="P:System.Web.OData.Builder.StructuralTypeConfiguration.AddedExplicitly">
      <summary>Gets or sets a value that is <see cref="true" /> if the type's name or namespace was set by the user; <see cref="false" /> if it was inferred through conventions.</summary>
    </member>
    <member name="M:System.Web.OData.Builder.StructuralTypeConfiguration.AddEnumProperty(System.Reflection.PropertyInfo)">
      <summary>Adds an enum property to this edm type.</summary>
      <returns>The <see cref="T:System.Web.OData.Builder.EnumPropertyConfiguration" /> so that the property can be configured further.</returns>
      <param name="propertyInfo">The property being added.</param>
    </member>
    <member name="M:System.Web.OData.Builder.StructuralTypeConfiguration.AddProperty(System.Reflection.PropertyInfo)">
      <summary>Adds a primitive property to this edm type.</summary>
      <returns>The <see cref="T:System.Web.OData.Builder.PrimitivePropertyConfiguration" /> so that the property can be configured further.</returns>
      <param name="propertyInfo">The property being added.</param>
    </member>
    <member name="P:System.Web.OData.Builder.StructuralTypeConfiguration.BaseTypeConfigured">
      <summary>Gets a value that represents whether the base type is explicitly configured or inferred.</summary>
    </member>
    <member name="P:System.Web.OData.Builder.StructuralTypeConfiguration.BaseTypeInternal">
      <summary>Gets the base type of this structural type.</summary>
    </member>
    <member name="P:System.Web.OData.Builder.StructuralTypeConfiguration.ClrType">
      <summary>Gets the backing CLR <see cref="T:System.Type" />.</summary>
    </member>
    <member name="P:System.Web.OData.Builder.StructuralTypeConfiguration.DynamicPropertyDictionary">
      <summary>Gets the CLR property info of the dynamic property dictionary on this structural type.</summary>
    </member>
    <member name="P:System.Web.OData.Builder.StructuralTypeConfiguration.ExplicitProperties">
      <summary>Gets the collection of explicitly added properties.</summary>
    </member>
    <member name="P:System.Web.OData.Builder.StructuralTypeConfiguration.FullName">
      <summary>Gets the full name of this edm type.</summary>
    </member>
    <member name="P:System.Web.OData.Builder.StructuralTypeConfiguration.IgnoredProperties">
      <summary>Gets the properties from the backing CLR type that are to be ignored on this edm type.</summary>
    </member>
    <member name="P:System.Web.OData.Builder.StructuralTypeConfiguration.IsAbstract">
      <summary>Gets or sets a value indicating whether this type is abstract.</summary>
    </member>
    <member name="P:System.Web.OData.Builder.StructuralTypeConfiguration.IsOpen">
      <summary>Gets a value indicating whether this type is open or not.</summary>
    </member>
    <member name="P:System.Web.OData.Builder.StructuralTypeConfiguration.Kind">
      <summary>Gets the <see cref="T:Microsoft.OData.Edm.EdmTypeKind" /> of this edm type.</summary>
    </member>
    <member name="P:System.Web.OData.Builder.StructuralTypeConfiguration.ModelBuilder">
      <summary>The <see cref="T:System.Web.OData.Builder.ODataModelBuilder" />.</summary>
    </member>
    <member name="P:System.Web.OData.Builder.StructuralTypeConfiguration.Name">
      <summary>Gets or sets the name of this EDM type.</summary>
    </member>
    <member name="P:System.Web.OData.Builder.StructuralTypeConfiguration.Namespace">
      <summary>Gets or sets the namespace of this EDM type.</summary>
    </member>
    <member name="P:System.Web.OData.Builder.StructuralTypeConfiguration.Properties">
      <summary>Gets the declared properties on this edm type.</summary>
    </member>
    <member name="P:System.Web.OData.Builder.StructuralTypeConfiguration.RemovedProperties">
      <summary>Gets the collection of explicitly removed properties.</summary>
    </member>
    <member name="M:System.Web.OData.Builder.StructuralTypeConfiguration.RemoveProperty(System.Reflection.PropertyInfo)">
      <summary>Removes the given property.</summary>
      <param name="propertyInfo">The property being removed.</param>
    </member>
    <member name="T:System.Web.OData.Builder.StructuralTypeConfiguration`1">
      <summary>Represents an <see cref="T:Microsoft.OData.Edm.IEdmStructuredType" /> that can be built using <see cref="T:System.Web.OData.Builder.ODataModelBuilder" />.</summary>
      <typeparam name="TStructuralType"></typeparam>
    </member>
    <member name="M:System.Web.OData.Builder.StructuralTypeConfiguration`1.#ctor(System.Web.OData.Builder.StructuralTypeConfiguration)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Builder.StructuralTypeConfiguration`1" /> class.</summary>
      <param name="configuration">The inner configuration of the structural type.</param>
    </member>
    <member name="M:System.Web.OData.Builder.StructuralTypeConfiguration`1.CollectionProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})">
      <summary>Adds a collection property to the EDM type.</summary>
      <returns>A configuration object that can be used to further configure the property.</returns>
      <param name="propertyExpression">A lambda expression representing the navigation property for the relationship. For example, in C# t =&gt; t.MyProperty and in Visual Basic .NET Function(t) t.MyProperty.</param>
      <typeparam name="TElementType">The element type of the collection.</typeparam>
    </member>
    <member name="M:System.Web.OData.Builder.StructuralTypeConfiguration`1.ComplexProperty``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>Adds a complex property to the EDM type.</summary>
      <returns>A configuration object that can be used to further configure the property.</returns>
      <param name="propertyExpression">A lambda expression representing the navigation property for the relationship. For example, in C# t =&gt; t.MyProperty and in Visual Basic .NET Function(t) t.MyProperty.</param>
      <typeparam name="TComplexType">The complex type.</typeparam>
    </member>
    <member name="M:System.Web.OData.Builder.StructuralTypeConfiguration`1.EnumProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{``0}}})">
      <summary>Adds an optional enum property to the EDM type.</summary>
      <returns>A configuration object that can be used to further configure the property.</returns>
      <param name="propertyExpression">A lambda expression representing the navigation property for the relationship. For example, in C# t =&gt; t.MyProperty and in Visual Basic .NET Function(t) t.MyProperty.</param>
      <typeparam name="T">The enum property type.</typeparam>
    </member>
    <member name="M:System.Web.OData.Builder.StructuralTypeConfiguration`1.EnumProperty``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>Adds a required enum property to the EDM type.</summary>
      <returns>A configuration object that can be used to further configure the property.</returns>
      <param name="propertyExpression">A lambda expression representing the navigation property for the relationship. For example, in C# t =&gt; t.MyProperty and in Visual Basic .NET Function(t) t.MyProperty.</param>
      <typeparam name="T">The enum property type.</typeparam>
    </member>
    <member name="P:System.Web.OData.Builder.StructuralTypeConfiguration`1.FullName">
      <summary>Gets the full name of this EDM type.</summary>
    </member>
    <member name="M:System.Web.OData.Builder.StructuralTypeConfiguration`1.HasDynamicProperties(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IDictionary{System.String,System.Object}}})">
      <summary>Adds a dynamic property dictionary property.</summary>
      <param name="propertyExpression">A lambda expression representing the dynamic property dictionary for the relationship. For example, in C# t =&gt; t.MyProperty and in Visual Basic .NET Function(t) t.MyProperty.</param>
    </member>
    <member name="M:System.Web.OData.Builder.StructuralTypeConfiguration`1.Ignore``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>Excludes a property from the type.</summary>
      <param name="propertyExpression">A lambda expression representing the navigation property for the relationship. For example, in C# t =&gt; t.MyProperty and in Visual Basic .NET Function(t) t.MyProperty.</param>
      <typeparam name="TProperty">The property type.</typeparam>
    </member>
    <member name="P:System.Web.OData.Builder.StructuralTypeConfiguration`1.IsOpen">
      <summary>Gets an indicator whether this EDM type is an open type or not. Returns true if this is an open type; false otherwise.</summary>
    </member>
    <member name="P:System.Web.OData.Builder.StructuralTypeConfiguration`1.Name">
      <summary>Gets and sets the name of this EDM type.</summary>
    </member>
    <member name="P:System.Web.OData.Builder.StructuralTypeConfiguration`1.Namespace">
      <summary>Gets and sets the namespace of this EDM type.</summary>
    </member>
    <member name="P:System.Web.OData.Builder.StructuralTypeConfiguration`1.Properties">
      <summary>Gets the collection of EDM structural properties that belong to this type.</summary>
    </member>
    <member name="M:System.Web.OData.Builder.StructuralTypeConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.Byte[]}})">
      <summary>Adds a binary property to the EDM type.</summary>
      <returns>A configuration object that can be used to further configure the property.</returns>
      <param name="propertyExpression">A lambda expression representing the navigation property for the relationship. For example, in C# t =&gt; t.MyProperty and in Visual Basic .NET Function(t) t.MyProperty.</param>
    </member>
    <member name="M:System.Web.OData.Builder.StructuralTypeConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.IO.Stream}})">
      <summary>Adds a stream property the EDM type.</summary>
      <returns>A configuration object that can be used to further configure the property.</returns>
      <param name="propertyExpression">A lambda expression representing the navigation property for the relationship. For example, in C# t =&gt; t.MyProperty and in Visual Basic .NET Function(t) t.MyProperty.</param>
    </member>
    <member name="M:System.Web.OData.Builder.StructuralTypeConfiguration`1.Property``1(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{``0}}})">
      <summary>Adds an optional primitive property to the EDM type.</summary>
      <returns>A configuration object that can be used to further configure the property.</returns>
      <param name="propertyExpression">A lambda expression representing the navigation property for the relationship. For example, in C# t =&gt; t.MyProperty and in Visual Basic .NET Function(t) t.MyProperty.</param>
      <typeparam name="T">The primitive property type.</typeparam>
    </member>
    <member name="M:System.Web.OData.Builder.StructuralTypeConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.String}})">
      <summary>Adds a string property to the EDM type.</summary>
      <returns>A configuration object that can be used to further configure the property.</returns>
      <param name="propertyExpression">A lambda expression representing the navigation property for the relationship. For example, in C# t =&gt; t.MyProperty and in Visual Basic .NET Function(t) t.MyProperty.</param>
    </member>
    <member name="M:System.Web.OData.Builder.StructuralTypeConfiguration`1.Property``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>Adds a required primitive property to the EDM type.</summary>
      <returns>A configuration object that can be used to further configure the property.</returns>
      <param name="propertyExpression">A lambda expression representing the navigation property for the relationship. For example, in C# t =&gt; t.MyProperty and in Visual Basic .NET Function(t) t.MyProperty.</param>
      <typeparam name="T">The primitive property type.</typeparam>
    </member>
    <member name="T:System.Web.OData.Extensions.HttpConfigurationExtensions">
      <summary>Provides extension methods for the <see cref="T:System.Web.Http.HttpConfiguration" /> class.</summary>
    </member>
    <member name="M:System.Web.OData.Extensions.HttpConfigurationExtensions.AddODataQueryFilter(System.Web.Http.HttpConfiguration)">
      <summary>Enables query support for actions with an <see cref="T:System.Linq.IQueryable" /> or <see cref="T:System.Linq.IQueryable`1" /> return type. To avoid processing unexpected or malicious queries, use the validation settings on <see cref="T:System.Web.OData.EnableQueryAttribute" /> to validate incoming queries. For more information, visit http://go.microsoft.com/fwlink/?LinkId=279712.</summary>
      <param name="configuration">The server configuration.</param>
    </member>
    <member name="M:System.Web.OData.Extensions.HttpConfigurationExtensions.AddODataQueryFilter(System.Web.Http.HttpConfiguration,System.Web.Http.Filters.IActionFilter)">
      <summary>Enables query support for actions with an <see cref="T:System.Linq.IQueryable" /> or <see cref="T:System.Linq.IQueryable`1" /> return type. To avoid processing unexpected or malicious queries, use the validation settings on <see cref="T:System.Web.OData.EnableQueryAttribute" /> to validate incoming queries. For more information, visit http://go.microsoft.com/fwlink/?LinkId=279712.</summary>
      <param name="configuration">The server configuration.</param>
      <param name="queryFilter">The action filter that executes the query.</param>
    </member>
    <member name="M:System.Web.OData.Extensions.HttpConfigurationExtensions.GetETagHandler(System.Web.Http.HttpConfiguration)">
      <summary>Gets the <see cref="T:System.Web.OData.Formatter.IETagHandler" /> from the configuration.</summary>
      <returns>The <see cref="T:System.Web.OData.Formatter.IETagHandler" /> for the configuration.</returns>
      <param name="configuration">The server configuration.</param>
    </member>
    <member name="M:System.Web.OData.Extensions.HttpConfigurationExtensions.MapODataServiceRoute(System.Web.Http.HttpConfiguration,System.String,System.String,Microsoft.OData.Edm.IEdmModel)">
      <summary>Maps the specified OData route and the OData route attributes.</summary>
      <returns>The added <see cref="T:System.Web.OData.Routing.ODataRoute" />.</returns>
      <param name="configuration">The server configuration.</param>
      <param name="routeName">The name of the route to map.</param>
      <param name="routePrefix">The prefix to add to the OData route's path template.</param>
      <param name="model">The EDM model to use for parsing OData paths.</param>
    </member>
    <member name="M:System.Web.OData.Extensions.HttpConfigurationExtensions.MapODataServiceRoute(System.Web.Http.HttpConfiguration,System.String,System.String,Microsoft.OData.Edm.IEdmModel,System.Net.Http.HttpMessageHandler)">
      <summary>Maps the specified OData route and the OData route attributes. When the <paramref name="defaultHandler" /> is non- null, it will map it as the default handler for the route.</summary>
      <returns>The added <see cref="T:System.Web.OData.Routing.ODataRoute" />.</returns>
      <param name="configuration">The server configuration.</param>
      <param name="routeName">The name of the route to map.</param>
      <param name="routePrefix">The prefix to add to the OData route's path template.</param>
      <param name="model">The EDM model to use for parsing OData paths.</param>
      <param name="defaultHandler">The default <see cref="T:System.Net.Http.HttpMessageHandler" /> for this route.</param>
    </member>
    <member name="M:System.Web.OData.Extensions.HttpConfigurationExtensions.MapODataServiceRoute(System.Web.Http.HttpConfiguration,System.String,System.String,Microsoft.OData.Edm.IEdmModel,System.Web.OData.Batch.ODataBatchHandler)">
      <summary>Maps the specified OData route and the OData route attributes. When the <paramref name="batchHandler" /> is non- null, it will create a '$batch' endpoint to handle the batch requests.</summary>
      <returns>The added <see cref="T:System.Web.OData.Routing.ODataRoute" />.</returns>
      <param name="configuration">The server configuration.</param>
      <param name="routeName">The name of the route to map.</param>
      <param name="routePrefix">The prefix to add to the OData route's path template.</param>
      <param name="model">The EDM model to use for parsing OData paths.</param>
      <param name="batchHandler">The <see cref="T:System.Web.OData.Batch.ODataBatchHandler" />.</param>
    </member>
    <member name="M:System.Web.OData.Extensions.HttpConfigurationExtensions.MapODataServiceRoute(System.Web.Http.HttpConfiguration,System.String,System.String,Microsoft.OData.Edm.IEdmModel,System.Web.OData.Routing.IODataPathHandler,System.Collections.Generic.IEnumerable{System.Web.OData.Routing.Conventions.IODataRoutingConvention})">
      <summary>Maps the specified OData route.</summary>
      <returns>The added <see cref="T:System.Web.OData.Routing.ODataRoute" />.</returns>
      <param name="configuration">The server configuration.</param>
      <param name="routeName">The name of the route to map.</param>
      <param name="routePrefix">The prefix to add to the OData route's path template.</param>
      <param name="model">The EDM model to use for parsing OData paths.</param>
      <param name="pathHandler">The <see cref="T:System.Web.OData.Routing.IODataPathHandler" /> to use for parsing the OData path.</param>
      <param name="routingConventions">The OData routing conventions to use for controller and action selection.</param>
    </member>
    <member name="M:System.Web.OData.Extensions.HttpConfigurationExtensions.MapODataServiceRoute(System.Web.Http.HttpConfiguration,System.String,System.String,Microsoft.OData.Edm.IEdmModel,System.Web.OData.Routing.IODataPathHandler,System.Collections.Generic.IEnumerable{System.Web.OData.Routing.Conventions.IODataRoutingConvention},System.Net.Http.HttpMessageHandler)">
      <summary>Maps the specified OData route. When the <paramref name="defaultHandler" /> is non- null, it will map it as the handler for the route.</summary>
      <returns>The added <see cref="T:System.Web.OData.Routing.ODataRoute" />.</returns>
      <param name="configuration">The server configuration.</param>
      <param name="routeName">The name of the route to map.</param>
      <param name="routePrefix">The prefix to add to the OData route's path template.</param>
      <param name="model">The EDM model to use for parsing OData paths.</param>
      <param name="pathHandler">The <see cref="T:System.Web.OData.Routing.IODataPathHandler" /> to use for parsing the OData path.</param>
      <param name="routingConventions">The OData routing conventions to use for controller and action selection.</param>
      <param name="defaultHandler">The default <see cref="T:System.Net.Http.HttpMessageHandler" /> for this route.</param>
    </member>
    <member name="M:System.Web.OData.Extensions.HttpConfigurationExtensions.MapODataServiceRoute(System.Web.Http.HttpConfiguration,System.String,System.String,Microsoft.OData.Edm.IEdmModel,System.Web.OData.Routing.IODataPathHandler,System.Collections.Generic.IEnumerable{System.Web.OData.Routing.Conventions.IODataRoutingConvention},System.Web.OData.Batch.ODataBatchHandler)">
      <summary>Maps the specified OData route. When the <paramref name="batchHandler" /> is non- null, it will create a '$batch' endpoint to handle the batch requests.</summary>
      <returns>The added <see cref="T:System.Web.OData.Routing.ODataRoute" />.</returns>
      <param name="configuration">The server configuration.</param>
      <param name="routeName">The name of the route to map.</param>
      <param name="routePrefix">The prefix to add to the OData route's path template.</param>
      <param name="model">The EDM model to use for parsing OData paths.</param>
      <param name="pathHandler">The <see cref="T:System.Web.OData.Routing.IODataPathHandler" /> to use for parsing the OData path.</param>
      <param name="routingConventions">The OData routing conventions to use for controller and action selection.</param>
      <param name="batchHandler">The <see cref="T:System.Web.OData.Batch.ODataBatchHandler" />.</param>
    </member>
    <member name="M:System.Web.OData.Extensions.HttpConfigurationExtensions.SetETagHandler(System.Web.Http.HttpConfiguration,System.Web.OData.Formatter.IETagHandler)">
      <summary>Sets the <see cref="T:System.Web.OData.Formatter.IETagHandler" /> on the configuration.</summary>
      <param name="configuration">The server configuration.</param>
      <param name="handler">The <see cref="T:System.Web.OData.Formatter.IETagHandler" /> for the configuration.</param>
    </member>
    <member name="T:System.Web.OData.Extensions.HttpErrorExtensions">
      <summary>Provides extension methods for the <see cref="T:System.Web.Http.HttpError" /> class.</summary>
    </member>
    <member name="M:System.Web.OData.Extensions.HttpErrorExtensions.CreateODataError(System.Web.Http.HttpError)">
      <summary>Converts the <paramref name="httpError" /> to an <see cref="T:Microsoft.OData.Core.ODataError" />.</summary>
      <returns>The converted <see cref="T:Microsoft.OData.Core.ODataError" /></returns>
      <param name="httpError">The <see cref="T:System.Web.Http.HttpError" /> instance to convert.</param>
    </member>
    <member name="T:System.Web.OData.Extensions.HttpRequestMessageExtensions">
      <summary>Provides extension methods for the <see cref="T:System.Net.Http.HttpRequestMessage" /> class.</summary>
    </member>
    <member name="M:System.Web.OData.Extensions.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,Microsoft.OData.Core.ODataError)">
      <summary>Helper method that performs content negotiation and creates a <see cref="T:System.Net.Http.HttpResponseMessage" /> representing an error with an instance of <see cref="T:System.Net.Http.ObjectContent`1" /> wrapping <paramref name="oDataError" /> as the content. If no formatter is found, this method returns a response with status 406 NotAcceptable.This method requires that <paramref name="request" /> has been associated with an instance of <see cref="T:System.Web.Http.HttpConfiguration" />.</summary>
      <returns>An error response wrapping <paramref name="oDataError" /> with status code <paramref name="statusCode" />.</returns>
      <param name="request">The request of interest.</param>
      <param name="statusCode">The status code of the created response.</param>
      <param name="oDataError">The OData error to wrap.</param>
    </member>
    <member name="M:System.Web.OData.Extensions.HttpRequestMessageExtensions.GetETag``1(System.Net.Http.HttpRequestMessage,System.Net.Http.Headers.EntityTagHeaderValue)">
      <summary>Gets the <see cref="T:System.Web.OData.Formatter.ETag`1" /> from the given request.</summary>
      <returns>The parsed <see cref="T:System.Web.OData.Formatter.ETag`1" />.</returns>
      <param name="request">The request.</param>
      <param name="entityTagHeaderValue">The entity tag header value.</param>
      <typeparam name="TEntity"></typeparam>
    </member>
    <member name="M:System.Web.OData.Extensions.HttpRequestMessageExtensions.GetETag(System.Net.Http.HttpRequestMessage,System.Net.Http.Headers.EntityTagHeaderValue)">
      <summary>Gets the OData <see cref="T:System.Web.OData.Formatter.ETag" /> from the given request.</summary>
      <returns>The parsed <see cref="T:System.Web.OData.Formatter.ETag" />.</returns>
      <param name="request">The request.</param>
      <param name="entityTagHeaderValue">The entity tag header value.</param>
    </member>
    <member name="M:System.Web.OData.Extensions.HttpRequestMessageExtensions.ODataProperties(System.Net.Http.HttpRequestMessage)">
      <summary>Gets the <see cref="T:System.Web.OData.Extensions.HttpRequestMessageProperties" /> instance containing OData methods and properties for given <see cref="T:System.Net.Http.HttpRequestMessage" />.</summary>
      <returns>An object through which OData methods and properties for given <paramref name="request" /> are available.</returns>
      <param name="request">The request of interest.</param>
    </member>
    <member name="T:System.Web.OData.Extensions.HttpRequestMessageProperties">
      <summary>Provides properties for use with the <see cref="M:System.Web.OData.Extensions.HttpRequestMessageExtensions.ODataProperties(System.Net.Http.HttpRequestMessage)" /> extension method.</summary>
    </member>
    <member name="P:System.Web.OData.Extensions.HttpRequestMessageProperties.Model">
      <summary>Gets or sets the EDM model associated with the request.</summary>
    </member>
    <member name="P:System.Web.OData.Extensions.HttpRequestMessageProperties.NextLink">
      <summary>Gets or sets the next link for the OData response.</summary>
      <returns>null if no next link should be sent back to the client.</returns>
    </member>
    <member name="P:System.Web.OData.Extensions.HttpRequestMessageProperties.Path">
      <summary>Gets or sets the OData path of the request.</summary>
    </member>
    <member name="P:System.Web.OData.Extensions.HttpRequestMessageProperties.PathHandler">
      <summary>Gets or sets the <see cref="T:System.Web.OData.Routing.IODataPathHandler" /> for generating links.</summary>
      <returns>A default <see cref="T:System.Web.OData.Routing.IODataPathHandler" /> implementation if previously null.</returns>
    </member>
    <member name="P:System.Web.OData.Extensions.HttpRequestMessageProperties.RouteName">
      <summary>Gets or sets the route name for generating OData links.</summary>
    </member>
    <member name="P:System.Web.OData.Extensions.HttpRequestMessageProperties.RoutingConventions">
      <summary>Gets or sets the OData routing conventions for controller and action selection.</summary>
    </member>
    <member name="P:System.Web.OData.Extensions.HttpRequestMessageProperties.RoutingConventionsStore">
      <summary>Gets the data store used by <see cref="T:System.Web.OData.Routing.Conventions.IODataRoutingConvention" />s to store any custom route data.</summary>
      <returns>Initially an empty IDictionary&lt;string, object&gt;.</returns>
    </member>
    <member name="P:System.Web.OData.Extensions.HttpRequestMessageProperties.SelectExpandClause">
      <summary>Gets or sets the parsed OData <see cref="P:System.Web.OData.Extensions.HttpRequestMessageProperties.SelectExpandClause" /> of the request. The <see cref="T:System.Web.OData.Formatter.ODataMediaTypeFormatter" /> will use this information (if any) while writing the response for this request.</summary>
    </member>
    <member name="P:System.Web.OData.Extensions.HttpRequestMessageProperties.TotalCount">
      <summary>Gets or sets the total count for the OData response.</summary>
      <returns>null if no count should be sent back to the client.</returns>
    </member>
    <member name="T:System.Web.OData.Extensions.UrlHelperExtensions">
      <summary>Provides extension methods for the <see cref="T:System.Web.Http.Routing.UrlHelper" /> class.</summary>
    </member>
    <member name="M:System.Web.OData.Extensions.UrlHelperExtensions.CreateODataLink(System.Web.Http.Routing.UrlHelper,System.Collections.Generic.IList{System.Web.OData.Routing.ODataPathSegment})">
      <summary>Generates an OData link using the request's OData route name and path handler and given segments.</summary>
      <returns>The generated OData link.</returns>
      <param name="urlHelper">The URL helper.</param>
      <param name="segments">The OData path segments.</param>
    </member>
    <member name="M:System.Web.OData.Extensions.UrlHelperExtensions.CreateODataLink(System.Web.Http.Routing.UrlHelper,System.String,System.Web.OData.Routing.IODataPathHandler,System.Collections.Generic.IList{System.Web.OData.Routing.ODataPathSegment})">
      <summary>Generates an OData link using the given OData route name, path handler, and segments.</summary>
      <returns>The generated OData link.</returns>
      <param name="urlHelper">The URL helper.</param>
      <param name="routeName">The name of the OData route.</param>
      <param name="pathHandler">The path handler to use for generating the link.</param>
      <param name="segments">The OData path segments.</param>
    </member>
    <member name="M:System.Web.OData.Extensions.UrlHelperExtensions.CreateODataLink(System.Web.Http.Routing.UrlHelper,System.Web.OData.Routing.ODataPathSegment[])">
      <summary>Generates an OData link using the request's OData route name and path handler and given segments.</summary>
      <returns>The generated OData link.</returns>
      <param name="urlHelper">The URL helper.</param>
      <param name="segments">The OData path segments.</param>
    </member>
    <member name="T:System.Web.OData.Formatter.ETag">
      <summary>The ETag parsed from request.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.ETag.#ctor">
      <summary>Create an instance of <see cref="T:System.Web.OData.Formatter.ETag" />.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.ETag.ApplyTo(System.Linq.IQueryable)">
      <summary>Apply the ETag to the given IQueryable.</summary>
      <returns>The new <see cref="T:System.Linq.IQueryable" /> after the ETag has been applied to.</returns>
      <param name="query">The original <see cref="T:System.Linq.IQueryable" />.</param>
    </member>
    <member name="P:System.Web.OData.Formatter.ETag.EntityType">
      <summary>Gets or sets an entity type of the ETag.</summary>
    </member>
    <member name="P:System.Web.OData.Formatter.ETag.IsAny">
      <summary>Gets or sets whether the ETag is corresponding to "*".</summary>
    </member>
    <member name="P:System.Web.OData.Formatter.ETag.IsWellFormed">
      <summary>Gets or sets whether the ETag is well-formed.</summary>
    </member>
    <member name="P:System.Web.OData.Formatter.ETag.Item(System.String)">
      <summary>Gets or sets the value associated with the specified key.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.ETag.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
      <summary>Gets a property value from the ETag.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.ETag.TrySetMember(System.Dynamic.SetMemberBinder,System.Object)">
      <summary>Sets a property value to ETag.</summary>
    </member>
    <member name="T:System.Web.OData.Formatter.ETag`1">
      <summary>OData ETag of an entity type <paramref name="TEntity" />.</summary>
      <typeparam name="TEntity">TEntity is the type of entity.</typeparam>
    </member>
    <member name="M:System.Web.OData.Formatter.ETag`1.#ctor">
      <summary>Creates an instance of <see cref="T:System.Web.OData.Formatter.ETag`1" />.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.ETag`1.ApplyTo(System.Linq.IQueryable)"></member>
    <member name="M:System.Web.OData.Formatter.ETag`1.ApplyTo(System.Linq.IQueryable{`0})">
      <summary>Apply the ETag to the given <see cref="T:System.Linq.IQueryable`1" />.</summary>
      <returns>The new <see cref="T:System.Linq.IQueryable`1" /> after the ETag has been applied.</returns>
      <param name="query">The original <see cref="T:System.Linq.IQueryable`1" />.</param>
    </member>
    <member name="T:System.Web.OData.Formatter.IETagHandler">
      <summary>Exposes the ability to convert a collection of concurrency property names and values into an <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> and parse an <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> into a list of concurrency property values.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.IETagHandler.CreateETag(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Creates an ETag from concurrency property names and values.</summary>
      <returns>The generated ETag string.</returns>
      <param name="properties">The input property names and values.</param>
    </member>
    <member name="M:System.Web.OData.Formatter.IETagHandler.ParseETag(System.Net.Http.Headers.EntityTagHeaderValue)">
      <summary>Parses an ETag header value into concurrency property names and values.</summary>
      <returns>Concurrency property names and values.</returns>
      <param name="etagHeaderValue">The ETag header value.</param>
    </member>
    <member name="T:System.Web.OData.Formatter.ODataBinaryValueMediaTypeMapping">
      <summary>Media type mapping that associates requests for the raw value of binary properties to the application/octet-stream content type.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.ODataBinaryValueMediaTypeMapping.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Formatter.ODataBinaryValueMediaTypeMapping" /> class.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.ODataBinaryValueMediaTypeMapping.IsMatch(System.Web.OData.Routing.PropertyAccessPathSegment)"></member>
    <member name="T:System.Web.OData.Formatter.ODataCountMediaTypeMapping">
      <summary>Media type mapping that associates requests with $count.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.ODataCountMediaTypeMapping.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Formatter.ODataCountMediaTypeMapping" /> class.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.ODataCountMediaTypeMapping.TryMatchMediaType(System.Net.Http.HttpRequestMessage)"></member>
    <member name="T:System.Web.OData.Formatter.ODataEnumValueMediaTypeMapping">
      <summary>Media type mapping that associates requests for the raw value of enum properties with the text/plain content type.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.ODataEnumValueMediaTypeMapping.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Formatter.ODataEnumValueMediaTypeMapping" /> class.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.ODataEnumValueMediaTypeMapping.IsMatch(System.Web.OData.Routing.PropertyAccessPathSegment)"></member>
    <member name="T:System.Web.OData.Formatter.ODataMediaTypeFormatter">
      <summary>
        <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> class to handle OData.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.ODataMediaTypeFormatter.#ctor(System.Collections.Generic.IEnumerable{Microsoft.OData.Core.ODataPayloadKind})">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Formatter.ODataMediaTypeFormatter" /> class.</summary>
      <param name="payloadKinds">The kind of payloads this formatter supports.</param>
    </member>
    <member name="M:System.Web.OData.Formatter.ODataMediaTypeFormatter.#ctor(System.Web.OData.Formatter.Deserialization.ODataDeserializerProvider,System.Web.OData.Formatter.Serialization.ODataSerializerProvider,System.Collections.Generic.IEnumerable{Microsoft.OData.Core.ODataPayloadKind})">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Formatter.ODataMediaTypeFormatter" /> class.</summary>
      <param name="deserializerProvider">The <see cref="T:System.Web.OData.Formatter.Deserialization.ODataDeserializerProvider" /> to use.</param>
      <param name="serializerProvider">The <see cref="T:System.Web.OData.Formatter.Serialization.ODataSerializerProvider" /> to use.</param>
      <param name="payloadKinds">The kind of payloads this formatter supports.</param>
    </member>
    <member name="M:System.Web.OData.Formatter.ODataMediaTypeFormatter.CanReadType(System.Type)"></member>
    <member name="M:System.Web.OData.Formatter.ODataMediaTypeFormatter.CanWriteType(System.Type)"></member>
    <member name="P:System.Web.OData.Formatter.ODataMediaTypeFormatter.DeserializerProvider">
      <summary>Gets the <see cref="T:System.Web.OData.Formatter.Deserialization.ODataDeserializerProvider" /> that will be used by this formatter instance.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.ODataMediaTypeFormatter.GetPerRequestFormatterInstance(System.Type,System.Net.Http.HttpRequestMessage,System.Net.Http.Headers.MediaTypeHeaderValue)"></member>
    <member name="P:System.Web.OData.Formatter.ODataMediaTypeFormatter.MessageReaderQuotas">
      <summary>Gets the <see cref="T:Microsoft.OData.Core.ODataMessageQuotas" /> that this formatter uses on the read side.</summary>
    </member>
    <member name="P:System.Web.OData.Formatter.ODataMediaTypeFormatter.MessageReaderSettings">
      <summary>Gets the <see cref="T:Microsoft.OData.Core.ODataMessageReaderSettings" /> to be used while reading requests.</summary>
    </member>
    <member name="P:System.Web.OData.Formatter.ODataMediaTypeFormatter.MessageWriterQuotas">
      <summary>Gets the <see cref="T:Microsoft.OData.Core.ODataMessageQuotas" /> that this formatter uses on the write side.</summary>
    </member>
    <member name="P:System.Web.OData.Formatter.ODataMediaTypeFormatter.MessageWriterSettings">
      <summary>Gets the <see cref="T:Microsoft.OData.Core.ODataMessageWriterSettings" /> to be used while writing responses.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.ODataMediaTypeFormatter.ReadFromStreamAsync(System.Type,System.IO.Stream,System.Net.Http.HttpContent,System.Net.Http.Formatting.IFormatterLogger)"></member>
    <member name="P:System.Web.OData.Formatter.ODataMediaTypeFormatter.SerializerProvider">
      <summary>Gets the <see cref="T:System.Web.OData.Formatter.Serialization.ODataSerializerProvider" /> that will be used by this formatter instance.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.ODataMediaTypeFormatter.SetDefaultContentHeaders(System.Type,System.Net.Http.Headers.HttpContentHeaders,System.Net.Http.Headers.MediaTypeHeaderValue)"></member>
    <member name="M:System.Web.OData.Formatter.ODataMediaTypeFormatter.WriteToStreamAsync(System.Type,System.Object,System.IO.Stream,System.Net.Http.HttpContent,System.Net.TransportContext,System.Threading.CancellationToken)"></member>
    <member name="T:System.Web.OData.Formatter.ODataMediaTypeFormatters">
      <summary>
        <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> classes to handle OData.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.ODataMediaTypeFormatters.Create">
      <summary>Creates a list of media type formatters to handle OData. The default serializer provider is <see cref="T:System.Web.OData.Formatter.Serialization.DefaultODataSerializerProvider" /> and the default deserializer provider is <see cref="T:System.Web.OData.Formatter.Deserialization.DefaultODataDeserializerProvider" />.</summary>
      <returns>A list of media type formatters to handle OData.</returns>
    </member>
    <member name="M:System.Web.OData.Formatter.ODataMediaTypeFormatters.Create(System.Web.OData.Formatter.Serialization.ODataSerializerProvider,System.Web.OData.Formatter.Deserialization.ODataDeserializerProvider)">
      <summary>Creates a list of media type formatters to handle OData with the given <paramref name="serializerProvider" /> and <paramref name="deserializerProvider" />.</summary>
      <returns>A list of media type formatters to handle OData.</returns>
      <param name="serializerProvider">The serializer provider to use.</param>
      <param name="deserializerProvider">The deserializer provider to use.</param>
    </member>
    <member name="T:System.Web.OData.Formatter.ODataMetadataLevel">
      <summary>The amount of metadata information to serialize in an OData response (for JSON).</summary>
    </member>
    <member name="F:System.Web.OData.Formatter.ODataMetadataLevel.FullMetadata">
      <summary>JSON full metadata.</summary>
    </member>
    <member name="F:System.Web.OData.Formatter.ODataMetadataLevel.MinimalMetadata">
      <summary>JSON minimal metadata.</summary>
    </member>
    <member name="F:System.Web.OData.Formatter.ODataMetadataLevel.NoMetadata">
      <summary>JSON no metadata.</summary>
    </member>
    <member name="T:System.Web.OData.Formatter.ODataModelBinderProvider">
      <summary>Provides a <see cref="T:System.Web.Http.ModelBinding.IModelBinder" /> for EDM primitive types.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.ODataModelBinderProvider.#ctor"></member>
    <member name="M:System.Web.OData.Formatter.ODataModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)"></member>
    <member name="T:System.Web.OData.Formatter.ODataPrimitiveValueMediaTypeMapping">
      <summary>Media type mapping that associates requests for the raw value of non-binary primitive properties to the text/plain content type.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.ODataPrimitiveValueMediaTypeMapping.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Formatter.ODataPrimitiveValueMediaTypeMapping" /> class.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.ODataPrimitiveValueMediaTypeMapping.IsMatch(System.Web.OData.Routing.PropertyAccessPathSegment)"></member>
    <member name="T:System.Web.OData.Formatter.ODataRawValueMediaTypeMapping">
      <summary>Media type mapping that associates requests for the raw value of properties.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.ODataRawValueMediaTypeMapping.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Formatter.ODataRawValueMediaTypeMapping" /> class.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.ODataRawValueMediaTypeMapping.IsMatch(System.Web.OData.Routing.PropertyAccessPathSegment)">
      <summary>This method determines if the <see cref="T:System.Net.Http.HttpRequestMessage" /> is an OData Raw value request.</summary>
      <returns>True if the request is an OData raw value request.</returns>
      <param name="propertySegment">The <see cref="T:System.Web.OData.Routing.PropertyAccessPathSegment" /> of the path.</param>
    </member>
    <member name="M:System.Web.OData.Formatter.ODataRawValueMediaTypeMapping.TryMatchMediaType(System.Net.Http.HttpRequestMessage)"></member>
    <member name="T:System.Web.OData.Formatter.QueryStringMediaTypeMapping">
      <summary>Class that provides <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />s from query strings.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.QueryStringMediaTypeMapping.#ctor(System.String,System.Net.Http.Headers.MediaTypeHeaderValue)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Formatter.QueryStringMediaTypeMapping" /> class.</summary>
      <param name="queryStringParameterName">The name of the query string parameter to match, if present.</param>
      <param name="mediaType">The <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> to use if the query parameter specified by <paramref name="queryStringParameterName" /> is present and assigned the value specified by <paramref name="mediaType" />.</param>
    </member>
    <member name="M:System.Web.OData.Formatter.QueryStringMediaTypeMapping.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Formatter.QueryStringMediaTypeMapping" /> class.</summary>
      <param name="queryStringParameterName">The name of the query string parameter to match, if present.</param>
      <param name="mediaType">The media type to use if the query parameter specified by <paramref name="queryStringParameterName" /> is present and assigned the value specified by <paramref name="mediaType" />.</param>
    </member>
    <member name="P:System.Web.OData.Formatter.QueryStringMediaTypeMapping.QueryStringParameterName">
      <summary>Gets the query string parameter name.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.QueryStringMediaTypeMapping.TryMatchMediaType(System.Net.Http.HttpRequestMessage)">
      <summary>Returns a value indicating whether the current <see cref="T:System.Web.OData.Formatter.QueryStringMediaTypeMapping" /> instance can return a <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> from <paramref name="request" />.</summary>
      <returns>If this instance can produce a <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> from <paramref name="request" /> it returns 1.0 otherwise 0.0.</returns>
      <param name="request">The <see cref="T:System.Net.Http.HttpRequestMessage" /> to check.</param>
    </member>
    <member name="T:System.Web.OData.Formatter.Deserialization.DefaultODataDeserializerProvider">
      <summary>The default <see cref="T:System.Web.OData.Formatter.Deserialization.ODataDeserializerProvider" />.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.Deserialization.DefaultODataDeserializerProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Formatter.Deserialization.DefaultODataDeserializerProvider" /> class.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.Deserialization.DefaultODataDeserializerProvider.GetEdmTypeDeserializer(Microsoft.OData.Edm.IEdmTypeReference)"></member>
    <member name="M:System.Web.OData.Formatter.Deserialization.DefaultODataDeserializerProvider.GetODataDeserializer(Microsoft.OData.Edm.IEdmModel,System.Type,System.Net.Http.HttpRequestMessage)"></member>
    <member name="P:System.Web.OData.Formatter.Deserialization.DefaultODataDeserializerProvider.Instance">
      <summary>Gets the default instance of the <see cref="T:System.Web.OData.Formatter.Deserialization.DefaultODataDeserializerProvider" />.</summary>
    </member>
    <member name="T:System.Web.OData.Formatter.Deserialization.ODataActionPayloadDeserializer">
      <summary>Represents an <see cref="T:System.Web.OData.Formatter.Deserialization.ODataDeserializer" /> for reading OData action parameters.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.Deserialization.ODataActionPayloadDeserializer.#ctor(System.Web.OData.Formatter.Deserialization.ODataDeserializerProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Formatter.Deserialization.ODataActionPayloadDeserializer" /> class.</summary>
      <param name="deserializerProvider">The deserializer provider to use to read inner objects.</param>
    </member>
    <member name="P:System.Web.OData.Formatter.Deserialization.ODataActionPayloadDeserializer.DeserializerProvider">
      <summary>Gets the deserializer provider to use to read inner objects.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.Deserialization.ODataActionPayloadDeserializer.Read(Microsoft.OData.Core.ODataMessageReader,System.Type,System.Web.OData.Formatter.Deserialization.ODataDeserializerContext)"></member>
    <member name="T:System.Web.OData.Formatter.Deserialization.ODataCollectionDeserializer">
      <summary>Represents an <see cref="T:System.Web.OData.Formatter.Deserialization.ODataDeserializer" /> that can read OData collection payloads.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.Deserialization.ODataCollectionDeserializer.#ctor(System.Web.OData.Formatter.Deserialization.ODataDeserializerProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Formatter.Deserialization.ODataCollectionDeserializer" /> class.</summary>
      <param name="deserializerProvider">The deserializer provider to use to read inner objects.</param>
    </member>
    <member name="M:System.Web.OData.Formatter.Deserialization.ODataCollectionDeserializer.Read(Microsoft.OData.Core.ODataMessageReader,System.Type,System.Web.OData.Formatter.Deserialization.ODataDeserializerContext)"></member>
    <member name="M:System.Web.OData.Formatter.Deserialization.ODataCollectionDeserializer.ReadCollectionValue(Microsoft.OData.Core.ODataCollectionValue,Microsoft.OData.Edm.IEdmTypeReference,System.Web.OData.Formatter.Deserialization.ODataDeserializerContext)">
      <summary>Deserializes the given <paramref name="collectionValue" /> under the given <paramref name="readContext" />.</summary>
      <returns>The deserialized collection.</returns>
      <param name="collectionValue">The <see cref="T:Microsoft.OData.Core.ODataCollectionValue" /> to deserialize.</param>
      <param name="elementType">The element type of the collection to read.</param>
      <param name="readContext">The deserializer context.</param>
    </member>
    <member name="M:System.Web.OData.Formatter.Deserialization.ODataCollectionDeserializer.ReadInline(System.Object,Microsoft.OData.Edm.IEdmTypeReference,System.Web.OData.Formatter.Deserialization.ODataDeserializerContext)"></member>
    <member name="T:System.Web.OData.Formatter.Deserialization.ODataComplexTypeDeserializer">
      <summary>Represents an <see cref="T:System.Web.OData.Formatter.Deserialization.ODataDeserializer" /> that can read OData complex type payloads.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.Deserialization.ODataComplexTypeDeserializer.#ctor(System.Web.OData.Formatter.Deserialization.ODataDeserializerProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Formatter.Deserialization.ODataComplexTypeDeserializer" /> class.</summary>
      <param name="deserializerProvider">The deserializer provider to use to read inner objects.</param>
    </member>
    <member name="M:System.Web.OData.Formatter.Deserialization.ODataComplexTypeDeserializer.ReadComplexValue(Microsoft.OData.Core.ODataComplexValue,Microsoft.OData.Edm.IEdmComplexTypeReference,System.Web.OData.Formatter.Deserialization.ODataDeserializerContext)">
      <summary>Deserializes the given <paramref name="complexValue" /> under the given <paramref name="readContext" />.</summary>
      <returns>The deserialized complex value.</returns>
      <param name="complexValue">The complex value to deserialize.</param>
      <param name="complexType">The EDM type of the complex value to read.</param>
      <param name="readContext">The deserializer context.</param>
    </member>
    <member name="M:System.Web.OData.Formatter.Deserialization.ODataComplexTypeDeserializer.ReadInline(System.Object,Microsoft.OData.Edm.IEdmTypeReference,System.Web.OData.Formatter.Deserialization.ODataDeserializerContext)"></member>
    <member name="T:System.Web.OData.Formatter.Deserialization.ODataDeserializer">
      <summary>An <see cref="T:System.Web.OData.Formatter.Deserialization.ODataDeserializer" /> is used to read an ODataMessage into a CLR object.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.Deserialization.ODataDeserializer.#ctor(Microsoft.OData.Core.ODataPayloadKind)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Formatter.Deserialization.ODataDeserializer" /> class.</summary>
      <param name="payloadKind">The kind of payload this deserializer handles.</param>
    </member>
    <member name="P:System.Web.OData.Formatter.Deserialization.ODataDeserializer.ODataPayloadKind">
      <summary>The kind of ODataPayload this deserializer handles.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.Deserialization.ODataDeserializer.Read(Microsoft.OData.Core.ODataMessageReader,System.Type,System.Web.OData.Formatter.Deserialization.ODataDeserializerContext)">
      <summary>Reads an <see cref="T:Microsoft.OData.Core.IODataRequestMessage" /> using messageReader.</summary>
      <returns>The deserialized object.</returns>
      <param name="messageReader">The messageReader to use.</param>
      <param name="type">The type of the object to read into.</param>
      <param name="readContext">The read context.</param>
    </member>
    <member name="T:System.Web.OData.Formatter.Deserialization.ODataDeserializerContext">
      <summary>This class encapsulates the state and settings that get passed to <see cref="T:System.Web.OData.Formatter.Deserialization.ODataDeserializer" /> from the <see cref="T:System.Web.OData.Formatter.ODataMediaTypeFormatter" />.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.Deserialization.ODataDeserializerContext.#ctor"></member>
    <member name="P:System.Web.OData.Formatter.Deserialization.ODataDeserializerContext.Model">
      <summary>Gets or sets the EDM model associated with the request.</summary>
    </member>
    <member name="P:System.Web.OData.Formatter.Deserialization.ODataDeserializerContext.Path">
      <summary>Gets or sets the <see cref="T:System.Web.OData.Routing.ODataPath" /> of the request.</summary>
    </member>
    <member name="P:System.Web.OData.Formatter.Deserialization.ODataDeserializerContext.Request">
      <summary>Gets or sets the HTTP Request that is being deserialized.</summary>
    </member>
    <member name="P:System.Web.OData.Formatter.Deserialization.ODataDeserializerContext.RequestContext">
      <summary>Gets or sets the request context.</summary>
    </member>
    <member name="P:System.Web.OData.Formatter.Deserialization.ODataDeserializerContext.ResourceEdmType">
      <summary>Gets or sets the <see cref="T:Microsoft.OData.Edm.IEdmTypeReference" /> of the top-level object the request needs to be deserialized into.</summary>
    </member>
    <member name="P:System.Web.OData.Formatter.Deserialization.ODataDeserializerContext.ResourceType">
      <summary>Gets or sets the type of the top-level object the request needs to be deserialized into.</summary>
    </member>
    <member name="T:System.Web.OData.Formatter.Deserialization.ODataDeserializerProvider">
      <summary>Represents a factory that creates an <see cref="T:System.Web.OData.Formatter.Deserialization.ODataDeserializer" />.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.Deserialization.ODataDeserializerProvider.#ctor"></member>
    <member name="M:System.Web.OData.Formatter.Deserialization.ODataDeserializerProvider.GetEdmTypeDeserializer(Microsoft.OData.Edm.IEdmTypeReference)">
      <summary>Gets the <see cref="T:System.Web.OData.Formatter.Deserialization.ODataEdmTypeDeserializer" /> for the given EDM type.</summary>
      <returns>An <see cref="T:System.Web.OData.Formatter.Deserialization.ODataEdmTypeDeserializer" /> that can deserialize the given EDM type.</returns>
      <param name="edmType">The EDM type.</param>
    </member>
    <member name="M:System.Web.OData.Formatter.Deserialization.ODataDeserializerProvider.GetODataDeserializer(Microsoft.OData.Edm.IEdmModel,System.Type,System.Net.Http.HttpRequestMessage)">
      <summary>Gets an <see cref="T:System.Web.OData.Formatter.Deserialization.ODataDeserializer" /> for the given type.</summary>
      <returns>An <see cref="T:System.Web.OData.Formatter.Deserialization.ODataDeserializer" /> that can deserialize the given type.</returns>
      <param name="model">The EDM model.</param>
      <param name="type">The CLR type.</param>
      <param name="request">The request being deserialized.</param>
    </member>
    <member name="T:System.Web.OData.Formatter.Deserialization.ODataEdmTypeDeserializer">
      <summary>Base class for all <see cref="T:System.Web.OData.Formatter.Deserialization.ODataDeserializer" />s that deserialize into an object backed by <see cref="T:Microsoft.OData.Edm.IEdmType" />.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.Deserialization.ODataEdmTypeDeserializer.#ctor(Microsoft.OData.Core.ODataPayloadKind)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Formatter.Deserialization.ODataEdmTypeDeserializer" /> class.</summary>
      <param name="payloadKind">The kind of OData payload that this deserializer reads.</param>
    </member>
    <member name="M:System.Web.OData.Formatter.Deserialization.ODataEdmTypeDeserializer.#ctor(Microsoft.OData.Core.ODataPayloadKind,System.Web.OData.Formatter.Deserialization.ODataDeserializerProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Formatter.Deserialization.ODataEdmTypeDeserializer" /> class.</summary>
      <param name="payloadKind">The kind of OData payload this deserializer handles.</param>
      <param name="deserializerProvider">The <see cref="T:System.Web.OData.Formatter.Deserialization.ODataDeserializerProvider" />.</param>
    </member>
    <member name="P:System.Web.OData.Formatter.Deserialization.ODataEdmTypeDeserializer.DeserializerProvider">
      <summary>The <see cref="T:System.Web.OData.Formatter.Deserialization.ODataDeserializerProvider" /> to use for deserializing inner items.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.Deserialization.ODataEdmTypeDeserializer.ReadInline(System.Object,Microsoft.OData.Edm.IEdmTypeReference,System.Web.OData.Formatter.Deserialization.ODataDeserializerContext)">
      <summary>Deserializes the item into a new object of type corresponding to <paramref name="edmType" />.</summary>
      <returns>The deserialized object.</returns>
      <param name="item">The item to deserialize.</param>
      <param name="edmType">The EDM type of the object to read into.</param>
      <param name="readContext">The <see cref="T:System.Web.OData.Formatter.Deserialization.ODataDeserializerContext" />.</param>
    </member>
    <member name="T:System.Web.OData.Formatter.Deserialization.ODataEntityDeserializer">
      <summary>Represents an <see cref="T:System.Web.OData.Formatter.Deserialization.ODataDeserializer" /> for reading OData entry payloads.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.Deserialization.ODataEntityDeserializer.#ctor(System.Web.OData.Formatter.Deserialization.ODataDeserializerProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Formatter.Deserialization.ODataEntityDeserializer" /> class.</summary>
      <param name="deserializerProvider">The deserializer provider to use to read inner objects.</param>
    </member>
    <member name="M:System.Web.OData.Formatter.Deserialization.ODataEntityDeserializer.ApplyNavigationProperties(System.Object,System.Web.OData.Formatter.Deserialization.ODataEntryWithNavigationLinks,Microsoft.OData.Edm.IEdmEntityTypeReference,System.Web.OData.Formatter.Deserialization.ODataDeserializerContext)">
      <summary>Deserializes the navigation properties from <paramref name="entryWrapper" /> into <paramref name="entityResource" />.</summary>
      <param name="entityResource">The object into which the navigation properties should be read.</param>
      <param name="entryWrapper">The entry object containing the navigation properties.</param>
      <param name="entityType">The entity type of the entity resource.</param>
      <param name="readContext">The deserializer context.</param>
    </member>
    <member name="M:System.Web.OData.Formatter.Deserialization.ODataEntityDeserializer.ApplyNavigationProperty(System.Object,System.Web.OData.Formatter.Deserialization.ODataNavigationLinkWithItems,Microsoft.OData.Edm.IEdmEntityTypeReference,System.Web.OData.Formatter.Deserialization.ODataDeserializerContext)">
      <summary>Deserializes the navigation property from <paramref name="navigationLinkWrapper" /> into <paramref name="entityResource" />.</summary>
      <param name="entityResource">The object into which the navigation property should be read.</param>
      <param name="navigationLinkWrapper">The navigation link.</param>
      <param name="entityType">The entity type of the entity resource.</param>
      <param name="readContext">The deserializer context.</param>
    </member>
    <member name="M:System.Web.OData.Formatter.Deserialization.ODataEntityDeserializer.ApplyStructuralProperties(System.Object,System.Web.OData.Formatter.Deserialization.ODataEntryWithNavigationLinks,Microsoft.OData.Edm.IEdmEntityTypeReference,System.Web.OData.Formatter.Deserialization.ODataDeserializerContext)">
      <summary>Deserializes the structural properties from <paramref name="entryWrapper" /> into <paramref name="entityResource" />.</summary>
      <param name="entityResource">The object into which the structural properties should be read.</param>
      <param name="entryWrapper">The entry object containing the structural properties.</param>
      <param name="entityType">The entity type of the entity resource.</param>
      <param name="readContext">The deserializer context.</param>
    </member>
    <member name="M:System.Web.OData.Formatter.Deserialization.ODataEntityDeserializer.ApplyStructuralProperty(System.Object,Microsoft.OData.Core.ODataProperty,Microsoft.OData.Edm.IEdmEntityTypeReference,System.Web.OData.Formatter.Deserialization.ODataDeserializerContext)">
      <summary>Deserializes the given <paramref name="structuralProperty" /> into <paramref name="entityResource" />.</summary>
      <param name="entityResource">The object into which the structural property should be read.</param>
      <param name="structuralProperty">The entry object containing the structural properties.</param>
      <param name="entityType">The entity type of the entity resource.</param>
      <param name="readContext">The deserializer context.</param>
    </member>
    <member name="M:System.Web.OData.Formatter.Deserialization.ODataEntityDeserializer.CreateEntityResource(Microsoft.OData.Edm.IEdmEntityTypeReference,System.Web.OData.Formatter.Deserialization.ODataDeserializerContext)">
      <summary>Creates a new instance of the backing CLR object for the given entity type.</summary>
      <returns>The created CLR object.</returns>
      <param name="entityType">The EDM type of the entity to create.</param>
      <param name="readContext">The deserializer context.</param>
    </member>
    <member name="M:System.Web.OData.Formatter.Deserialization.ODataEntityDeserializer.Read(Microsoft.OData.Core.ODataMessageReader,System.Type,System.Web.OData.Formatter.Deserialization.ODataDeserializerContext)"></member>
    <member name="M:System.Web.OData.Formatter.Deserialization.ODataEntityDeserializer.ReadEntry(System.Web.OData.Formatter.Deserialization.ODataEntryWithNavigationLinks,Microsoft.OData.Edm.IEdmEntityTypeReference,System.Web.OData.Formatter.Deserialization.ODataDeserializerContext)">
      <summary>Deserializes the given <paramref name="entryWrapper" /> under the given <paramref name="readContext" />.</summary>
      <returns>The deserialized entity.</returns>
      <param name="entryWrapper">The OData entry to deserialize.</param>
      <param name="entityType">The entity type of the entry to deserialize.</param>
      <param name="readContext">The deserializer context.</param>
    </member>
    <member name="M:System.Web.OData.Formatter.Deserialization.ODataEntityDeserializer.ReadEntryOrFeed(Microsoft.OData.Core.ODataReader)">
      <summary>Reads an ODataFeed or an ODataItem from the reader.</summary>
      <returns>The read feed or entry.</returns>
      <param name="reader">The OData reader to read from.</param>
    </member>
    <member name="M:System.Web.OData.Formatter.Deserialization.ODataEntityDeserializer.ReadInline(System.Object,Microsoft.OData.Edm.IEdmTypeReference,System.Web.OData.Formatter.Deserialization.ODataDeserializerContext)"></member>
    <member name="T:System.Web.OData.Formatter.Deserialization.ODataEntityReferenceLinkBase">
      <summary>Encapuslates an <see cref="T:Microsoft.OData.Core.ODataEntityReferenceLink" />.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.Deserialization.ODataEntityReferenceLinkBase.#ctor(Microsoft.OData.Core.ODataEntityReferenceLink)">
      <summary>Initializes a new instance of <see cref="T:System.Web.OData.Formatter.Deserialization.ODataEntityReferenceLinkBase" />.</summary>
      <param name="item">The wrapped item.</param>
    </member>
    <member name="P:System.Web.OData.Formatter.Deserialization.ODataEntityReferenceLinkBase.EntityReferenceLink">
      <summary>Gets the wrapped <see cref="T:Microsoft.OData.Core.ODataEntityReferenceLink" />.</summary>
    </member>
    <member name="T:System.Web.OData.Formatter.Deserialization.ODataEntityReferenceLinkDeserializer">
      <summary>Represents an <see cref="T:System.Web.OData.Formatter.Deserialization.ODataDeserializer" /> that can read OData entity reference link payloads.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.Deserialization.ODataEntityReferenceLinkDeserializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Formatter.Deserialization.ODataEntityReferenceLinkDeserializer" /> class.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.Deserialization.ODataEntityReferenceLinkDeserializer.Read(Microsoft.OData.Core.ODataMessageReader,System.Type,System.Web.OData.Formatter.Deserialization.ODataDeserializerContext)"></member>
    <member name="T:System.Web.OData.Formatter.Deserialization.ODataEntryWithNavigationLinks">
      <summary>Encapuslates an <see cref="T:Microsoft.OData.Core.ODataEntry" /> and the inner navigation links.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.Deserialization.ODataEntryWithNavigationLinks.#ctor(Microsoft.OData.Core.ODataEntry)">
      <summary>Initializes a new instance of <see cref="T:System.Web.OData.Formatter.Deserialization.ODataEntryWithNavigationLinks" />.</summary>
      <param name="item">The wrapped item.</param>
    </member>
    <member name="P:System.Web.OData.Formatter.Deserialization.ODataEntryWithNavigationLinks.Entry">
      <summary>Gets the wrapped <see cref="T:Microsoft.OData.Core.ODataEntry" />.</summary>
    </member>
    <member name="P:System.Web.OData.Formatter.Deserialization.ODataEntryWithNavigationLinks.NavigationLinks">
      <summary>Gets the inner navigation links.</summary>
    </member>
    <member name="T:System.Web.OData.Formatter.Deserialization.ODataEnumDeserializer">
      <summary>Represents an <see cref="T:System.Web.OData.Formatter.Deserialization.ODataDeserializer" /> that can read OData enum types.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.Deserialization.ODataEnumDeserializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Formatter.Deserialization.ODataEnumDeserializer" /> class.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.Deserialization.ODataEnumDeserializer.Read(Microsoft.OData.Core.ODataMessageReader,System.Type,System.Web.OData.Formatter.Deserialization.ODataDeserializerContext)"></member>
    <member name="M:System.Web.OData.Formatter.Deserialization.ODataEnumDeserializer.ReadInline(System.Object,Microsoft.OData.Edm.IEdmTypeReference,System.Web.OData.Formatter.Deserialization.ODataDeserializerContext)"></member>
    <member name="T:System.Web.OData.Formatter.Deserialization.ODataFeedDeserializer">
      <summary>Represents an <see cref="T:System.Web.OData.Formatter.Deserialization.ODataDeserializer" /> that can read OData feeds.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.Deserialization.ODataFeedDeserializer.#ctor(System.Web.OData.Formatter.Deserialization.ODataDeserializerProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Formatter.Deserialization.ODataFeedDeserializer" /> class.</summary>
      <param name="deserializerProvider">The deserializer provider to use to read inner objects.</param>
    </member>
    <member name="M:System.Web.OData.Formatter.Deserialization.ODataFeedDeserializer.ReadFeed(System.Web.OData.Formatter.Deserialization.ODataFeedWithEntries,Microsoft.OData.Edm.IEdmEntityTypeReference,System.Web.OData.Formatter.Deserialization.ODataDeserializerContext)">
      <summary>Deserializes the given <paramref name="feed" /> under the given <paramref name="readContext" />.</summary>
      <returns>The deserialized feed object.</returns>
      <param name="feed">The feed to deserialize.</param>
      <param name="elementType">The element type of the feed being read.</param>
      <param name="readContext">The deserializer context.</param>
    </member>
    <member name="M:System.Web.OData.Formatter.Deserialization.ODataFeedDeserializer.ReadInline(System.Object,Microsoft.OData.Edm.IEdmTypeReference,System.Web.OData.Formatter.Deserialization.ODataDeserializerContext)"></member>
    <member name="T:System.Web.OData.Formatter.Deserialization.ODataFeedWithEntries">
      <summary>Encapsulates an <see cref="T:Microsoft.OData.Core.ODataFeed" /> and the <see cref="T:Microsoft.OData.Core.ODataEntry" />'s that are part of it.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.Deserialization.ODataFeedWithEntries.#ctor(Microsoft.OData.Core.ODataFeed)">
      <summary>Initializes a new instance of <see cref="T:System.Web.OData.Formatter.Deserialization.ODataFeedWithEntries" />.</summary>
      <param name="item">The wrapped item.</param>
    </member>
    <member name="P:System.Web.OData.Formatter.Deserialization.ODataFeedWithEntries.Entries">
      <summary>Gets the nested entries of this feed.</summary>
    </member>
    <member name="P:System.Web.OData.Formatter.Deserialization.ODataFeedWithEntries.Feed">
      <summary>Gets the wrapped <see cref="T:Microsoft.OData.Core.ODataFeed" />.</summary>
    </member>
    <member name="T:System.Web.OData.Formatter.Deserialization.ODataItemBase">
      <summary>Base class for all classes that wrap an <see cref="T:Microsoft.OData.Core.ODataItem" />.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.Deserialization.ODataItemBase.#ctor(Microsoft.OData.Core.ODataItem)">
      <summary>Initializes a new instance of <see cref="T:System.Web.OData.Formatter.Deserialization.ODataItemBase" />.</summary>
      <param name="item">The wrapped item.</param>
    </member>
    <member name="P:System.Web.OData.Formatter.Deserialization.ODataItemBase.Item">
      <summary>Gets the wrapped <see cref="T:Microsoft.OData.Core.ODataItem" />.</summary>
    </member>
    <member name="T:System.Web.OData.Formatter.Deserialization.ODataNavigationLinkWithItems">
      <summary>Encapsulates an <see cref="T:Microsoft.OData.Core.ODataNavigationLink" /> and the list of nested items.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.Deserialization.ODataNavigationLinkWithItems.#ctor(Microsoft.OData.Core.ODataNavigationLink)">
      <summary>Initializes a new instance of <see cref="T:System.Web.OData.Formatter.Deserialization.ODataNavigationLinkWithItems" />.</summary>
      <param name="item">The wrapped item.</param>
    </member>
    <member name="P:System.Web.OData.Formatter.Deserialization.ODataNavigationLinkWithItems.NavigationLink">
      <summary>Gets the wrapped <see cref="T:Microsoft.OData.Core.ODataNavigationLink" />.</summary>
    </member>
    <member name="P:System.Web.OData.Formatter.Deserialization.ODataNavigationLinkWithItems.NestedItems">
      <summary>Gets the nested items that are part of this navigation link.</summary>
    </member>
    <member name="T:System.Web.OData.Formatter.Deserialization.ODataPrimitiveDeserializer">
      <summary>Represents an <see cref="T:System.Web.OData.Formatter.Deserialization.ODataDeserializer" /> that can read OData primitve types.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.Deserialization.ODataPrimitiveDeserializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Formatter.Deserialization.ODataPrimitiveDeserializer" /> class.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.Deserialization.ODataPrimitiveDeserializer.Read(Microsoft.OData.Core.ODataMessageReader,System.Type,System.Web.OData.Formatter.Deserialization.ODataDeserializerContext)"></member>
    <member name="M:System.Web.OData.Formatter.Deserialization.ODataPrimitiveDeserializer.ReadInline(System.Object,Microsoft.OData.Edm.IEdmTypeReference,System.Web.OData.Formatter.Deserialization.ODataDeserializerContext)"></member>
    <member name="M:System.Web.OData.Formatter.Deserialization.ODataPrimitiveDeserializer.ReadPrimitive(Microsoft.OData.Core.ODataProperty,System.Web.OData.Formatter.Deserialization.ODataDeserializerContext)">
      <summary>Deserializes the primitive from the given <paramref name="primitiveProperty" /> under the given <paramref name="readContext" />.</summary>
      <returns>The deserialized OData primitive value.</returns>
      <param name="primitiveProperty">The primitive property to deserialize.</param>
      <param name="readContext">The deserializer context.</param>
    </member>
    <member name="T:System.Web.OData.Formatter.Serialization.DefaultODataSerializerProvider">
      <summary>The default <see cref="T:System.Web.OData.Formatter.Serialization.ODataSerializerProvider" />.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.Serialization.DefaultODataSerializerProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Formatter.Serialization.DefaultODataSerializerProvider" /> class.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.Serialization.DefaultODataSerializerProvider.GetEdmTypeSerializer(Microsoft.OData.Edm.IEdmTypeReference)"></member>
    <member name="M:System.Web.OData.Formatter.Serialization.DefaultODataSerializerProvider.GetODataPayloadSerializer(Microsoft.OData.Edm.IEdmModel,System.Type,System.Net.Http.HttpRequestMessage)"></member>
    <member name="P:System.Web.OData.Formatter.Serialization.DefaultODataSerializerProvider.Instance">
      <summary>Gets the default instance of the <see cref="T:System.Web.OData.Formatter.Serialization.DefaultODataSerializerProvider" />.</summary>
    </member>
    <member name="T:System.Web.OData.Formatter.Serialization.EntitySelfLinks">
      <summary>EntitySelfLinks contains the Id, Edit and Read links for an entity.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.Serialization.EntitySelfLinks.#ctor"></member>
    <member name="P:System.Web.OData.Formatter.Serialization.EntitySelfLinks.EditLink">
      <summary>A URL that can be used to edit a copy of the resource.</summary>
    </member>
    <member name="P:System.Web.OData.Formatter.Serialization.EntitySelfLinks.IdLink">
      <summary>A string that uniquely identifies the resource.</summary>
    </member>
    <member name="P:System.Web.OData.Formatter.Serialization.EntitySelfLinks.ReadLink">
      <summary>A URL that can be used to retrieve a copy of the resource.</summary>
    </member>
    <member name="T:System.Web.OData.Formatter.Serialization.ODataCollectionSerializer">
      <summary>ODataSerializer for serializing collection of Entities or Complex types or primitives.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.Serialization.ODataCollectionSerializer.#ctor(System.Web.OData.Formatter.Serialization.ODataSerializerProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Formatter.Serialization.ODataCollectionSerializer" /> class.</summary>
      <param name="serializerProvider">The serializer provider to use to serialize nested objects.</param>
    </member>
    <member name="M:System.Web.OData.Formatter.Serialization.ODataCollectionSerializer.AddTypeNameAnnotationAsNeeded(Microsoft.OData.Core.ODataCollectionValue,System.Web.OData.Formatter.ODataMetadataLevel)">
      <summary>Adds the type name annotations required for proper json light serialization.</summary>
      <param name="value">The collection value for which the annotations have to be added.</param>
      <param name="metadataLevel">The OData metadata level of the response.</param>
    </member>
    <member name="M:System.Web.OData.Formatter.Serialization.ODataCollectionSerializer.CreateODataCollectionValue(System.Collections.IEnumerable,Microsoft.OData.Edm.IEdmTypeReference,System.Web.OData.Formatter.Serialization.ODataSerializerContext)">
      <summary>Creates an <see cref="T:Microsoft.OData.Core.ODataCollectionValue" /> for the enumerable represented by <paramref name="enumerable" />.</summary>
      <returns>The created <see cref="T:Microsoft.OData.Core.ODataCollectionValue" />.</returns>
      <param name="enumerable">The value of the collection to be created.</param>
      <param name="elementType">The element EDM type of the collection.</param>
      <param name="writeContext">The serializer context to be used while creating the collection.</param>
    </member>
    <member name="M:System.Web.OData.Formatter.Serialization.ODataCollectionSerializer.CreateODataValue(System.Object,Microsoft.OData.Edm.IEdmTypeReference,System.Web.OData.Formatter.Serialization.ODataSerializerContext)"></member>
    <member name="M:System.Web.OData.Formatter.Serialization.ODataCollectionSerializer.WriteCollection(Microsoft.OData.Core.ODataCollectionWriter,System.Object,Microsoft.OData.Edm.IEdmTypeReference,System.Web.OData.Formatter.Serialization.ODataSerializerContext)">
      <summary>Writes the given <paramref name="graph" /> using the given <paramref name="writer" />.</summary>
      <param name="writer">The <see cref="T:Microsoft.OData.Core.ODataCollectionWriter" /> to use.</param>
      <param name="graph">The collection to write.</param>
      <param name="collectionType">The EDM type of the collection.</param>
      <param name="writeContext">The serializer context.</param>
    </member>
    <member name="M:System.Web.OData.Formatter.Serialization.ODataCollectionSerializer.WriteObject(System.Object,System.Type,Microsoft.OData.Core.ODataMessageWriter,System.Web.OData.Formatter.Serialization.ODataSerializerContext)"></member>
    <member name="T:System.Web.OData.Formatter.Serialization.ODataComplexTypeSerializer">
      <summary>ODataSerializer for serializing complex types.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.Serialization.ODataComplexTypeSerializer.#ctor(System.Web.OData.Formatter.Serialization.ODataSerializerProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Formatter.Serialization.ODataComplexTypeSerializer" /> class.</summary>
      <param name="serializerProvider">The serializer provider to use to serialize nested objects.</param>
    </member>
    <member name="M:System.Web.OData.Formatter.Serialization.ODataComplexTypeSerializer.CreateODataComplexValue(System.Object,Microsoft.OData.Edm.IEdmComplexTypeReference,System.Web.OData.Formatter.Serialization.ODataSerializerContext)">
      <summary>Creates an <see cref="T:Microsoft.OData.Core.ODataComplexValue" /> for the object represented by <paramref name="graph" />.</summary>
      <returns>The created <see cref="T:Microsoft.OData.Core.ODataComplexValue" />.</returns>
      <param name="graph">The value of the <see cref="T:Microsoft.OData.Core.ODataComplexValue" /> to be created.</param>
      <param name="complexType">The EDM complex type of the object.</param>
      <param name="writeContext">The serializer context.</param>
    </member>
    <member name="M:System.Web.OData.Formatter.Serialization.ODataComplexTypeSerializer.CreateODataValue(System.Object,Microsoft.OData.Edm.IEdmTypeReference,System.Web.OData.Formatter.Serialization.ODataSerializerContext)"></member>
    <member name="M:System.Web.OData.Formatter.Serialization.ODataComplexTypeSerializer.WriteObject(System.Object,System.Type,Microsoft.OData.Core.ODataMessageWriter,System.Web.OData.Formatter.Serialization.ODataSerializerContext)"></member>
    <member name="T:System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer">
      <summary>Represents an <see cref="T:System.Web.OData.Formatter.Serialization.ODataSerializer" /> that serializes instances of objects backed by an <see cref="T:Microsoft.OData.Edm.IEdmType" />.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer.#ctor(Microsoft.OData.Core.ODataPayloadKind)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer" /> class.</summary>
      <param name="payloadKind">The kind of OData payload that this serializer generates.</param>
    </member>
    <member name="M:System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer.#ctor(Microsoft.OData.Core.ODataPayloadKind,System.Web.OData.Formatter.Serialization.ODataSerializerProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer" /> class.</summary>
      <param name="payloadKind">The kind of OData payload that this serializer generates.</param>
      <param name="serializerProvider">The <see cref="T:System.Web.OData.Formatter.Serialization.ODataSerializerProvider" /> to use to write inner objects.</param>
    </member>
    <member name="M:System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer.CreateODataValue(System.Object,Microsoft.OData.Edm.IEdmTypeReference,System.Web.OData.Formatter.Serialization.ODataSerializerContext)">
      <summary>Creates an <see cref="T:Microsoft.OData.Core.ODataValue" /> for the object represented by <paramref name="graph" />.</summary>
      <returns>The <see cref="T:Microsoft.OData.Core.ODataValue" /> created.</returns>
      <param name="graph">The value of the <see cref="T:Microsoft.OData.Core.ODataValue" /> to be created.</param>
      <param name="expectedType">The expected EDM type of the object represented by <paramref name="graph" />.</param>
      <param name="writeContext">The <see cref="T:System.Web.OData.Formatter.Serialization.ODataSerializerContext" />.</param>
    </member>
    <member name="P:System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer.SerializerProvider">
      <summary>Gets the <see cref="T:System.Web.OData.Formatter.Serialization.ODataSerializerProvider" /> that can be used to write inner objects.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer.WriteObjectInline(System.Object,Microsoft.OData.Edm.IEdmTypeReference,Microsoft.OData.Core.ODataWriter,System.Web.OData.Formatter.Serialization.ODataSerializerContext)">
      <summary>Writes the given object specified by the parameter graph as a part of an existing OData message using the given messageWriter and the writeContext.</summary>
      <param name="graph">The object to be written.</param>
      <param name="expectedType">The expected EDM type of the object represented by <paramref name="graph" />.</param>
      <param name="writer">The <see cref="T:Microsoft.OData.Core.ODataWriter" /> to be used for writing.</param>
      <param name="writeContext">The <see cref="T:System.Web.OData.Formatter.Serialization.ODataSerializerContext" />.</param>
    </member>
    <member name="T:System.Web.OData.Formatter.Serialization.ODataEntityReferenceLinkSerializer">
      <summary>Represents an <see cref="T:System.Web.OData.Formatter.Serialization.ODataSerializer" /> for serializing $ref response.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.Serialization.ODataEntityReferenceLinkSerializer.#ctor">
      <summary>Initializes a new instance of <see cref="T:System.Web.OData.Formatter.Serialization.ODataEntityReferenceLinkSerializer" />.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.Serialization.ODataEntityReferenceLinkSerializer.WriteObject(System.Object,System.Type,Microsoft.OData.Core.ODataMessageWriter,System.Web.OData.Formatter.Serialization.ODataSerializerContext)"></member>
    <member name="T:System.Web.OData.Formatter.Serialization.ODataEntityReferenceLinksSerializer">
      <summary>Represents an <see cref="T:System.Web.OData.Formatter.Serialization.ODataSerializer" /> for serializing $ref response for a collection navigation property.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.Serialization.ODataEntityReferenceLinksSerializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Formatter.Serialization.ODataEntityReferenceLinksSerializer" /> class.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.Serialization.ODataEntityReferenceLinksSerializer.WriteObject(System.Object,System.Type,Microsoft.OData.Core.ODataMessageWriter,System.Web.OData.Formatter.Serialization.ODataSerializerContext)"></member>
    <member name="T:System.Web.OData.Formatter.Serialization.ODataEntityTypeSerializer">
      <summary>ODataSerializer for serializing instances of <see cref="T:Microsoft.OData.Edm.IEdmEntityType" /></summary>
    </member>
    <member name="M:System.Web.OData.Formatter.Serialization.ODataEntityTypeSerializer.#ctor(System.Web.OData.Formatter.Serialization.ODataSerializerProvider)"></member>
    <member name="M:System.Web.OData.Formatter.Serialization.ODataEntityTypeSerializer.CreateEntry(System.Web.OData.Formatter.Serialization.SelectExpandNode,System.Web.OData.EntityInstanceContext)">
      <summary>Creates the <see cref="T:Microsoft.OData.Core.ODataEntry" /> to be written while writing this entity.</summary>
      <returns>The created <see cref="T:Microsoft.OData.Core.ODataEntry" />.</returns>
      <param name="selectExpandNode">The <see cref="T:System.Web.OData.Formatter.Serialization.SelectExpandNode" /> describing the response graph.</param>
      <param name="entityInstanceContext">The context for the entity instance being written.</param>
    </member>
    <member name="M:System.Web.OData.Formatter.Serialization.ODataEntityTypeSerializer.CreateETag(System.Web.OData.EntityInstanceContext)">
      <summary>Creates the ETag for the given entity.</summary>
      <returns>The created ETag.</returns>
      <param name="entityInstanceContext">The context for the entity instance being written.</param>
    </member>
    <member name="M:System.Web.OData.Formatter.Serialization.ODataEntityTypeSerializer.CreateNavigationLink(Microsoft.OData.Edm.IEdmNavigationProperty,System.Web.OData.EntityInstanceContext)">
      <summary>Creates the <see cref="T:Microsoft.OData.Core.ODataNavigationLink" /> to be written while writing this entity.</summary>
      <returns>The navigation link to be written.</returns>
      <param name="navigationProperty">The navigation property for which the navigation link is being created.</param>
      <param name="entityInstanceContext">The context for the entity instance being written.</param>
    </member>
    <member name="M:System.Web.OData.Formatter.Serialization.ODataEntityTypeSerializer.CreateODataAction(Microsoft.OData.Edm.IEdmAction,System.Web.OData.EntityInstanceContext)">
      <summary>Creates an <see cref="T:Microsoft.OData.Core.ODataAction" /> to be written for the given action and the entity instance.</summary>
      <returns>The created action or null if the action should not be written.</returns>
      <param name="action">The OData action.</param>
      <param name="entityInstanceContext">The context for the entity instance being written.</param>
    </member>
    <member name="M:System.Web.OData.Formatter.Serialization.ODataEntityTypeSerializer.CreateSelectExpandNode(System.Web.OData.EntityInstanceContext)">
      <summary>Creates the <see cref="T:System.Web.OData.Formatter.Serialization.SelectExpandNode" /> that describes the set of properties and actions to select and expand while writing this entity.</summary>
      <returns>The <see cref="T:System.Web.OData.Formatter.Serialization.SelectExpandNode" /> that describes the set of properties and actions to select and expand while writing this entity.</returns>
      <param name="entityInstanceContext">Contains the entity instance being written and the context.</param>
    </member>
    <member name="M:System.Web.OData.Formatter.Serialization.ODataEntityTypeSerializer.CreateStructuralProperty(Microsoft.OData.Edm.IEdmStructuralProperty,System.Web.OData.EntityInstanceContext)">
      <summary>Creates the <see cref="T:Microsoft.OData.Core.ODataProperty" /> to be written for the given entity and the structural property.</summary>
      <returns>The <see cref="T:Microsoft.OData.Core.ODataProperty" /> to write.</returns>
      <param name="structuralProperty">The EDM structural property being written.</param>
      <param name="entityInstanceContext">The context for the entity instance being written.</param>
    </member>
    <member name="M:System.Web.OData.Formatter.Serialization.ODataEntityTypeSerializer.WriteObject(System.Object,System.Type,Microsoft.OData.Core.ODataMessageWriter,System.Web.OData.Formatter.Serialization.ODataSerializerContext)"></member>
    <member name="M:System.Web.OData.Formatter.Serialization.ODataEntityTypeSerializer.WriteObjectInline(System.Object,Microsoft.OData.Edm.IEdmTypeReference,Microsoft.OData.Core.ODataWriter,System.Web.OData.Formatter.Serialization.ODataSerializerContext)"></member>
    <member name="T:System.Web.OData.Formatter.Serialization.ODataEnumSerializer">
      <summary>Represents an <see cref="T:System.Web.OData.Formatter.Serialization.ODataSerializer" /> for serializing <see cref="T:Microsoft.OData.Edm.IEdmEnumType" />'s.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.Serialization.ODataEnumSerializer.#ctor">
      <summary>Initializes a new instance of <see cref="T:System.Web.OData.Formatter.Serialization.ODataEnumSerializer" />.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.Serialization.ODataEnumSerializer.CreateODataEnumValue(System.Object,Microsoft.OData.Edm.IEdmEnumTypeReference,System.Web.OData.Formatter.Serialization.ODataSerializerContext)">
      <summary>Creates an <see cref="T:Microsoft.OData.Core.ODataEnumValue" /> for the object represented by <paramref name="graph" />.</summary>
      <returns>The created <see cref="T:Microsoft.OData.Core.ODataEnumValue" />.</returns>
      <param name="graph">The enum value.</param>
      <param name="enumType">The EDM enum type of the value.</param>
      <param name="writeContext">The serializer write context.</param>
    </member>
    <member name="M:System.Web.OData.Formatter.Serialization.ODataEnumSerializer.CreateODataValue(System.Object,Microsoft.OData.Edm.IEdmTypeReference,System.Web.OData.Formatter.Serialization.ODataSerializerContext)"></member>
    <member name="M:System.Web.OData.Formatter.Serialization.ODataEnumSerializer.WriteObject(System.Object,System.Type,Microsoft.OData.Core.ODataMessageWriter,System.Web.OData.Formatter.Serialization.ODataSerializerContext)"></member>
    <member name="T:System.Web.OData.Formatter.Serialization.ODataErrorSerializer">
      <summary>Represents an <see cref="T:System.Web.OData.Formatter.Serialization.ODataSerializer" /> to serialize <see cref="T:Microsoft.OData.Core.ODataError" />s and <see cref="T:System.Web.Http.HttpError" />s.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.Serialization.ODataErrorSerializer.#ctor">
      <summary>Initializes a new instance of the class <see cref="T:System.Web.OData.Formatter.Serialization.ODataSerializer" />.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.Serialization.ODataErrorSerializer.WriteObject(System.Object,System.Type,Microsoft.OData.Core.ODataMessageWriter,System.Web.OData.Formatter.Serialization.ODataSerializerContext)"></member>
    <member name="T:System.Web.OData.Formatter.Serialization.ODataFeedSerializer">
      <summary>OData serializer for serializing a collection of <see cref="T:Microsoft.OData.Edm.IEdmEntityType" /></summary>
    </member>
    <member name="M:System.Web.OData.Formatter.Serialization.ODataFeedSerializer.#ctor(System.Web.OData.Formatter.Serialization.ODataSerializerProvider)">
      <summary>Initializes a new instance of <see cref="T:System.Web.OData.Formatter.Serialization.ODataFeedSerializer" />.</summary>
      <param name="serializerProvider">The <see cref="T:System.Web.OData.Formatter.Serialization.ODataSerializerProvider" /> to use to write nested entries.</param>
    </member>
    <member name="M:System.Web.OData.Formatter.Serialization.ODataFeedSerializer.CreateODataFeed(System.Collections.IEnumerable,Microsoft.OData.Edm.IEdmCollectionTypeReference,System.Web.OData.Formatter.Serialization.ODataSerializerContext)">
      <summary>Create the <see cref="T:Microsoft.OData.Core.ODataFeed" /> to be written for the given feed instance.</summary>
      <returns>The created <see cref="T:Microsoft.OData.Core.ODataFeed" /> object.</returns>
      <param name="feedInstance">The instance representing the feed being written.</param>
      <param name="feedType">The EDM type of the feed being written.</param>
      <param name="writeContext">The serializer context.</param>
    </member>
    <member name="M:System.Web.OData.Formatter.Serialization.ODataFeedSerializer.WriteObject(System.Object,System.Type,Microsoft.OData.Core.ODataMessageWriter,System.Web.OData.Formatter.Serialization.ODataSerializerContext)"></member>
    <member name="M:System.Web.OData.Formatter.Serialization.ODataFeedSerializer.WriteObjectInline(System.Object,Microsoft.OData.Edm.IEdmTypeReference,Microsoft.OData.Core.ODataWriter,System.Web.OData.Formatter.Serialization.ODataSerializerContext)"></member>
    <member name="T:System.Web.OData.Formatter.Serialization.ODataMetadataSerializer">
      <summary>Represents an <see cref="T:System.Web.OData.Formatter.Serialization.ODataSerializer" /> for serializing $metadata.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.Serialization.ODataMetadataSerializer.#ctor">
      <summary>Initializes a new instance of <see cref="T:System.Web.OData.Formatter.Serialization.ODataMetadataSerializer" />.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.Serialization.ODataMetadataSerializer.WriteObject(System.Object,System.Type,Microsoft.OData.Core.ODataMessageWriter,System.Web.OData.Formatter.Serialization.ODataSerializerContext)"></member>
    <member name="T:System.Web.OData.Formatter.Serialization.ODataPrimitiveSerializer">
      <summary>Represents an <see cref="T:System.Web.OData.Formatter.Serialization.ODataSerializer" /> for serializing <see cref="T:Microsoft.OData.Edm.IEdmPrimitiveType" />'s.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.Serialization.ODataPrimitiveSerializer.#ctor">
      <summary>Initializes a new instance of <see cref="T:System.Web.OData.Formatter.Serialization.ODataPrimitiveSerializer" />.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.Serialization.ODataPrimitiveSerializer.CreateODataPrimitiveValue(System.Object,Microsoft.OData.Edm.IEdmPrimitiveTypeReference,System.Web.OData.Formatter.Serialization.ODataSerializerContext)">
      <summary>Creates an <see cref="T:Microsoft.OData.Core.ODataPrimitiveValue" /> for the object represented by <paramref name="graph" />.</summary>
      <returns>The created <see cref="T:Microsoft.OData.Core.ODataPrimitiveValue" />.</returns>
      <param name="graph">The primitive value.</param>
      <param name="primitiveType">The EDM primitive type of the value.</param>
      <param name="writeContext">The serializer write context.</param>
    </member>
    <member name="M:System.Web.OData.Formatter.Serialization.ODataPrimitiveSerializer.CreateODataValue(System.Object,Microsoft.OData.Edm.IEdmTypeReference,System.Web.OData.Formatter.Serialization.ODataSerializerContext)"></member>
    <member name="M:System.Web.OData.Formatter.Serialization.ODataPrimitiveSerializer.WriteObject(System.Object,System.Type,Microsoft.OData.Core.ODataMessageWriter,System.Web.OData.Formatter.Serialization.ODataSerializerContext)"></member>
    <member name="T:System.Web.OData.Formatter.Serialization.ODataRawValueSerializer">
      <summary>Represents an <see cref="T:System.Web.OData.Formatter.Serialization.ODataSerializer" /> for serializing the raw value of an <see cref="T:Microsoft.OData.Edm.IEdmPrimitiveType" />.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.Serialization.ODataRawValueSerializer.#ctor">
      <summary>Initializes a new instance of <see cref="T:System.Web.OData.Formatter.Serialization.ODataRawValueSerializer" />.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.Serialization.ODataRawValueSerializer.WriteObject(System.Object,System.Type,Microsoft.OData.Core.ODataMessageWriter,System.Web.OData.Formatter.Serialization.ODataSerializerContext)"></member>
    <member name="T:System.Web.OData.Formatter.Serialization.ODataSerializer">
      <summary>An ODataSerializer is used to write a CLR object to an ODataMessage.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.Serialization.ODataSerializer.#ctor(Microsoft.OData.Core.ODataPayloadKind)">
      <summary>Constructs an ODataSerializer that can generate OData payload of the specified kind.</summary>
      <param name="payloadKind">The kind of OData payload that this serializer generates.</param>
    </member>
    <member name="P:System.Web.OData.Formatter.Serialization.ODataSerializer.ODataPayloadKind">
      <summary>Gets the <see cref="P:System.Web.OData.Formatter.Serialization.ODataSerializer.ODataPayloadKind" /> that this serializer generates.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.Serialization.ODataSerializer.WriteObject(System.Object,System.Type,Microsoft.OData.Core.ODataMessageWriter,System.Web.OData.Formatter.Serialization.ODataSerializerContext)">
      <summary>Writes the given object specified by the parameter graph as a whole using the given messageWriter and writeContext.</summary>
      <param name="graph">The object to be written</param>
      <param name="type">The type of the object to be written.</param>
      <param name="messageWriter">The <see cref="T:Microsoft.OData.Core.ODataMessageWriter" /> to be used for writing.</param>
      <param name="writeContext">The <see cref="T:System.Web.OData.Formatter.Serialization.ODataSerializerContext" />.</param>
    </member>
    <member name="T:System.Web.OData.Formatter.Serialization.ODataSerializerContext">
      <summary>Context information used by the <see cref="T:System.Web.OData.Formatter.Serialization.ODataSerializer" /> when serializing objects in OData message format.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.Serialization.ODataSerializerContext.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Formatter.Serialization.ODataSerializerContext" /> class.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.Serialization.ODataSerializerContext.#ctor(System.Web.OData.EntityInstanceContext,Microsoft.OData.Core.UriParser.Semantic.SelectExpandClause,Microsoft.OData.Edm.IEdmNavigationProperty)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Formatter.Serialization.ODataSerializerContext" /> class.</summary>
      <param name="entity">The entity whose navigation property is being expanded.</param>
      <param name="selectExpandClause">The <see cref="P:System.Web.OData.Formatter.Serialization.ODataSerializerContext.SelectExpandClause" /> for the navigation property being expanded.</param>
      <param name="navigationProperty">The navigation property being expanded.</param>
    </member>
    <member name="P:System.Web.OData.Formatter.Serialization.ODataSerializerContext.ExpandedEntity">
      <summary>Gets or sets the entity that is being expanded.</summary>
    </member>
    <member name="P:System.Web.OData.Formatter.Serialization.ODataSerializerContext.Items">
      <summary>Gets a property bag associated with this context to store any generic data.</summary>
    </member>
    <member name="P:System.Web.OData.Formatter.Serialization.ODataSerializerContext.MetadataLevel">
      <summary>Gets or sets the metadata level of the response.</summary>
    </member>
    <member name="P:System.Web.OData.Formatter.Serialization.ODataSerializerContext.Model">
      <summary>Gets or sets the EDM model associated with the request.</summary>
    </member>
    <member name="P:System.Web.OData.Formatter.Serialization.ODataSerializerContext.NavigationProperty">
      <summary>Gets or sets the navigation property being expanded.</summary>
    </member>
    <member name="P:System.Web.OData.Formatter.Serialization.ODataSerializerContext.NavigationSource">
      <summary>Gets or sets the navigation source.</summary>
    </member>
    <member name="P:System.Web.OData.Formatter.Serialization.ODataSerializerContext.Path">
      <summary>Gets or sets the <see cref="T:System.Web.OData.Routing.ODataPath" /> of the request.</summary>
    </member>
    <member name="P:System.Web.OData.Formatter.Serialization.ODataSerializerContext.Request">
      <summary>Gets or sets the HTTP Request whose response is being serialized.</summary>
    </member>
    <member name="P:System.Web.OData.Formatter.Serialization.ODataSerializerContext.RequestContext">
      <summary>Gets or sets the request context.</summary>
    </member>
    <member name="P:System.Web.OData.Formatter.Serialization.ODataSerializerContext.RootElementName">
      <summary>Gets or sets the root element name which is used when writing primitive types and complex types.</summary>
    </member>
    <member name="P:System.Web.OData.Formatter.Serialization.ODataSerializerContext.SelectExpandClause">
      <summary>Gets or sets the <see cref="P:System.Web.OData.Formatter.Serialization.ODataSerializerContext.SelectExpandClause" />.</summary>
    </member>
    <member name="P:System.Web.OData.Formatter.Serialization.ODataSerializerContext.SkipExpensiveAvailabilityChecks">
      <summary>Get or sets whether expensive links should be calculated.</summary>
    </member>
    <member name="P:System.Web.OData.Formatter.Serialization.ODataSerializerContext.Url">
      <summary>Gets or sets the <see cref="T:System.Web.Http.Routing.UrlHelper" /> to use for generating OData links.</summary>
    </member>
    <member name="T:System.Web.OData.Formatter.Serialization.ODataSerializerProvider">
      <summary>An ODataSerializerProvider is a factory for creating <see cref="T:System.Web.OData.Formatter.Serialization.ODataSerializer" />s.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.Serialization.ODataSerializerProvider.#ctor"></member>
    <member name="M:System.Web.OData.Formatter.Serialization.ODataSerializerProvider.GetEdmTypeSerializer(Microsoft.OData.Edm.IEdmTypeReference)">
      <summary>Gets an <see cref="T:System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer" /> for the given edmType.</summary>
      <returns>The <see cref="T:System.Web.OData.Formatter.Serialization.ODataSerializer" />.</returns>
      <param name="edmType">The <see cref="T:Microsoft.OData.Edm.IEdmTypeReference" />.</param>
    </member>
    <member name="M:System.Web.OData.Formatter.Serialization.ODataSerializerProvider.GetODataPayloadSerializer(Microsoft.OData.Edm.IEdmModel,System.Type,System.Net.Http.HttpRequestMessage)">
      <summary>Gets an <see cref="T:System.Web.OData.Formatter.Serialization.ODataSerializer" /> for the given <paramref name="model" /> and <paramref name="type" />.</summary>
      <returns>The <see cref="T:System.Web.OData.Formatter.Serialization.ODataSerializer" /> for the given type.</returns>
      <param name="model">The EDM model associated with the request.</param>
      <param name="type">The <see cref="T:System.Type" /> for which the serializer is being requested.</param>
      <param name="request">The request for which the response is being serialized.</param>
    </member>
    <member name="T:System.Web.OData.Formatter.Serialization.ODataServiceDocumentSerializer">
      <summary>Represents an <see cref="T:System.Web.OData.Formatter.Serialization.ODataSerializer" /> for serializing <see cref="T:Microsoft.OData.Core.ODataServiceDocument" />'s for generating servicedoc's.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.Serialization.ODataServiceDocumentSerializer.#ctor">
      <summary>Initializes a new instance of <see cref="T:System.Web.OData.Formatter.Serialization.ODataServiceDocumentSerializer" />.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.Serialization.ODataServiceDocumentSerializer.WriteObject(System.Object,System.Type,Microsoft.OData.Core.ODataMessageWriter,System.Web.OData.Formatter.Serialization.ODataSerializerContext)"></member>
    <member name="T:System.Web.OData.Formatter.Serialization.SelectExpandNode">
      <summary>Describes the set of structural properties and navigation properties and actions to select and navigation properties to expand while writing an <see cref="T:Microsoft.OData.Core.ODataEntry" /> in the response.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.Serialization.SelectExpandNode.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Web.OData.Formatter.Serialization.SelectExpandNode" /> class.</summary>
    </member>
    <member name="M:System.Web.OData.Formatter.Serialization.SelectExpandNode.#ctor(Microsoft.OData.Core.UriParser.Semantic.SelectExpandClause,Microsoft.OData.Edm.IEdmEntityType,Microsoft.OData.Edm.IEdmModel)">
      <summary>Creates a new instance of the <see cref="T:System.Web.OData.Formatter.Serialization.SelectExpandNode" /> class describing the set of structural properties, navigation properties, and actions to select and expand for the given <paramref name="selectExpandClause" />.</summary>
      <param name="selectExpandClause">The parsed $select and $expand query options.</param>
      <param name="entityType">The entity type of the entry that would be written.</param>
      <param name="model">The <see cref="T:Microsoft.OData.Edm.IEdmModel" /> that contains the given entity type.</param>
    </member>
    <member name="P:System.Web.OData.Formatter.Serialization.SelectExpandNode.ExpandedNavigationProperties">
      <summary>Gets the list of EDM navigation properties to be expanded in the response.</summary>
    </member>
    <member name="P:System.Web.OData.Formatter.Serialization.SelectExpandNode.SelectAllDynamicProperties">
      <summary>Gets the flag to indicate the dynamic property to be included in the response or not.</summary>
    </member>
    <member name="P:System.Web.OData.Formatter.Serialization.SelectExpandNode.SelectedActions">
      <summary>Gets the list of OData actions to be included in the response.</summary>
    </member>
    <member name="P:System.Web.OData.Formatter.Serialization.SelectExpandNode.SelectedFunctions">
      <summary>Gets the list of OData functions to be included in the response.</summary>
    </member>
    <member name="P:System.Web.OData.Formatter.Serialization.SelectExpandNode.SelectedNavigationProperties">
      <summary>Gets the list of EDM navigation properties to be included as links in the response.</summary>
    </member>
    <member name="P:System.Web.OData.Formatter.Serialization.SelectExpandNode.SelectedStructuralProperties">
      <summary>Gets the list of EDM structural properties to be included in the response.</summary>
    </member>
    <member name="T:System.Web.OData.Query.AllowedArithmeticOperators">
      <summary>Arithmetic operators to allow for querying using $filter.</summary>
    </member>
    <member name="F:System.Web.OData.Query.AllowedArithmeticOperators.Add">
      <summary>A value that corresponds to allowing 'Add' arithmetic operator in $filter.</summary>
    </member>
    <member name="F:System.Web.OData.Query.AllowedArithmeticOperators.All">
      <summary>A value that corresponds to allowing all arithmetic operators in $filter.</summary>
    </member>
    <member name="F:System.Web.OData.Query.AllowedArithmeticOperators.Divide">
      <summary>A value that corresponds to allowing 'Divide' arithmetic operator in $filter.</summary>
    </member>
    <member name="F:System.Web.OData.Query.AllowedArithmeticOperators.Modulo">
      <summary>A value that corresponds to allowing 'Modulo' arithmetic operator in $filter.</summary>
    </member>
    <member name="F:System.Web.OData.Query.AllowedArithmeticOperators.Multiply">
      <summary>A value that corresponds to allowing 'Multiply' arithmetic operator in $filter.</summary>
    </member>
    <member name="F:System.Web.OData.Query.AllowedArithmeticOperators.None">
      <summary>A value that corresponds to allowing no arithmetic operators in $filter.</summary>
    </member>
    <member name="F:System.Web.OData.Query.AllowedArithmeticOperators.Subtract">
      <summary>A value that corresponds to allowing 'Subtract' arithmetic operator in $filter.</summary>
    </member>
    <member name="T:System.Web.OData.Query.AllowedFunctions">
      <summary>Functions to allow for querying using $filter.</summary>
    </member>
    <member name="F:System.Web.OData.Query.AllowedFunctions.All">
      <summary>A value that corresponds to allowing 'All' function in $filter.</summary>
    </member>
    <member name="F:System.Web.OData.Query.AllowedFunctions.AllDateTimeFunctions">
      <summary>A value that corresponds to allowing all datetime related functions in $filter.</summary>
    </member>
    <member name="F:System.Web.OData.Query.AllowedFunctions.AllFunctions">
      <summary>A value that corresponds to allowing all functions in $filter.</summary>
    </member>
    <member name="F:System.Web.OData.Query.AllowedFunctions.AllMathFunctions">
      <summary>A value that corresponds to allowing math related functions in $filter.</summary>
    </member>
    <member name="F:System.Web.OData.Query.AllowedFunctions.AllStringFunctions">
      <summary>A value that corresponds to allowing all string related functions in $filter.</summary>
    </member>
    <member name="F:System.Web.OData.Query.AllowedFunctions.Any">
      <summary>A value that corresponds to allowing 'Any' function in $filter.</summary>
    </member>
    <member name="F:System.Web.OData.Query.AllowedFunctions.Cast">
      <summary>A value that corresponds to allowing 'Cast' function in $filter.</summary>
    </member>
    <member name="F:System.Web.OData.Query.AllowedFunctions.Ceiling">
      <summary>A value that corresponds to allowing 'Ceiling' function in $filter.</summary>
    </member>
    <member name="F:System.Web.OData.Query.AllowedFunctions.Concat">
      <summary>A value that corresponds to allowing 'Concat' function in $filter.</summary>
    </member>
    <member name="F:System.Web.OData.Query.AllowedFunctions.Day">
      <summary>A value that corresponds to allowing 'Day' function in $filter.</summary>
    </member>
    <member name="F:System.Web.OData.Query.AllowedFunctions.Days">
      <summary>A value that corresponds to allowing 'Days' function in $filter.</summary>
    </member>
    <member name="F:System.Web.OData.Query.AllowedFunctions.EndsWith">
      <summary>A value that corresponds to allowing 'EndsWith' function in $filter.</summary>
    </member>
    <member name="F:System.Web.OData.Query.AllowedFunctions.Floor">
      <summary>A value that corresponds to allowing 'Floor' function in $filter.</summary>
    </member>
    <member name="F:System.Web.OData.Query.AllowedFunctions.Hour">
      <summary>A value that corresponds to allowing 'Hour' function in $filter.</summary>
    </member>
    <member name="F:System.Web.OData.Query.AllowedFunctions.Hours">
      <summary>A value that corresponds to allowing 'Hours' function in $filter.</summary>
    </member>
    <member name="F:System.Web.OData.Query.AllowedFunctions.IndexOf">
      <summary>A value that corresponds to allowing 'IndexOf' function in $filter.</summary>
    </member>
    <member name="F:System.Web.OData.Query.AllowedFunctions.IsOf">
      <summary>A value that corresponds to allowing 'IsOf' function in $filter.</summary>
    </member>
    <member name="F:System.Web.OData.Query.AllowedFunctions.Length">
      <summary>A value that corresponds to allowing 'Length' function in $filter.</summary>
    </member>
    <member name="F:System.Web.OData.Query.AllowedFunctions.Minute">
      <summary>A value that corresponds to allowing 'Minute' function in $filter.</summary>
    </member>
    <member name="F:System.Web.OData.Query.AllowedFunctions.Minutes">
      <summary>A value that corresponds to allowing 'Minutes' function in $filter.</summary>
    </member>
    <member name="F:System.Web.OData.Query.AllowedFunctions.Month">
      <summary>A value that corresponds to allowing 'Month' function in $filter.</summary>
    </member>
    <member name="F:System.Web.OData.Query.AllowedFunctions.Months">
      <summary>A value that corresponds to allowing 'Months' function in $filter.</summary>
    </member>
    <member name="F:System.Web.OData.Query.AllowedFunctions.None">
      <summary>A value that corresponds to allowing no functions in $filter.</summary>
    </member>
    <member name="F:System.Web.OData.Query.AllowedFunctions.Round">
      <summary>A value that corresponds to allowing 'Round' function in $filter.</summary>
    </member>
    <member name="F:System.Web.OData.Query.AllowedFunctions.Second">
      <summary>A value that corresponds to allowing 'Second' function in $filter.</summary>
    </member>
    <member name="F:System.Web.OData.Query.AllowedFunctions.Seconds">
      <summary>A value that corresponds to allowing 'Seconds' function in $filter.</summary>
    </member>
    <member name="F:System.Web.OData.Query.AllowedFunctions.StartsWith">
      <summary>A value that corresponds to allowing 'StartsWith' function in $filter.</summary>
    </member>
    <member name="F:System.Web.OData.Query.AllowedFunctions.Substring">
      <summary>A value that corresponds to allowing 'Substring' function in $filter.</summary>
    </member>
    <member name="F:System.Web.OData.Query.AllowedFunctions.SubstringOf">
      <summary>A value that corresponds to allowing 'SubstringOf' function in $filter.</summary>
    </member>
    <member name="F:System.Web.OData.Query.AllowedFunctions.ToLower">
      <summary>A value that corresponds to allowing 'ToLower' function in $filter.</summary>
    </member>
    <member name="F:System.Web.OData.Query.AllowedFunctions.ToUpper">
      <summary>A value that corresponds to allowing 'ToUpper' function in $filter.</summary>
    </member>
    <member name="F:System.Web.OData.Query.AllowedFunctions.Trim">
      <summary>A value that corresponds to allowing 'Trim' function in $filter.</summary>
    </member>
    <member name="F:System.Web.OData.Query.AllowedFunctions.Year">
      <summary>A value that corresponds to allowing 'Year' function in $filter.</summary>
    </member>
    <member name="F:System.Web.OData.Query.AllowedFunctions.Years">
      <summary>A value that corresponds to allowing 'Years' function in $filter.</summary>
    </member>
    <member name="T:System.Web.OData.Query.AllowedLogicalOperators">
      <summary>Logical operators to allow for querying using $filter.</summary>
    </member>
    <member name="F:System.Web.OData.Query.AllowedLogicalOperators.All">
      <summary>A value that corresponds to allowing all logical operators in $filter.</summary>
    </member>
    <member name="F:System.Web.OData.Query.AllowedLogicalOperators.And">
      <summary>A value that corresponds to allowing 'And' logical operator in $filter.</summary>
    </member>
    <member name="F:System.Web.OData.Query.AllowedLogicalOperators.Equal">
      <summary>A value that corresponds to allowing 'Equal' logical operator in $filter.</summary>
    </member>
    <member name="F:System.Web.OData.Query.AllowedLogicalOperators.GreaterThan">
      <summary>A value that corresponds to allowing 'GreaterThan' logical operator in $filter.</summary>
    </member>
    <member name="F:System.Web.OData.Query.AllowedLogicalOperators.GreaterThanOrEqual">
      <summary>A value that corresponds to allowing 'GreaterThanOrEqual' logical operator in $filter.</summary>
    </member>
    <member name="F:System.Web.OData.Query.AllowedLogicalOperators.Has">
      <summary>A value that corresponds to allowing 'Has' logical operator in $filter.</summary>
    </member>
    <member name="F:System.Web.OData.Query.AllowedLogicalOperators.LessThan">
      <summary>A value that corresponds to allowing 'LessThan' logical operator in $filter.</summary>
    </member>
    <member name="F:System.Web.OData.Query.AllowedLogicalOperators.LessThanOrEqual">
      <summary>A value that corresponds to allowing 'LessThanOrEqual' logical operator in $filter.</summary>
    </member>
    <member name="F:System.Web.OData.Query.AllowedLogicalOperators.None">
      <summary>A value that corresponds to allowing no logical operators in $filter.</summary>
    </member>
    <member name="F:System.Web.OData.Query.AllowedLogicalOperators.Not">
      <summary>A value that corresponds to allowing 'Not' logical operator in $filter.</summary>
    </member>
    <member name="F:System.Web.OData.Query.AllowedLogicalOperators.NotEqual">
      <summary>A value that corresponds to allowing 'NotEqual' logical operator in $filter.</summary>
    </member>
    <member name="F:System.Web.OData.Query.AllowedLogicalOperators.Or">
      <summary>A value that corresponds to allowing 'Or' logical operator in $filter.</summary>
    </member>
    <member name="T:System.Web.OData.Query.AllowedQueryOptions">
      <summary>OData query options to allow for querying.</summary>
    </member>
    <member name="F:System.Web.OData.Query.AllowedQueryOptions.All">
      <summary>A value that corresponds to allowing all query options.</summary>
    </member>
    <member name="F:System.Web.OData.Query.AllowedQueryOptions.Count">
      <summary>A value that corresponds to allowing the $count query option.</summary>
    </member>
    <member name="F:System.Web.OData.Query.AllowedQueryOptions.Expand">
      <summary>A value that corresponds to allowing the $expand query option.</summary>
    </member>
    <member name="F:System.Web.OData.Query.AllowedQueryOptions.Filter">
      <summary>A value that corresponds to allowing the $filter query option.</summary>
    </member>
    <member name="F:System.Web.OData.Query.AllowedQueryOptions.Format">
      <summary>A value that corresponds to allowing the $format query option.</summary>
    </member>
    <member name="F:System.Web.OData.Query.AllowedQueryOptions.None">
      <summary>A value that corresponds to allowing no query options.</summary>
    </member>
    <member name="F:System.Web.OData.Query.AllowedQueryOptions.OrderBy">
      <summary>A value that corresponds to allowing the $orderby query option.</summary>
    </member>
    <member name="F:System.Web.OData.Query.AllowedQueryOptions.Select">
      <summary>A value that corresponds to allowing the $select query option.</summary>
    </member>
    <member name="F:System.Web.OData.Query.AllowedQueryOptions.Skip">
      <summary>A value that corresponds to allowing the $skip query option.</summary>
    </member>
    <member name="F:System.Web.OData.Query.AllowedQueryOptions.SkipToken">
      <summary>A value that corresponds to allowing the $skiptoken query option.</summary>
    </member>
    <member name="F:System.Web.OData.Query.AllowedQueryOptions.Supported">
      <summary>A value that corresponds to the default query options supported by <see cref="T:System.Web.OData.EnableQueryAttribute" />.</summary>
    </member>
    <member name="F:System.Web.OData.Query.AllowedQueryOptions.Top">
      <summary>A value that corresponds to allowing the $top query option.</summary>
    </member>
    <member name="T:System.Web.OData.Query.CountQueryOption">
      <summary>Represents the value of the $count query option and exposes a way to retrieve the number of entities that satisfy a query.</summary>
    </member>
    <member name="M:System.Web.OData.Query.CountQueryOption.#ctor(System.String,System.Web.OData.ODataQueryContext,Microsoft.OData.Core.UriParser.ODataQueryOptionParser)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Query.CountQueryOption" /> class.</summary>
      <param name="rawValue">The raw value for the $count query option.</param>
      <param name="context">The <see cref="T:System.Web.OData.ODataQueryContext" /> which contains the query context.</param>
      <param name="queryOptionParser">The <see cref="T:Microsoft.OData.Core.UriParser.ODataQueryOptionParser" /> which is used to parse the query option.</param>
    </member>
    <member name="P:System.Web.OData.Query.CountQueryOption.Context">
      <summary>Gets the given <see cref="T:System.Web.OData.ODataQueryContext" />.</summary>
    </member>
    <member name="M:System.Web.OData.Query.CountQueryOption.GetEntityCount(System.Linq.IQueryable)">
      <summary>Gets the number of entities that satify the given query if the response should include a count query option, or null otherwise.</summary>
      <returns>The number of entities that satisfy the specified query if the response should include a count query option, or null otherwise.</returns>
      <param name="query">The query to compute the count for.</param>
    </member>
    <member name="P:System.Web.OData.Query.CountQueryOption.RawValue">
      <summary>Gets the raw $count value.</summary>
    </member>
    <member name="M:System.Web.OData.Query.CountQueryOption.Validate(System.Web.OData.Query.ODataValidationSettings)">
      <summary>Validate the count query based on the given <paramref name="validationSettings" />. It throws an ODataException if validation failed.</summary>
      <param name="validationSettings">The <see cref="T:System.Web.OData.Query.ODataValidationSettings" /> instance which contains all the validation settings.</param>
    </member>
    <member name="P:System.Web.OData.Query.CountQueryOption.Validator">
      <summary>Gets or sets the $count query validator.</summary>
    </member>
    <member name="P:System.Web.OData.Query.CountQueryOption.Value">
      <summary>Gets the value of the $count in a parsed form.</summary>
    </member>
    <member name="T:System.Web.OData.Query.FilterQueryOption">
      <summary>This defines a $filter OData query option for querying.</summary>
    </member>
    <member name="M:System.Web.OData.Query.FilterQueryOption.#ctor(System.String,System.Web.OData.ODataQueryContext,Microsoft.OData.Core.UriParser.ODataQueryOptionParser)">
      <summary>Initialize a new instance of <see cref="T:System.Web.OData.Query.FilterQueryOption" /> based on the raw $filter value and an EdmModel from <see cref="T:System.Web.OData.ODataQueryContext" />.</summary>
      <param name="rawValue">The raw value for $filter query. It can be null or empty.</param>
      <param name="context">The <see cref="T:System.Web.OData.ODataQueryContext" /> which contains the <see cref="T:Microsoft.OData.Edm.IEdmModel" /> and some type information</param>
      <param name="queryOptionParser">The <see cref="T:Microsoft.OData.Core.UriParser.ODataQueryOptionParser" /> which is used to parse the query option.</param>
    </member>
    <member name="M:System.Web.OData.Query.FilterQueryOption.ApplyTo(System.Linq.IQueryable,System.Web.OData.Query.ODataQuerySettings)">
      <summary>Apply the filter query to the given IQueryable.</summary>
      <returns>The new <see cref="T:System.Linq.IQueryable" /> after the filter query has been applied to.</returns>
      <param name="query">The original <see cref="T:System.Linq.IQueryable" />.</param>
      <param name="querySettings">The <see cref="T:System.Web.OData.Query.ODataQuerySettings" /> that contains all the query application related settings.</param>
    </member>
    <member name="M:System.Web.OData.Query.FilterQueryOption.ApplyTo(System.Linq.IQueryable,System.Web.OData.Query.ODataQuerySettings,System.Web.Http.Dispatcher.IAssembliesResolver)">
      <summary>Apply the filter query to the given IQueryable.</summary>
      <returns>The new <see cref="T:System.Linq.IQueryable" /> after the filter query has been applied to.</returns>
      <param name="query">The original <see cref="T:System.Linq.IQueryable" />.</param>
      <param name="querySettings">The <see cref="T:System.Web.OData.Query.ODataQuerySettings" /> that contains all the query application related settings.</param>
      <param name="assembliesResolver">The <see cref="T:System.Web.Http.Dispatcher.IAssembliesResolver" /> to use.</param>
    </member>
    <member name="P:System.Web.OData.Query.FilterQueryOption.Context">
      <summary>Gets the given <see cref="T:System.Web.OData.ODataQueryContext" />.</summary>
    </member>
    <member name="P:System.Web.OData.Query.FilterQueryOption.FilterClause">
      <summary>Gets the parsed <see cref="P:System.Web.OData.Query.FilterQueryOption.FilterClause" /> for this query option.</summary>
    </member>
    <member name="P:System.Web.OData.Query.FilterQueryOption.RawValue">
      <summary>Gets the raw $filter value.</summary>
    </member>
    <member name="M:System.Web.OData.Query.FilterQueryOption.Validate(System.Web.OData.Query.ODataValidationSettings)">
      <summary>Validate the filter query based on the given <paramref name="validationSettings" />. It throws an ODataException if validation failed.</summary>
      <param name="validationSettings">The <see cref="T:System.Web.OData.Query.ODataValidationSettings" /> instance which contains all the validation settings.</param>
    </member>
    <member name="P:System.Web.OData.Query.FilterQueryOption.Validator">
      <summary>Gets or sets the Filter Query Validator</summary>
    </member>
    <member name="T:System.Web.OData.Query.HandleNullPropagationOption">
      <summary>This enum defines how to handle null propagation in queryable support.</summary>
    </member>
    <member name="F:System.Web.OData.Query.HandleNullPropagationOption.Default">
      <summary>Determine how to handle null propagation based on the query provider during query composition. This is the default value used in <see cref="T:System.Web.OData.Query.ODataQuerySettings" /></summary>
    </member>
    <member name="F:System.Web.OData.Query.HandleNullPropagationOption.False">
      <summary>Do not handle null propagation during query composition.</summary>
    </member>
    <member name="F:System.Web.OData.Query.HandleNullPropagationOption.True">
      <summary>Handle null propagation during query composition.</summary>
    </member>
    <member name="T:System.Web.OData.Query.IPropertyMapper">
      <summary>The result of a $select and $expand projection is represented as an <see cref="T:System.Web.OData.Query.ISelectExpandWrapper" /> instance. That instance can be projected into an <see cref="T:System.Collections.Generic.IDictionary`2" /> instance by calling <see cref="M:System.Web.OData.Query.ISelectExpandWrapper.ToDictionary(System.Func{Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmStructuredType,System.Web.OData.Query.IPropertyMapper})" />. That method will use the function to construct an <see cref="T:System.Web.OData.Query.IPropertyMapper" /> that will map the property names in that projection to the keys in the returned <see cref="T:System.Collections.Generic.IDictionary`2" />. The main purpose of converting an <see cref="T:System.Web.OData.Query.ISelectExpandWrapper" /> instance into an <see cref="T:System.Collections.Generic.IDictionary`2" /> (using the method mentioned above) is to allow changing the names of the properties in the <see cref="T:Microsoft.OData.Edm.IEdmStructuredType" /> that will be used during the serialization of the $select and $expand projection by a given formatter. For example, to support custom serialization attributes of a particular formatter.</summary>
    </member>
    <member name="M:System.Web.OData.Query.IPropertyMapper.MapProperty(System.String)">
      <summary>Defines a mapping between the name of an <see cref="T:Microsoft.OData.Edm.IEdmProperty" /> of an <see cref="T:Microsoft.OData.Edm.IEdmStructuredType" /> and the name that should be used in other contexts, for example, when projecting an instance of an <see cref="T:System.Web.OData.Query.ISelectExpandWrapper" /> into an instance of an <see cref="T:System.Collections.Generic.IDictionary`2" /></summary>
      <returns>The value that will be used as the key for this property in the <see cref="T:System.Collections.Generic.IDictionary`2" /> resulting from calling ToDictionary on an <see cref="T:System.Web.OData.Query.ISelectExpandWrapper" /> instance.</returns>
      <param name="propertyName">The name of the property in the <see cref="T:Microsoft.OData.Edm.IEdmStructuredType" /> represented by this instance of <see cref="T:System.Web.OData.Query.ISelectExpandWrapper" />.</param>
    </member>
    <member name="T:System.Web.OData.Query.ISelectExpandWrapper">
      <summary>Represents the result of a $select and $expand query operation.</summary>
    </member>
    <member name="M:System.Web.OData.Query.ISelectExpandWrapper.ToDictionary">
      <summary>Projects the result of a $select and $expand query to a <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IDictionary`2" /> representing the $select and $expand result.</returns>
    </member>
    <member name="M:System.Web.OData.Query.ISelectExpandWrapper.ToDictionary(System.Func{Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmStructuredType,System.Web.OData.Query.IPropertyMapper})">
      <summary>Projects the result of a $select and/or $expand query to an <see cref="T:System.Collections.Generic.IDictionary`2" /> using the given <paramref name="propertyMapperProvider" />. The <paramref name="propertyMapperProvider" /> is used to obtain an <see cref="T:System.Web.OData.Query.IPropertyMapper" /> for the <see cref="T:Microsoft.OData.Edm.IEdmStructuredType" /> that this <see cref="T:System.Web.OData.Query.ISelectExpandWrapper" /> instance represents. This <see cref="T:System.Web.OData.Query.IPropertyMapper" /> will be used to map the properties of the <see cref="T:System.Web.OData.Query.ISelectExpandWrapper" /> instance to the keys of the returned <see cref="T:System.Collections.Generic.IDictionary`2" />. This method can be used, for example, to map the property names in the <see cref="T:Microsoft.OData.Edm.IEdmStructuredType" /> to the names that should be used to serialize the properties that this projection contains.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IDictionary`2" /> representing the $select and $expand result.</returns>
      <param name="propertyMapperProvider">A function that provides a new instance of an <see cref="T:System.Web.OData.Query.IPropertyMapper" /> for a given <see cref="T:Microsoft.OData.Edm.IEdmStructuredType" /> and a given <see cref="T:Microsoft.OData.Edm.IEdmModel" />.</param>
    </member>
    <member name="T:System.Web.OData.Query.ITruncatedCollection">
      <summary>Represents a collection that is truncated to a given page size.</summary>
    </member>
    <member name="P:System.Web.OData.Query.ITruncatedCollection.IsTruncated">
      <summary>Gets a value representing if the collection is truncated or not.</summary>
    </member>
    <member name="P:System.Web.OData.Query.ITruncatedCollection.PageSize">
      <summary>Gets the page size the collection is truncated to.</summary>
    </member>
    <member name="T:System.Web.OData.Query.NonFilterableAttribute">
      <summary>Represents an <see cref="T:System.Attribute" /> that can be placed on a property to specify that the property cannot be used in the $filter OData query option.</summary>
    </member>
    <member name="M:System.Web.OData.Query.NonFilterableAttribute.#ctor"></member>
    <member name="T:System.Web.OData.Query.NotCountableAttribute">
      <summary>Represents an <see cref="T:System.Attribute" /> that can be placed on a property to specify that the $count cannot be applied on the property.</summary>
    </member>
    <member name="M:System.Web.OData.Query.NotCountableAttribute.#ctor"></member>
    <member name="T:System.Web.OData.Query.NotExpandableAttribute">
      <summary>Represents an <see cref="T:System.Attribute" /> that can be placed on a property to specify that the property cannot be used in the $expand OData query option.</summary>
    </member>
    <member name="M:System.Web.OData.Query.NotExpandableAttribute.#ctor"></member>
    <member name="T:System.Web.OData.Query.NotFilterableAttribute">
      <summary>Represents an attribute that can be placed on a property to specify that the property cannot be used in the $filter OData query option.</summary>
    </member>
    <member name="M:System.Web.OData.Query.NotFilterableAttribute.#ctor"></member>
    <member name="T:System.Web.OData.Query.NotNavigableAttribute">
      <summary>Represents an <see cref="T:System.Attribute" /> that can be placed on a property to specify that the property cannot be navigated in OData query.</summary>
    </member>
    <member name="M:System.Web.OData.Query.NotNavigableAttribute.#ctor"></member>
    <member name="T:System.Web.OData.Query.NotSortableAttribute">
      <summary>Represents an attribute that can be placed on a property to specify that the property cannot be used in the $orderby OData query option.</summary>
    </member>
    <member name="M:System.Web.OData.Query.NotSortableAttribute.#ctor"></member>
    <member name="T:System.Web.OData.Query.ODataQueryOptions">
      <summary>This defines a composite OData query options that can be used to perform query composition. Currently this only supports $filter, $orderby, $top, $skip, and $count.</summary>
    </member>
    <member name="M:System.Web.OData.Query.ODataQueryOptions.#ctor(System.Web.OData.ODataQueryContext,System.Net.Http.HttpRequestMessage)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Query.ODataQueryOptions" /> class based on the incoming request and some metadata information from the <see cref="T:System.Web.OData.ODataQueryContext" />.</summary>
      <param name="context">The <see cref="T:System.Web.OData.ODataQueryContext" /> which contains the <see cref="T:Microsoft.OData.Edm.IEdmModel" /> and some type information.</param>
      <param name="request">The incoming request message.</param>
    </member>
    <member name="M:System.Web.OData.Query.ODataQueryOptions.ApplyTo(System.Linq.IQueryable)">
      <summary>Apply the individual query to the given IQueryable in the right order.</summary>
      <returns>The new <see cref="T:System.Linq.IQueryable" /> after the query has been applied to.</returns>
      <param name="query">The original <see cref="T:System.Linq.IQueryable" />.</param>
    </member>
    <member name="M:System.Web.OData.Query.ODataQueryOptions.ApplyTo(System.Linq.IQueryable,System.Web.OData.Query.ODataQuerySettings)">
      <summary>Apply the individual query to the given IQueryable in the right order.</summary>
      <returns>The new <see cref="T:System.Linq.IQueryable" /> after the query has been applied to.</returns>
      <param name="query">The original <see cref="T:System.Linq.IQueryable" />.</param>
      <param name="querySettings">The settings to use in query composition.</param>
    </member>
    <member name="M:System.Web.OData.Query.ODataQueryOptions.ApplyTo(System.Object,System.Web.OData.Query.ODataQuerySettings)">
      <summary>Applies the query to the given entity using the given <see cref="T:System.Web.OData.Query.ODataQuerySettings" />.</summary>
      <returns>The new entity after the $select and $expand query has been applied to.</returns>
      <param name="entity">The original entity.</param>
      <param name="querySettings">The <see cref="T:System.Web.OData.Query.ODataQuerySettings" /> that contains all the query application related settings.</param>
    </member>
    <member name="P:System.Web.OData.Query.ODataQueryOptions.Context">
      <summary>Gets the given <see cref="T:System.Web.OData.ODataQueryContext" /></summary>
    </member>
    <member name="P:System.Web.OData.Query.ODataQueryOptions.Count">
      <summary>Gets the <see cref="T:System.Web.OData.Query.CountQueryOption" />.</summary>
    </member>
    <member name="P:System.Web.OData.Query.ODataQueryOptions.Filter">
      <summary>Gets the <see cref="T:System.Web.OData.Query.FilterQueryOption" />.</summary>
    </member>
    <member name="P:System.Web.OData.Query.ODataQueryOptions.IfMatch">
      <summary>Gets the <see cref="T:System.Web.OData.Formatter.ETag" /> from IfMatch header.</summary>
    </member>
    <member name="P:System.Web.OData.Query.ODataQueryOptions.IfNoneMatch">
      <summary>Gets the <see cref="T:System.Web.OData.Formatter.ETag" /> from IfNoneMatch header.</summary>
    </member>
    <member name="M:System.Web.OData.Query.ODataQueryOptions.IsSystemQueryOption(System.String)">
      <summary>Check if the given query option is an OData system query option.</summary>
      <returns>Returns true if the query option is an OData system query option.</returns>
      <param name="queryOptionName">The name of the query option.</param>
    </member>
    <member name="M:System.Web.OData.Query.ODataQueryOptions.LimitResults``1(System.Linq.IQueryable{``0},System.Int32,System.Boolean@)">
      <summary>Limits the query results to a maximum number of results.</summary>
      <returns>The limited query results.</returns>
      <param name="queryable">The queryable to limit.</param>
      <param name="limit">The query result limit.</param>
      <param name="resultsLimited">true if the query results were limited; false otherwise</param>
      <typeparam name="T">The entity CLR type</typeparam>
    </member>
    <member name="P:System.Web.OData.Query.ODataQueryOptions.OrderBy">
      <summary>Gets the <see cref="T:System.Web.OData.Query.OrderByQueryOption" />.</summary>
    </member>
    <member name="P:System.Web.OData.Query.ODataQueryOptions.RawValues">
      <summary>Gets the raw string of all the OData query options</summary>
    </member>
    <member name="P:System.Web.OData.Query.ODataQueryOptions.Request">
      <summary>Gets the request message associated with this instance.</summary>
    </member>
    <member name="P:System.Web.OData.Query.ODataQueryOptions.SelectExpand">
      <summary>Gets the <see cref="T:System.Web.OData.Query.SelectExpandQueryOption" />.</summary>
    </member>
    <member name="P:System.Web.OData.Query.ODataQueryOptions.Skip">
      <summary>Gets the <see cref="T:System.Web.OData.Query.SkipQueryOption" />.</summary>
    </member>
    <member name="P:System.Web.OData.Query.ODataQueryOptions.Top">
      <summary>Gets the <see cref="T:System.Web.OData.Query.TopQueryOption" />.</summary>
    </member>
    <member name="M:System.Web.OData.Query.ODataQueryOptions.Validate(System.Web.OData.Query.ODataValidationSettings)">
      <summary>Validate all OData queries, including $skip, $top, $orderby and $filter, based on the given <paramref name="validationSettings" />. It throws an ODataException if validation failed.</summary>
      <param name="validationSettings">The <see cref="T:System.Web.OData.Query.ODataValidationSettings" /> instance which contains all the validation settings.</param>
    </member>
    <member name="P:System.Web.OData.Query.ODataQueryOptions.Validator">
      <summary>Gets or sets the query validator.</summary>
    </member>
    <member name="T:System.Web.OData.Query.ODataQueryOptions`1">
      <summary>This defines a composite OData query options that can be used to perform query composition. Currently this only supports $filter, $orderby, $top, $skip.</summary>
      <typeparam name="TEntity"></typeparam>
    </member>
    <member name="M:System.Web.OData.Query.ODataQueryOptions`1.#ctor(System.Web.OData.ODataQueryContext,System.Net.Http.HttpRequestMessage)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Query.ODataQueryOptions" /> class based on the incoming request and some metadata information from the <see cref="T:System.Web.OData.ODataQueryContext" />.</summary>
      <param name="context">The <see cref="T:System.Web.OData.ODataQueryContext" /> which contains the <see cref="T:Microsoft.OData.Edm.IEdmModel" /> and some type information</param>
      <param name="request">The incoming request message</param>
    </member>
    <member name="M:System.Web.OData.Query.ODataQueryOptions`1.ApplyTo(System.Linq.IQueryable)">
      <summary>Apply the individual query to the given IQueryable in the right order.</summary>
      <returns>The new <see cref="T:System.Linq.IQueryable" /> after the query has been applied to.</returns>
      <param name="query">The original <see cref="T:System.Linq.IQueryable" />.</param>
    </member>
    <member name="M:System.Web.OData.Query.ODataQueryOptions`1.ApplyTo(System.Linq.IQueryable,System.Web.OData.Query.ODataQuerySettings)">
      <summary>Apply the individual query to the given IQueryable in the right order.</summary>
      <returns>The new <see cref="T:System.Linq.IQueryable" /> after the query has been applied to.</returns>
      <param name="query">The original <see cref="T:System.Linq.IQueryable" />.</param>
      <param name="querySettings">The settings to use in query composition.</param>
    </member>
    <member name="P:System.Web.OData.Query.ODataQueryOptions`1.IfMatch">
      <summary>Gets the <see cref="T:System.Web.OData.Formatter.ETag`1" /> from IfMatch header.</summary>
    </member>
    <member name="P:System.Web.OData.Query.ODataQueryOptions`1.IfNoneMatch">
      <summary>Gets the <see cref="T:System.Web.OData.Formatter.ETag`1" /> from IfNoneMatch header.</summary>
    </member>
    <member name="T:System.Web.OData.Query.ODataQuerySettings">
      <summary>This class describes the settings to use during query composition.</summary>
    </member>
    <member name="M:System.Web.OData.Query.ODataQuerySettings.#ctor">
      <summary>Instantiates a new instance of the <see cref="T:System.Web.OData.Query.ODataQuerySettings" /> class and initializes the default settings.</summary>
    </member>
    <member name="M:System.Web.OData.Query.ODataQuerySettings.#ctor(System.Web.OData.Query.ODataQuerySettings)">
      <summary>Initialize a new instance of the <see cref="T:System.Web.OData.Query.ODataQuerySettings" /> class based on an existing one.</summary>
      <param name="settings">The setting to copy from.</param>
    </member>
    <member name="P:System.Web.OData.Query.ODataQuerySettings.EnableConstantParameterization">
      <summary>Gets or sets a value indicating whether constants should be parameterized. Parameterizing constants would result in better performance with Entity framework.</summary>
      <returns>The default value is true.</returns>
    </member>
    <member name="P:System.Web.OData.Query.ODataQuerySettings.EnsureStableOrdering">
      <summary>Gets or sets a value indicating whether query composition should alter the original query when necessary to ensure a stable sort order.</summary>
      <returns>A true value indicates the original query should be modified when necessary to guarantee a stable sort order. A false value indicates the sort order can be considered stable without modifying the query. Query providers that ensure a stable sort order should set this value to false. The default value is true.</returns>
    </member>
    <member name="P:System.Web.OData.Query.ODataQuerySettings.HandleNullPropagation">
      <summary>Gets or sets a value indicating how null propagation should be handled during query composition.</summary>
      <returns>The default is <see cref="F:System.Web.OData.Query.HandleNullPropagationOption.Default" />.</returns>
    </member>
    <member name="P:System.Web.OData.Query.ODataQuerySettings.PageSize">
      <summary>Gets or sets the maximum number of query results to return.</summary>
      <returns>The maximum number of query results to return, or null if there is no limit.</returns>
    </member>
    <member name="T:System.Web.OData.Query.ODataRawQueryOptions">
      <summary>Represents the raw query values in the string format from the incoming request.</summary>
    </member>
    <member name="M:System.Web.OData.Query.ODataRawQueryOptions.#ctor"></member>
    <member name="P:System.Web.OData.Query.ODataRawQueryOptions.Count">
      <summary>Gets the raw $count query value from the incoming request Uri if exists.</summary>
    </member>
    <member name="P:System.Web.OData.Query.ODataRawQueryOptions.Expand">
      <summary>Gets the raw $expand query value from the incoming request Uri if exists.</summary>
    </member>
    <member name="P:System.Web.OData.Query.ODataRawQueryOptions.Filter">
      <summary>Gets the raw $filter query value from the incoming request Uri if exists.</summary>
    </member>
    <member name="P:System.Web.OData.Query.ODataRawQueryOptions.Format">
      <summary>Gets the raw $format query value from the incoming request Uri if exists.</summary>
    </member>
    <member name="P:System.Web.OData.Query.ODataRawQueryOptions.OrderBy">
      <summary>Gets the raw $orderby query value from the incoming request Uri if exists.</summary>
    </member>
    <member name="P:System.Web.OData.Query.ODataRawQueryOptions.Select">
      <summary>Gets the raw $select query value from the incoming request Uri if exists.</summary>
    </member>
    <member name="P:System.Web.OData.Query.ODataRawQueryOptions.Skip">
      <summary>Gets the raw $skip query value from the incoming request Uri if exists.</summary>
    </member>
    <member name="P:System.Web.OData.Query.ODataRawQueryOptions.SkipToken">
      <summary>Gets the raw $skiptoken query value from the incoming request Uri if exists.</summary>
    </member>
    <member name="P:System.Web.OData.Query.ODataRawQueryOptions.Top">
      <summary>Gets the raw $top query value from the incoming request Uri if exists.</summary>
    </member>
    <member name="T:System.Web.OData.Query.ODataValidationSettings">
      <summary>This class describes the validation settings for querying.</summary>
    </member>
    <member name="M:System.Web.OData.Query.ODataValidationSettings.#ctor"></member>
    <member name="P:System.Web.OData.Query.ODataValidationSettings.AllowedArithmeticOperators">
      <summary>Gets or sets a list of allowed arithmetic operators including 'add', 'sub', 'mul', 'div', 'mod'.</summary>
    </member>
    <member name="P:System.Web.OData.Query.ODataValidationSettings.AllowedFunctions">
      <summary>Gets or sets a list of allowed functions used in the $filter query. The allowed functions include the following: String related: substringof, endswith, startswith, length, indexof, substring, tolower, toupper, trim, concat e.g. ~/Customers?$filter=length(CompanyName) eq 19 DateTime related: year, years, month, months, day, days, hour, hours, minute, minutes, second, seconds e.g. ~/Employees?$filter=year(BirthDate) eq 1971 Math related: round, floor, ceiling Type related:isof, cast, Collection related: any, all</summary>
    </member>
    <member name="P:System.Web.OData.Query.ODataValidationSettings.AllowedLogicalOperators">
      <summary>Gets or sets a list of allowed logical operators such as 'eq', 'ne', 'gt', 'ge', 'lt', 'le', 'and', 'or', 'not'.</summary>
    </member>
    <member name="P:System.Web.OData.Query.ODataValidationSettings.AllowedOrderByProperties">
      <summary>Gets a list of properties one can orderby the result with. Note, by default this list is empty, it means it can be ordered by any property. For example, having an empty collection means client can order the queryable result by any properties. Adding "Name" to this list means that it only allows queryable result to be ordered by Name property.</summary>
    </member>
    <member name="P:System.Web.OData.Query.ODataValidationSettings.AllowedQueryOptions">
      <summary>Gets or sets the query parameters that are allowed inside query. The default is all query options, including $filter, $skip, $top, $orderby, $expand, $select, $count, $format and $skiptoken.</summary>
    </member>
    <member name="P:System.Web.OData.Query.ODataValidationSettings.MaxAnyAllExpressionDepth">
      <summary>Gets or sets the maximum depth of the Any or All elements nested inside the query.</summary>
      <returns>The maximum depth of the Any or All elements nested inside the query.</returns>
    </member>
    <member name="P:System.Web.OData.Query.ODataValidationSettings.MaxExpansionDepth">
      <summary>Gets or sets the max expansion depth for the $expand query option.</summary>
    </member>
    <member name="P:System.Web.OData.Query.ODataValidationSettings.MaxNodeCount">
      <summary>Gets or sets the maximum number of the nodes inside the $filter syntax tree.</summary>
    </member>
    <member name="P:System.Web.OData.Query.ODataValidationSettings.MaxOrderByNodeCount">
      <summary>Gets or sets the maximum number of expressions that can be present in the $orderby.</summary>
    </member>
    <member name="P:System.Web.OData.Query.ODataValidationSettings.MaxSkip">
      <summary>Gets or sets the max value of $skip that a client can request.</summary>
    </member>
    <member name="P:System.Web.OData.Query.ODataValidationSettings.MaxTop">
      <summary>Gets or sets the max value of $top that a client can request.</summary>
    </member>
    <member name="T:System.Web.OData.Query.OrderByItNode">
      <summary>Represents the order by expression '$it' in the $orderby clause.</summary>
    </member>
    <member name="M:System.Web.OData.Query.OrderByItNode.#ctor(Microsoft.OData.Core.UriParser.OrderByDirection)">
      <summary>Instantiates a new instance of <see cref="T:System.Web.OData.Query.OrderByItNode" /> class.</summary>
      <param name="direction">The <see cref="T:Microsoft.OData.Core.UriParser.OrderByDirection" /> for this node.</param>
    </member>
    <member name="T:System.Web.OData.Query.OrderByNode">
      <summary>Represents a single order by expression in the $orderby clause.</summary>
    </member>
    <member name="M:System.Web.OData.Query.OrderByNode.#ctor(Microsoft.OData.Core.UriParser.OrderByDirection)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Query.OrderByNode" /> class.</summary>
      <param name="direction">The direction of the sort order.</param>
    </member>
    <member name="M:System.Web.OData.Query.OrderByNode.CreateCollection(Microsoft.OData.Core.UriParser.Semantic.OrderByClause)">
      <summary>Creates a list of <see cref="T:System.Web.OData.Query.OrderByNode" /> instances from a linked list of <see cref="T:Microsoft.OData.Core.UriParser.Semantic.OrderByClause" /> instances.</summary>
      <returns>The list of new <see cref="T:System.Web.OData.Query.OrderByPropertyNode" /> instances.</returns>
      <param name="orderByClause">The head of the <see cref="T:Microsoft.OData.Core.UriParser.Semantic.OrderByClause" /> linked list.</param>
    </member>
    <member name="P:System.Web.OData.Query.OrderByNode.Direction">
      <summary>Gets the <see cref="T:Microsoft.OData.Core.UriParser.OrderByDirection" /> for the current node.</summary>
    </member>
    <member name="T:System.Web.OData.Query.OrderByPropertyNode">
      <summary>Represents an order by <see cref="T:Microsoft.OData.Edm.IEdmProperty" /> expression.</summary>
    </member>
    <member name="M:System.Web.OData.Query.OrderByPropertyNode.#ctor(Microsoft.OData.Core.UriParser.Semantic.OrderByClause)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Query.OrderByPropertyNode" /> class.</summary>
      <param name="orderByClause">The orderby clause representing property access.</param>
    </member>
    <member name="M:System.Web.OData.Query.OrderByPropertyNode.#ctor(Microsoft.OData.Edm.IEdmProperty,Microsoft.OData.Core.UriParser.OrderByDirection)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Query.OrderByPropertyNode" /> class.</summary>
      <param name="property">The <see cref="T:Microsoft.OData.Edm.IEdmProperty" /> for this node.</param>
      <param name="direction">The <see cref="T:Microsoft.OData.Core.UriParser.OrderByDirection" /> for this node.</param>
    </member>
    <member name="P:System.Web.OData.Query.OrderByPropertyNode.OrderByClause">
      <summary>Gets the <see cref="P:System.Web.OData.Query.OrderByPropertyNode.OrderByClause" /> of this node.</summary>
    </member>
    <member name="P:System.Web.OData.Query.OrderByPropertyNode.Property">
      <summary>Gets the <see cref="T:Microsoft.OData.Edm.IEdmProperty" /> for the current node.</summary>
    </member>
    <member name="T:System.Web.OData.Query.OrderByQueryOption">
      <summary>This defines a $orderby OData query option for querying.</summary>
    </member>
    <member name="M:System.Web.OData.Query.OrderByQueryOption.#ctor(System.String,System.Web.OData.ODataQueryContext,Microsoft.OData.Core.UriParser.ODataQueryOptionParser)">
      <summary>Initialize a new instance of <see cref="T:System.Web.OData.Query.OrderByQueryOption" /> based on the raw $orderby value and an EdmModel from <see cref="T:System.Web.OData.ODataQueryContext" />.</summary>
      <param name="rawValue">The raw value for $orderby query. It can be null or empty.</param>
      <param name="context">The <see cref="T:System.Web.OData.ODataQueryContext" /> which contains the <see cref="T:Microsoft.OData.Edm.IEdmModel" /> and some type information</param>
      <param name="queryOptionParser">The <see cref="T:Microsoft.OData.Core.UriParser.ODataQueryOptionParser" /> which is used to parse the query option.</param>
    </member>
    <member name="M:System.Web.OData.Query.OrderByQueryOption.ApplyTo(System.Linq.IQueryable)">
      <summary>Apply the $orderby query to the given IQueryable.</summary>
      <returns>The new <see cref="T:System.Linq.IQueryable" /> after the orderby query has been applied to.</returns>
      <param name="query">The original <see cref="T:System.Linq.IQueryable" />.</param>
    </member>
    <member name="M:System.Web.OData.Query.OrderByQueryOption.ApplyTo(System.Linq.IQueryable,System.Web.OData.Query.ODataQuerySettings)">
      <summary>Apply the $orderby query to the given IQueryable.</summary>
      <returns>The new <see cref="T:System.Linq.IQueryable" /> after the orderby query has been applied to.</returns>
      <param name="query">The original <see cref="T:System.Linq.IQueryable" />.</param>
      <param name="querySettings">The <see cref="T:System.Web.OData.Query.ODataQuerySettings" /> that contains all the query application related settings.</param>
    </member>
    <member name="M:System.Web.OData.Query.OrderByQueryOption.ApplyTo``1(System.Linq.IQueryable{``0})">
      <summary>Apply the $orderby query to the given IQueryable.</summary>
      <returns>The new <see cref="T:System.Linq.IQueryable" /> after the orderby query has been applied to.</returns>
      <param name="query">The original <see cref="T:System.Linq.IQueryable" />.</param>
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.Web.OData.Query.OrderByQueryOption.ApplyTo``1(System.Linq.IQueryable{``0},System.Web.OData.Query.ODataQuerySettings)">
      <summary>Apply the $orderby query to the given IQueryable.</summary>
      <returns>The new <see cref="T:System.Linq.IQueryable" /> after the orderby query has been applied to.</returns>
      <param name="query">The original <see cref="T:System.Linq.IQueryable" />.</param>
      <param name="querySettings">The <see cref="T:System.Web.OData.Query.ODataQuerySettings" /> that contains all the query application related settings.</param>
      <typeparam name="T"></typeparam>
    </member>
    <member name="P:System.Web.OData.Query.OrderByQueryOption.Context">
      <summary>Gets the given <see cref="T:System.Web.OData.ODataQueryContext" />.</summary>
    </member>
    <member name="P:System.Web.OData.Query.OrderByQueryOption.OrderByClause">
      <summary>Gets the parsed <see cref="P:System.Web.OData.Query.OrderByQueryOption.OrderByClause" /> for this query option.</summary>
    </member>
    <member name="P:System.Web.OData.Query.OrderByQueryOption.OrderByNodes">
      <summary>Gets the mutable list of <see cref="T:System.Web.OData.Query.OrderByPropertyNode" /> instances for this query option.</summary>
    </member>
    <member name="P:System.Web.OData.Query.OrderByQueryOption.RawValue">
      <summary>Gets the raw $orderby value.</summary>
    </member>
    <member name="M:System.Web.OData.Query.OrderByQueryOption.Validate(System.Web.OData.Query.ODataValidationSettings)">
      <summary>Validate the orderby query based on the given <paramref name="validationSettings" />. It throws an ODataException if validation failed.</summary>
      <param name="validationSettings">The <see cref="T:System.Web.OData.Query.ODataValidationSettings" /> instance which contains all the validation settings.</param>
    </member>
    <member name="P:System.Web.OData.Query.OrderByQueryOption.Validator">
      <summary>Gets or sets the OrderBy Query Validator.</summary>
    </member>
    <member name="T:System.Web.OData.Query.ParameterAliasNodeTranslator">
      <summary>This defines a translator to tranlate parameter alias nodes.</summary>
    </member>
    <member name="M:System.Web.OData.Query.ParameterAliasNodeTranslator.#ctor(System.Collections.Generic.IDictionary{System.String,Microsoft.OData.Core.UriParser.Semantic.SingleValueNode})">
      <summary>Initialize a new instance of <see cref="T:System.Web.OData.Query.ParameterAliasNodeTranslator" />.</summary>
      <param name="parameterAliasNodes">Parameter alias nodes mapping.</param>
    </member>
    <member name="M:System.Web.OData.Query.ParameterAliasNodeTranslator.Visit(Microsoft.OData.Core.UriParser.Semantic.AllNode)">
      <summary>Translate an AllNode.</summary>
      <returns>The translated node.</returns>
      <param name="nodeIn">The node to be translated.</param>
    </member>
    <member name="M:System.Web.OData.Query.ParameterAliasNodeTranslator.Visit(Microsoft.OData.Core.UriParser.Semantic.AnyNode)">
      <summary>Translate an AnyNode.</summary>
      <returns>The translated node.</returns>
      <param name="nodeIn">The node to be translated.</param>
    </member>
    <member name="M:System.Web.OData.Query.ParameterAliasNodeTranslator.Visit(Microsoft.OData.Core.UriParser.Semantic.BinaryOperatorNode)">
      <summary>Translate a BinaryOperatorNode.</summary>
      <returns>The translated node.</returns>
      <param name="nodeIn">The node to be translated.</param>
    </member>
    <member name="M:System.Web.OData.Query.ParameterAliasNodeTranslator.Visit(Microsoft.OData.Core.UriParser.Semantic.CollectionFunctionCallNode)">
      <summary>Translate a CollectionFunctionCallNode.</summary>
      <returns>The translated node.</returns>
      <param name="nodeIn">The node to be translated.</param>
    </member>
    <member name="M:System.Web.OData.Query.ParameterAliasNodeTranslator.Visit(Microsoft.OData.Core.UriParser.Semantic.CollectionNavigationNode)">
      <summary>Translate a CollectionNavigationNode.</summary>
      <returns>The translated node.</returns>
      <param name="nodeIn">The node to be translated.</param>
    </member>
    <member name="M:System.Web.OData.Query.ParameterAliasNodeTranslator.Visit(Microsoft.OData.Core.UriParser.Semantic.CollectionOpenPropertyAccessNode)">
      <summary>Translate a CollectionOpenPropertyAccessNode.</summary>
      <returns>The translated node.</returns>
      <param name="nodeIn">The node to be translated.</param>
    </member>
    <member name="M:System.Web.OData.Query.ParameterAliasNodeTranslator.Visit(Microsoft.OData.Core.UriParser.Semantic.CollectionPropertyAccessNode)">
      <summary>Translate a CollectionPropertyAccessNode.</summary>
      <returns>The translated node.</returns>
      <param name="nodeIn">The node to be translated.</param>
    </member>
    <member name="M:System.Web.OData.Query.ParameterAliasNodeTranslator.Visit(Microsoft.OData.Core.UriParser.Semantic.CollectionPropertyCastNode)">
      <summary>Translate a CollectionPropertyCastNode.</summary>
      <returns>The translated node.</returns>
      <param name="nodeIn">The node to be translated.</param>
    </member>
    <member name="M:System.Web.OData.Query.ParameterAliasNodeTranslator.Visit(Microsoft.OData.Core.UriParser.Semantic.ConstantNode)">
      <summary>Translate a ConstantNode.</summary>
      <returns>The original node.</returns>
      <param name="nodeIn">The node to be translated.</param>
    </member>
    <member name="M:System.Web.OData.Query.ParameterAliasNodeTranslator.Visit(Microsoft.OData.Core.UriParser.Semantic.ConvertNode)">
      <summary>Translate a ConvertNode.</summary>
      <returns>The translated node.</returns>
      <param name="nodeIn">The node to be translated.</param>
    </member>
    <member name="M:System.Web.OData.Query.ParameterAliasNodeTranslator.Visit(Microsoft.OData.Core.UriParser.Semantic.EntityCollectionCastNode)">
      <summary>Translate an EntityCollectionCastNode.</summary>
      <returns>The translated node.</returns>
      <param name="nodeIn">The node to be translated.</param>
    </member>
    <member name="M:System.Web.OData.Query.ParameterAliasNodeTranslator.Visit(Microsoft.OData.Core.UriParser.Semantic.EntityCollectionFunctionCallNode)">
      <summary>Translate an EntityCollectionFunctionCallNode.</summary>
      <returns>The translated node.</returns>
      <param name="nodeIn">The node to be translated.</param>
    </member>
    <member name="M:System.Web.OData.Query.ParameterAliasNodeTranslator.Visit(Microsoft.OData.Core.UriParser.Semantic.EntityRangeVariableReferenceNode)">
      <summary>Translate an EntityRangeVariableReferenceNode.</summary>
      <returns>The original node.</returns>
      <param name="nodeIn">The node to be translated.</param>
    </member>
    <member name="M:System.Web.OData.Query.ParameterAliasNodeTranslator.Visit(Microsoft.OData.Core.UriParser.Semantic.NamedFunctionParameterNode)">
      <summary>Translate a NamedFunctionParameterNode.</summary>
      <returns>The translated node.</returns>
      <param name="nodeIn">The node to be translated.</param>
    </member>
    <member name="M:System.Web.OData.Query.ParameterAliasNodeTranslator.Visit(Microsoft.OData.Core.UriParser.Semantic.NonentityRangeVariableReferenceNode)">
      <summary>Translate a NonentityRangeVariableReferenceNode.</summary>
      <returns>The original node.</returns>
      <param name="nodeIn">The node to be translated.</param>
    </member>
    <member name="M:System.Web.OData.Query.ParameterAliasNodeTranslator.Visit(Microsoft.OData.Core.UriParser.Semantic.ParameterAliasNode)">
      <summary>Translate a ParameterAliasNode.</summary>
      <returns>The translated node.</returns>
      <param name="nodeIn">The node to be translated.</param>
    </member>
    <member name="M:System.Web.OData.Query.ParameterAliasNodeTranslator.Visit(Microsoft.OData.Core.UriParser.Semantic.SearchTermNode)">
      <summary>Translate a SearchTermNode.</summary>
      <returns>The original node.</returns>
      <param name="nodeIn">The node to be translated.</param>
    </member>
    <member name="M:System.Web.OData.Query.ParameterAliasNodeTranslator.Visit(Microsoft.OData.Core.UriParser.Semantic.SingleEntityCastNode)">
      <summary>Translate a SingleEntityCastNode.</summary>
      <returns>The translated node.</returns>
      <param name="nodeIn">The node to be translated.</param>
    </member>
    <member name="M:System.Web.OData.Query.ParameterAliasNodeTranslator.Visit(Microsoft.OData.Core.UriParser.Semantic.SingleEntityFunctionCallNode)">
      <summary>Translate a SingleEntityFunctionCallNode.</summary>
      <returns>The translated node.</returns>
      <param name="nodeIn">The node to be translated.</param>
    </member>
    <member name="M:System.Web.OData.Query.ParameterAliasNodeTranslator.Visit(Microsoft.OData.Core.UriParser.Semantic.SingleNavigationNode)">
      <summary>Translate a SingleNavigationNode.</summary>
      <returns>The translated node.</returns>
      <param name="nodeIn">The node to be translated.</param>
    </member>
    <member name="M:System.Web.OData.Query.ParameterAliasNodeTranslator.Visit(Microsoft.OData.Core.UriParser.Semantic.SingleValueCastNode)">
      <summary>Translate a SingleValueCastNode.</summary>
      <returns>The translated node.</returns>
      <param name="nodeIn">The node to be translated.</param>
    </member>
    <member name="M:System.Web.OData.Query.ParameterAliasNodeTranslator.Visit(Microsoft.OData.Core.UriParser.Semantic.SingleValueFunctionCallNode)">
      <summary>Translate a SingleValueFunctionCallNode.</summary>
      <returns>The translated node.</returns>
      <param name="nodeIn">The node to be translated.</param>
    </member>
    <member name="M:System.Web.OData.Query.ParameterAliasNodeTranslator.Visit(Microsoft.OData.Core.UriParser.Semantic.SingleValueOpenPropertyAccessNode)">
      <summary>Translate a SingleValueOpenPropertyAccessNode.</summary>
      <returns>The translated node.</returns>
      <param name="nodeIn">The node to be translated.</param>
    </member>
    <member name="M:System.Web.OData.Query.ParameterAliasNodeTranslator.Visit(Microsoft.OData.Core.UriParser.Semantic.SingleValuePropertyAccessNode)">
      <summary>Translate a SingleValuePropertyAccessNode.</summary>
      <returns>The translated node.</returns>
      <param name="nodeIn">The node to be translated.</param>
    </member>
    <member name="M:System.Web.OData.Query.ParameterAliasNodeTranslator.Visit(Microsoft.OData.Core.UriParser.Semantic.UnaryOperatorNode)">
      <summary>Translate an UnaryOperatorNode.</summary>
      <returns>The translated node.</returns>
      <param name="nodeIn">The node to be translated.</param>
    </member>
    <member name="T:System.Web.OData.Query.QueryFilterProvider">
      <summary>An implementation of <see cref="T:System.Web.Http.Filters.IFilterProvider" /> that applies an action filter to any action with an <see cref="T:System.Linq.IQueryable" /> or <see cref="T:System.Linq.IQueryable`1" /> return type that doesn't bind a parameter of type <see cref="T:System.Web.OData.Query.ODataQueryOptions" />.</summary>
    </member>
    <member name="M:System.Web.OData.Query.QueryFilterProvider.#ctor(System.Web.Http.Filters.IActionFilter)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Query.QueryFilterProvider" /> class.</summary>
      <param name="queryFilter">The action filter that executes the query.</param>
    </member>
    <member name="M:System.Web.OData.Query.QueryFilterProvider.GetFilters(System.Web.Http.HttpConfiguration,System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary>Provides filters to apply to the specified action.</summary>
      <returns>The filters to apply to the specified action.</returns>
      <param name="configuration">The server configuration.</param>
      <param name="actionDescriptor">The action descriptor for the action to provide filters for.</param>
    </member>
    <member name="P:System.Web.OData.Query.QueryFilterProvider.QueryFilter">
      <summary>Gets the action filter that executes the query.</summary>
    </member>
    <member name="T:System.Web.OData.Query.SelectExpandQueryOption">
      <summary>Represents the OData $select and $expand query options.</summary>
    </member>
    <member name="M:System.Web.OData.Query.SelectExpandQueryOption.#ctor(System.String,System.String,System.Web.OData.ODataQueryContext,Microsoft.OData.Core.UriParser.ODataQueryOptionParser)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Query.SelectExpandQueryOption" /> class.</summary>
      <param name="select">The $select query parameter value.</param>
      <param name="expand">The $select query parameter value.</param>
      <param name="context">The <see cref="T:System.Web.OData.ODataQueryContext" /> which contains the <see cref="T:Microsoft.OData.Edm.IEdmModel" /> and some type information.</param>
      <param name="queryOptionParser">The <see cref="T:Microsoft.OData.Core.UriParser.ODataQueryOptionParser" /> which is used to parse the query option.</param>
    </member>
    <member name="M:System.Web.OData.Query.SelectExpandQueryOption.ApplyTo(System.Linq.IQueryable,System.Web.OData.Query.ODataQuerySettings)">
      <summary>Applies the $select and $expand query options to the given <see cref="T:System.Linq.IQueryable" /> using the given <see cref="T:System.Web.OData.Query.ODataQuerySettings" />.</summary>
      <returns>The new <see cref="T:System.Linq.IQueryable" /> after the filter query has been applied to.</returns>
      <param name="queryable">The original <see cref="T:System.Linq.IQueryable" />.</param>
      <param name="settings">The <see cref="T:System.Web.OData.Query.ODataQuerySettings" /> that contains all the query application related settings.</param>
    </member>
    <member name="M:System.Web.OData.Query.SelectExpandQueryOption.ApplyTo(System.Object,System.Web.OData.Query.ODataQuerySettings)">
      <summary>Applies the $select and $expand query options to the given entity using the given <see cref="T:System.Web.OData.Query.ODataQuerySettings" />.</summary>
      <returns>The new entity after the $select and $expand query has been applied to.</returns>
      <param name="entity">The original entity.</param>
      <param name="settings">The <see cref="T:System.Web.OData.Query.ODataQuerySettings" /> that contains all the query application related settings.</param>
    </member>
    <member name="P:System.Web.OData.Query.SelectExpandQueryOption.Context">
      <summary>Gets the given <see cref="T:System.Web.OData.ODataQueryContext" />.</summary>
    </member>
    <member name="P:System.Web.OData.Query.SelectExpandQueryOption.LevelsMaxLiteralExpansionDepth">
      <summary>Gets or sets the number of levels that a top level $expand=NavigationProperty($levels=max) will be expanded. This value will decrease by one with each nesting level in the $expand clause. For example, with a property value 5, the following query $expand=A($expand=B($expand=C($levels=max))) will be interpreted as $expand=A($expand=B($expand=C($levels=3))). If the query gets validated, the MaxExpansionDepth value must be greater than or equal to this value.</summary>
    </member>
    <member name="P:System.Web.OData.Query.SelectExpandQueryOption.RawExpand">
      <summary>Gets the raw $expand value.</summary>
    </member>
    <member name="P:System.Web.OData.Query.SelectExpandQueryOption.RawSelect">
      <summary>Gets the raw $select value.</summary>
    </member>
    <member name="P:System.Web.OData.Query.SelectExpandQueryOption.SelectExpandClause">
      <summary>Gets the parsed <see cref="P:System.Web.OData.Query.SelectExpandQueryOption.SelectExpandClause" /> for this query option.</summary>
    </member>
    <member name="M:System.Web.OData.Query.SelectExpandQueryOption.Validate(System.Web.OData.Query.ODataValidationSettings)">
      <summary>Validate the $select and $expand query based on the given <paramref name="validationSettings" />. It throws an ODataException if validation failed.</summary>
      <param name="validationSettings">The <see cref="T:System.Web.OData.Query.ODataValidationSettings" /> instance which contains all the validation settings.</param>
    </member>
    <member name="P:System.Web.OData.Query.SelectExpandQueryOption.Validator">
      <summary>Gets or sets the $select and $expand query validator.</summary>
    </member>
    <member name="T:System.Web.OData.Query.SkipQueryOption">
      <summary>This defines a $skip OData query option for querying.</summary>
    </member>
    <member name="M:System.Web.OData.Query.SkipQueryOption.#ctor(System.String,System.Web.OData.ODataQueryContext,Microsoft.OData.Core.UriParser.ODataQueryOptionParser)">
      <summary>Initialize a new instance of <see cref="T:System.Web.OData.Query.SkipQueryOption" /> based on the raw $skip value and an EdmModel from <see cref="T:System.Web.OData.ODataQueryContext" />.</summary>
      <param name="rawValue">The raw value for $skip query. It can be null or empty.</param>
      <param name="context">The <see cref="T:System.Web.OData.ODataQueryContext" /> which contains the <see cref="T:Microsoft.OData.Edm.IEdmModel" /> and some type information</param>
      <param name="queryOptionParser">The <see cref="T:Microsoft.OData.Core.UriParser.ODataQueryOptionParser" /> which is used to parse the query option.</param>
    </member>
    <member name="M:System.Web.OData.Query.SkipQueryOption.ApplyTo(System.Linq.IQueryable,System.Web.OData.Query.ODataQuerySettings)">
      <summary>Apply the $skip query to the given IQueryable.</summary>
      <returns>The new <see cref="T:System.Linq.IQueryable" /> after the skip query has been applied to.</returns>
      <param name="query">The original <see cref="T:System.Linq.IQueryable" />.</param>
      <param name="querySettings">The query settings to use while applying this query option.</param>
    </member>
    <member name="M:System.Web.OData.Query.SkipQueryOption.ApplyTo``1(System.Linq.IQueryable{``0},System.Web.OData.Query.ODataQuerySettings)">
      <summary>Apply the $skip query to the given IQueryable.</summary>
      <returns>The new <see cref="T:System.Linq.IQueryable" /> after the skip query has been applied to.</returns>
      <param name="query">The original <see cref="T:System.Linq.IQueryable" />.</param>
      <param name="querySettings">The query settings to use while applying this query option.</param>
      <typeparam name="T"></typeparam>
    </member>
    <member name="P:System.Web.OData.Query.SkipQueryOption.Context">
      <summary>Gets the given <see cref="T:System.Web.OData.ODataQueryContext" />.</summary>
    </member>
    <member name="P:System.Web.OData.Query.SkipQueryOption.RawValue">
      <summary>Gets the raw $skip value.</summary>
    </member>
    <member name="M:System.Web.OData.Query.SkipQueryOption.Validate(System.Web.OData.Query.ODataValidationSettings)">
      <summary>Validate the skip query based on the given <paramref name="validationSettings" />. It throws an ODataException if validation failed.</summary>
      <param name="validationSettings">The <see cref="T:System.Web.OData.Query.ODataValidationSettings" /> instance which contains all the validation settings.</param>
    </member>
    <member name="P:System.Web.OData.Query.SkipQueryOption.Validator">
      <summary>Gets or sets the Skip Query Validator.</summary>
    </member>
    <member name="P:System.Web.OData.Query.SkipQueryOption.Value">
      <summary>Gets the value of the $skip as a parsed integer.</summary>
    </member>
    <member name="T:System.Web.OData.Query.TopQueryOption">
      <summary>This defines a $top OData query option for querying.</summary>
    </member>
    <member name="M:System.Web.OData.Query.TopQueryOption.#ctor(System.String,System.Web.OData.ODataQueryContext,Microsoft.OData.Core.UriParser.ODataQueryOptionParser)">
      <summary>Initialize a new instance of <see cref="T:System.Web.OData.Query.TopQueryOption" /> based on the raw $top value and an EdmModel from <see cref="T:System.Web.OData.ODataQueryContext" />.</summary>
      <param name="rawValue">The raw value for $top query. It can be null or empty.</param>
      <param name="context">The <see cref="T:System.Web.OData.ODataQueryContext" /> which contains the <see cref="T:Microsoft.OData.Edm.IEdmModel" /> and some type information</param>
      <param name="queryOptionParser">The <see cref="T:Microsoft.OData.Core.UriParser.ODataQueryOptionParser" /> which is used to parse the query option.</param>
    </member>
    <member name="M:System.Web.OData.Query.TopQueryOption.ApplyTo(System.Linq.IQueryable,System.Web.OData.Query.ODataQuerySettings)">
      <summary>Apply the $top query to the given IQueryable.</summary>
      <returns>The new <see cref="T:System.Linq.IQueryable" /> after the top query has been applied to.</returns>
      <param name="query">The original <see cref="T:System.Linq.IQueryable" />.</param>
      <param name="querySettings">The query settings to use while applying this query option.</param>
    </member>
    <member name="M:System.Web.OData.Query.TopQueryOption.ApplyTo``1(System.Linq.IQueryable{``0},System.Web.OData.Query.ODataQuerySettings)">
      <summary>Apply the $top query to the given IQueryable.</summary>
      <returns>The new <see cref="T:System.Linq.IQueryable" /> after the top query has been applied to.</returns>
      <param name="query">The original <see cref="T:System.Linq.IQueryable" />.</param>
      <param name="querySettings">The query settings to use while applying this query option.</param>
      <typeparam name="T"></typeparam>
    </member>
    <member name="P:System.Web.OData.Query.TopQueryOption.Context">
      <summary>Gets the given <see cref="T:System.Web.OData.ODataQueryContext" />.</summary>
    </member>
    <member name="P:System.Web.OData.Query.TopQueryOption.RawValue">
      <summary>Gets the raw $top value.</summary>
    </member>
    <member name="M:System.Web.OData.Query.TopQueryOption.Validate(System.Web.OData.Query.ODataValidationSettings)">
      <summary>Validate the top query based on the given <paramref name="validationSettings" />. It throws an ODataException if validation failed.</summary>
      <param name="validationSettings">The <see cref="T:System.Web.OData.Query.ODataValidationSettings" /> instance which contains all the validation settings.</param>
    </member>
    <member name="P:System.Web.OData.Query.TopQueryOption.Validator">
      <summary>Gets or sets the Top Query Validator.</summary>
    </member>
    <member name="P:System.Web.OData.Query.TopQueryOption.Value">
      <summary>Gets the value of the $top as a parsed integer.</summary>
    </member>
    <member name="T:System.Web.OData.Query.TruncatedCollection`1">
      <summary>Represents a class that truncates a collection to a given page size.</summary>
      <typeparam name="T">The collection element type.</typeparam>
    </member>
    <member name="M:System.Web.OData.Query.TruncatedCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Query.TruncatedCollection`1" /> class.</summary>
      <param name="source">The collection to be truncated.</param>
      <param name="pageSize">The page size.</param>
    </member>
    <member name="M:System.Web.OData.Query.TruncatedCollection`1.#ctor(System.Linq.IQueryable{`0},System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Query.TruncatedCollection`1" /> class.</summary>
      <param name="source">The queryable collection to be truncated.</param>
      <param name="pageSize">The page size.</param>
    </member>
    <member name="P:System.Web.OData.Query.TruncatedCollection`1.IsTruncated"></member>
    <member name="P:System.Web.OData.Query.TruncatedCollection`1.PageSize"></member>
    <member name="T:System.Web.OData.Query.UnsortableAttribute">
      <summary>Represents an <see cref="T:System.Attribute" /> that can be placed on a property to specify that the property cannot be used in the $orderby OData query option.</summary>
    </member>
    <member name="M:System.Web.OData.Query.UnsortableAttribute.#ctor"></member>
    <member name="T:System.Web.OData.Query.Validators.CountQueryValidator">
      <summary>Represents a validator used to validate a <see cref="T:System.Web.OData.Query.CountQueryOption" /> based on the <see cref="T:System.Web.OData.Query.ODataValidationSettings" />.</summary>
    </member>
    <member name="M:System.Web.OData.Query.Validators.CountQueryValidator.#ctor"></member>
    <member name="M:System.Web.OData.Query.Validators.CountQueryValidator.Validate(System.Web.OData.Query.CountQueryOption,System.Web.OData.Query.ODataValidationSettings)">
      <summary>Validates a <see cref="T:System.Web.OData.Query.CountQueryOption" />.</summary>
      <param name="countQueryOption">The $count query.</param>
      <param name="validationSettings">The validation settings.</param>
    </member>
    <member name="T:System.Web.OData.Query.Validators.FilterQueryValidator">
      <summary>Represents a validator used to validate a <see cref="T:System.Web.OData.Query.FilterQueryOption" /> based on the <see cref="T:System.Web.OData.Query.ODataValidationSettings" />.</summary>
    </member>
    <member name="M:System.Web.OData.Query.Validators.FilterQueryValidator.#ctor"></member>
    <member name="M:System.Web.OData.Query.Validators.FilterQueryValidator.Validate(System.Web.OData.Query.FilterQueryOption,System.Web.OData.Query.ODataValidationSettings)">
      <summary>Validates a <see cref="T:System.Web.OData.Query.FilterQueryOption" />.</summary>
      <param name="filterQueryOption">The $filter query.</param>
      <param name="settings">The validation settings.</param>
    </member>
    <member name="M:System.Web.OData.Query.Validators.FilterQueryValidator.ValidateAllNode(Microsoft.OData.Core.UriParser.Semantic.AllNode,System.Web.OData.Query.ODataValidationSettings)">
      <summary>Override this method to restrict the 'all' query inside the filter query.</summary>
    </member>
    <member name="M:System.Web.OData.Query.Validators.FilterQueryValidator.ValidateAnyNode(Microsoft.OData.Core.UriParser.Semantic.AnyNode,System.Web.OData.Query.ODataValidationSettings)">
      <summary>Override this method to restrict the 'any' query inside the filter query.</summary>
    </member>
    <member name="M:System.Web.OData.Query.Validators.FilterQueryValidator.ValidateArithmeticOperator(Microsoft.OData.Core.UriParser.Semantic.BinaryOperatorNode,System.Web.OData.Query.ODataValidationSettings)">
      <summary>Override this method for the Arithmetic operators, including add, sub, mul, div, mod.</summary>
    </member>
    <member name="M:System.Web.OData.Query.Validators.FilterQueryValidator.ValidateBinaryOperatorNode(Microsoft.OData.Core.UriParser.Semantic.BinaryOperatorNode,System.Web.OData.Query.ODataValidationSettings)">
      <summary>override this method to restrict the binary operators inside the filter query. That includes all the logical operators except 'not' and all math operators.</summary>
    </member>
    <member name="M:System.Web.OData.Query.Validators.FilterQueryValidator.ValidateCollectionPropertyAccessNode(Microsoft.OData.Core.UriParser.Semantic.CollectionPropertyAccessNode,System.Web.OData.Query.ODataValidationSettings)">
      <summary>Override this method to validate collection property accessor.</summary>
    </member>
    <member name="M:System.Web.OData.Query.Validators.FilterQueryValidator.ValidateConstantNode(Microsoft.OData.Core.UriParser.Semantic.ConstantNode,System.Web.OData.Query.ODataValidationSettings)">
      <summary>Override this method to restrict the 'constant' inside the filter query.</summary>
    </member>
    <member name="M:System.Web.OData.Query.Validators.FilterQueryValidator.ValidateConvertNode(Microsoft.OData.Core.UriParser.Semantic.ConvertNode,System.Web.OData.Query.ODataValidationSettings)">
      <summary>Override this method to restrict the 'cast' inside the filter query.</summary>
    </member>
    <member name="M:System.Web.OData.Query.Validators.FilterQueryValidator.ValidateEntityCollectionCastNode(Microsoft.OData.Core.UriParser.Semantic.EntityCollectionCastNode,System.Web.OData.Query.ODataValidationSettings)">
      <summary>Override this method if you want to validate casts on entity collections.</summary>
    </member>
    <member name="M:System.Web.OData.Query.Validators.FilterQueryValidator.ValidateLogicalOperator(Microsoft.OData.Core.UriParser.Semantic.BinaryOperatorNode,System.Web.OData.Query.ODataValidationSettings)">
      <summary>Override this method to validate the LogicalOperators such as 'eq', 'ne', 'gt', 'ge', 'lt', 'le', 'and', 'or'. Please note that 'not' is not included here. Please override ValidateUnaryOperatorNode to customize 'not'.</summary>
    </member>
    <member name="M:System.Web.OData.Query.Validators.FilterQueryValidator.ValidateNavigationPropertyNode(Microsoft.OData.Core.UriParser.Semantic.QueryNode,Microsoft.OData.Edm.IEdmNavigationProperty,System.Web.OData.Query.ODataValidationSettings)">
      <summary>Override this method for the navigation property node.</summary>
    </member>
    <member name="M:System.Web.OData.Query.Validators.FilterQueryValidator.ValidateQueryNode(Microsoft.OData.Core.UriParser.Semantic.QueryNode,System.Web.OData.Query.ODataValidationSettings)">
      <summary>Override this method if you want to visit each query node.</summary>
    </member>
    <member name="M:System.Web.OData.Query.Validators.FilterQueryValidator.ValidateRangeVariable(Microsoft.OData.Core.UriParser.Semantic.RangeVariable,System.Web.OData.Query.ODataValidationSettings)">
      <summary>Override this method to validate the parameter used in the filter query.</summary>
    </member>
    <member name="M:System.Web.OData.Query.Validators.FilterQueryValidator.ValidateSingleEntityCastNode(Microsoft.OData.Core.UriParser.Semantic.SingleEntityCastNode,System.Web.OData.Query.ODataValidationSettings)">
      <summary>Override this method if you want to validate casts on single entities.</summary>
    </member>
    <member name="M:System.Web.OData.Query.Validators.FilterQueryValidator.ValidateSingleValueFunctionCallNode(Microsoft.OData.Core.UriParser.Semantic.SingleValueFunctionCallNode,System.Web.OData.Query.ODataValidationSettings)">
      <summary>Override this method to validate Function calls, such as 'length', 'years', etc.</summary>
    </member>
    <member name="M:System.Web.OData.Query.Validators.FilterQueryValidator.ValidateSingleValuePropertyAccessNode(Microsoft.OData.Core.UriParser.Semantic.SingleValuePropertyAccessNode,System.Web.OData.Query.ODataValidationSettings)">
      <summary>Override this method to validate property accessor.</summary>
    </member>
    <member name="M:System.Web.OData.Query.Validators.FilterQueryValidator.ValidateUnaryOperatorNode(Microsoft.OData.Core.UriParser.Semantic.UnaryOperatorNode,System.Web.OData.Query.ODataValidationSettings)">
      <summary>Override this method to validate the Not operator.</summary>
    </member>
    <member name="T:System.Web.OData.Query.Validators.ODataQueryValidator">
      <summary>Represents a validator used to validate OData queries based on the <see cref="T:System.Web.OData.Query.ODataValidationSettings" />.</summary>
    </member>
    <member name="M:System.Web.OData.Query.Validators.ODataQueryValidator.#ctor"></member>
    <member name="M:System.Web.OData.Query.Validators.ODataQueryValidator.Validate(System.Web.OData.Query.ODataQueryOptions,System.Web.OData.Query.ODataValidationSettings)">
      <summary>Validates the OData query.</summary>
      <param name="options">The OData query to validate.</param>
      <param name="validationSettings">The validation settings.</param>
    </member>
    <member name="T:System.Web.OData.Query.Validators.OrderByQueryValidator">
      <summary>Represents a validator used to validate an <see cref="T:System.Web.OData.Query.OrderByQueryOption" /> based on the <see cref="T:System.Web.OData.Query.ODataValidationSettings" />.</summary>
    </member>
    <member name="M:System.Web.OData.Query.Validators.OrderByQueryValidator.#ctor"></member>
    <member name="M:System.Web.OData.Query.Validators.OrderByQueryValidator.Validate(System.Web.OData.Query.OrderByQueryOption,System.Web.OData.Query.ODataValidationSettings)">
      <summary>Validates an <see cref="T:System.Web.OData.Query.OrderByQueryOption" />.</summary>
      <param name="orderByOption">The $orderby query.</param>
      <param name="validationSettings">The validation settings.</param>
    </member>
    <member name="T:System.Web.OData.Query.Validators.SelectExpandQueryValidator">
      <summary>Represents a validator used to validate a <see cref="T:System.Web.OData.Query.SelectExpandQueryOption" /> based on the <see cref="T:System.Web.OData.Query.ODataValidationSettings" />.</summary>
    </member>
    <member name="M:System.Web.OData.Query.Validators.SelectExpandQueryValidator.#ctor"></member>
    <member name="M:System.Web.OData.Query.Validators.SelectExpandQueryValidator.Validate(System.Web.OData.Query.SelectExpandQueryOption,System.Web.OData.Query.ODataValidationSettings)">
      <summary>Validates a <see cref="T:System.Web.OData.Query.TopQueryOption" />.</summary>
      <param name="selectExpandQueryOption">The $select and $expand query.</param>
      <param name="validationSettings">The validation settings.</param>
    </member>
    <member name="T:System.Web.OData.Query.Validators.SkipQueryValidator">
      <summary>Represents a validator used to validate a <see cref="T:System.Web.OData.Query.SkipQueryOption" /> based on the <see cref="T:System.Web.OData.Query.ODataValidationSettings" />.</summary>
    </member>
    <member name="M:System.Web.OData.Query.Validators.SkipQueryValidator.#ctor"></member>
    <member name="M:System.Web.OData.Query.Validators.SkipQueryValidator.Validate(System.Web.OData.Query.SkipQueryOption,System.Web.OData.Query.ODataValidationSettings)">
      <summary>Validates a <see cref="T:System.Web.OData.Query.SkipQueryOption" />.</summary>
      <param name="skipQueryOption">The $skip query.</param>
      <param name="validationSettings">The validation settings.</param>
    </member>
    <member name="T:System.Web.OData.Query.Validators.TopQueryValidator">
      <summary>Represents a validator used to validate a <see cref="T:System.Web.OData.Query.TopQueryOption" /> based on the <see cref="T:System.Web.OData.Query.ODataValidationSettings" />.</summary>
    </member>
    <member name="M:System.Web.OData.Query.Validators.TopQueryValidator.#ctor"></member>
    <member name="M:System.Web.OData.Query.Validators.TopQueryValidator.Validate(System.Web.OData.Query.TopQueryOption,System.Web.OData.Query.ODataValidationSettings)">
      <summary>Validates a <see cref="T:System.Web.OData.Query.TopQueryOption" />.</summary>
      <param name="topQueryOption">The $top query.</param>
      <param name="validationSettings">The validation settings.</param>
    </member>
    <member name="T:System.Web.OData.Results.CreatedODataResult`1">
      <summary>Represents an action result that is a response to a create operation that adds an entity to an entity set.</summary>
      <typeparam name="T">The entity type.</typeparam>
    </member>
    <member name="M:System.Web.OData.Results.CreatedODataResult`1.#ctor(`0,System.Net.Http.Formatting.IContentNegotiator,System.Net.Http.HttpRequestMessage,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter},System.Uri)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Results.CreatedODataResult`1" /> class.</summary>
      <param name="entity">The created entity.</param>
      <param name="contentNegotiator">The content negotiator to handle content negotiation.</param>
      <param name="request">The request message which led to this result.</param>
      <param name="formatters">The formatters to use to negotiate and format the content.</param>
      <param name="locationHeader">The location header for the created entity.</param>
    </member>
    <member name="M:System.Web.OData.Results.CreatedODataResult`1.#ctor(`0,System.Web.Http.ApiController)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Results.CreatedODataResult`1" /> class.</summary>
      <param name="entity">The created entity.</param>
      <param name="controller">The controller from which to obtain the dependencies needed for execution.</param>
    </member>
    <member name="P:System.Web.OData.Results.CreatedODataResult`1.ContentNegotiator">
      <summary>Gets the content negotiator to handle content negotiation.</summary>
    </member>
    <member name="P:System.Web.OData.Results.CreatedODataResult`1.Entity">
      <summary>Gets the entity that was created.</summary>
    </member>
    <member name="M:System.Web.OData.Results.CreatedODataResult`1.ExecuteAsync(System.Threading.CancellationToken)"></member>
    <member name="P:System.Web.OData.Results.CreatedODataResult`1.Formatters">
      <summary>Gets the formatters to use to negotiate and format the created entity.</summary>
    </member>
    <member name="P:System.Web.OData.Results.CreatedODataResult`1.LocationHeader">
      <summary>Gets the location header of the created entity.</summary>
    </member>
    <member name="P:System.Web.OData.Results.CreatedODataResult`1.Request">
      <summary>Gets the request message which led to this result.</summary>
    </member>
    <member name="T:System.Web.OData.Results.UpdatedODataResult`1">
      <summary>Represents an action result that is a response to a PUT, PATCH, or a MERGE operation on an OData entity.</summary>
      <typeparam name="T">The entity type.</typeparam>
    </member>
    <member name="M:System.Web.OData.Results.UpdatedODataResult`1.#ctor(`0,System.Net.Http.Formatting.IContentNegotiator,System.Net.Http.HttpRequestMessage,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Results.UpdatedODataResult`1" /> class.</summary>
      <param name="entity">The updated entity.</param>
      <param name="contentNegotiator">The content negotiator to handle content negotiation.</param>
      <param name="request">The request message which led to this result.</param>
      <param name="formatters">The formatters to use to negotiate and format the content.</param>
    </member>
    <member name="M:System.Web.OData.Results.UpdatedODataResult`1.#ctor(`0,System.Web.Http.ApiController)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Results.UpdatedODataResult`1" /> class.</summary>
      <param name="entity">The updated entity.</param>
      <param name="controller">The controller from which to obtain the dependencies needed for execution.</param>
    </member>
    <member name="P:System.Web.OData.Results.UpdatedODataResult`1.ContentNegotiator">
      <summary>Gets the content negotiator to handle content negotiation.</summary>
    </member>
    <member name="P:System.Web.OData.Results.UpdatedODataResult`1.Entity">
      <summary>Gets the entity that was updated.</summary>
    </member>
    <member name="M:System.Web.OData.Results.UpdatedODataResult`1.ExecuteAsync(System.Threading.CancellationToken)"></member>
    <member name="P:System.Web.OData.Results.UpdatedODataResult`1.Formatters">
      <summary>Gets the formatters to use to negotiate and format the content.</summary>
    </member>
    <member name="P:System.Web.OData.Results.UpdatedODataResult`1.Request">
      <summary>Gets the request message which led to this result.</summary>
    </member>
    <member name="T:System.Web.OData.Routing.BatchPathSegment">
      <summary>An <see cref="T:System.Web.OData.Routing.ODataPathSegment" /> implementation representing a $batch segment.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.BatchPathSegment.#ctor"></member>
    <member name="M:System.Web.OData.Routing.BatchPathSegment.GetEdmType(Microsoft.OData.Edm.IEdmType)">
      <summary>Gets the EDM type for this segment.</summary>
      <returns>The EDM type for this segment.</returns>
      <param name="previousEdmType">The EDM type of the previous path segment.</param>
    </member>
    <member name="M:System.Web.OData.Routing.BatchPathSegment.GetNavigationSource(Microsoft.OData.Edm.IEdmNavigationSource)"></member>
    <member name="P:System.Web.OData.Routing.BatchPathSegment.SegmentKind">
      <summary>Gets the segment kind for the current segment.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.BatchPathSegment.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents this instance.</summary>
      <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
    </member>
    <member name="M:System.Web.OData.Routing.BatchPathSegment.TryMatch(System.Web.OData.Routing.ODataPathSegment,System.Collections.Generic.IDictionary{System.String,System.Object})"></member>
    <member name="T:System.Web.OData.Routing.BoundActionPathSegment">
      <summary>An <see cref="T:System.Web.OData.Routing.ODataPathSegment" /> implementation representing a bound action invocation.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.BoundActionPathSegment.#ctor(Microsoft.OData.Edm.IEdmAction,Microsoft.OData.Edm.IEdmModel)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Routing.BoundActionPathSegment" /> class.</summary>
      <param name="action">The action being invoked.</param>
      <param name="model">The edm model containing the action.</param>
    </member>
    <member name="P:System.Web.OData.Routing.BoundActionPathSegment.Action">
      <summary>Gets the action being invoked.</summary>
    </member>
    <member name="P:System.Web.OData.Routing.BoundActionPathSegment.ActionName">
      <summary>Gets the name of the action.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.BoundActionPathSegment.GetEdmType(Microsoft.OData.Edm.IEdmType)"></member>
    <member name="M:System.Web.OData.Routing.BoundActionPathSegment.GetNavigationSource(Microsoft.OData.Edm.IEdmNavigationSource)"></member>
    <member name="P:System.Web.OData.Routing.BoundActionPathSegment.SegmentKind">
      <summary>Gets the segment kind for the current segment.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.BoundActionPathSegment.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents this instance.</summary>
      <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
    </member>
    <member name="M:System.Web.OData.Routing.BoundActionPathSegment.TryMatch(System.Web.OData.Routing.ODataPathSegment,System.Collections.Generic.IDictionary{System.String,System.Object})"></member>
    <member name="T:System.Web.OData.Routing.BoundFunctionPathSegment">
      <summary>An <see cref="T:System.Web.OData.Routing.ODataPathSegment" /> implementation representing a bound function invocation.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.BoundFunctionPathSegment.#ctor(Microsoft.OData.Edm.IEdmFunction,Microsoft.OData.Edm.IEdmModel,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Routing.BoundFunctionPathSegment" /> class.</summary>
      <param name="function">The function being invoked.</param>
      <param name="model">The edm model containing the function.</param>
      <param name="parameterValues">The raw parameter values indexed by the parameter names.</param>
    </member>
    <member name="P:System.Web.OData.Routing.BoundFunctionPathSegment.Function">
      <summary>Gets the function being invoked.</summary>
    </member>
    <member name="P:System.Web.OData.Routing.BoundFunctionPathSegment.FunctionName">
      <summary>Gets the name of the function.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.BoundFunctionPathSegment.GetEdmType(Microsoft.OData.Edm.IEdmType)"></member>
    <member name="M:System.Web.OData.Routing.BoundFunctionPathSegment.GetNavigationSource(Microsoft.OData.Edm.IEdmNavigationSource)"></member>
    <member name="M:System.Web.OData.Routing.BoundFunctionPathSegment.GetParameterValue(System.String)">
      <summary>Gets the parameter value.</summary>
      <returns>The value of the parameter.</returns>
      <param name="parameterName">The name of the parameter.</param>
    </member>
    <member name="P:System.Web.OData.Routing.BoundFunctionPathSegment.SegmentKind">
      <summary>Gets the segment kind for the current segment.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.BoundFunctionPathSegment.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents this instance.</summary>
      <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
    </member>
    <member name="M:System.Web.OData.Routing.BoundFunctionPathSegment.TryMatch(System.Web.OData.Routing.ODataPathSegment,System.Collections.Generic.IDictionary{System.String,System.Object})"></member>
    <member name="T:System.Web.OData.Routing.BoundFunctionPathSegmentTemplate">
      <summary>Represents a template that can match a <see cref="T:System.Web.OData.Routing.BoundFunctionPathSegment" />.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.BoundFunctionPathSegmentTemplate.#ctor(System.Web.OData.Routing.BoundFunctionPathSegment)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Routing.BoundFunctionPathSegmentTemplate" /> class.</summary>
      <param name="function">The function segment to be templatized</param>
    </member>
    <member name="P:System.Web.OData.Routing.BoundFunctionPathSegmentTemplate.FunctionName">
      <summary>Gets the name of the function.</summary>
    </member>
    <member name="P:System.Web.OData.Routing.BoundFunctionPathSegmentTemplate.ParameterMappings">
      <summary>Gets the dictionary representing the mappings from the parameter names in the current function segment to the parameter names in route data.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.BoundFunctionPathSegmentTemplate.TryMatch(System.Web.OData.Routing.ODataPathSegment,System.Collections.Generic.IDictionary{System.String,System.Object})"></member>
    <member name="T:System.Web.OData.Routing.CastPathSegment">
      <summary>An <see cref="T:System.Web.OData.Routing.ODataPathSegment" /> implementation representing a cast.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.CastPathSegment.#ctor(Microsoft.OData.Edm.IEdmEntityType)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Routing.CastPathSegment" /> class.</summary>
      <param name="castType">The type of the cast.</param>
    </member>
    <member name="M:System.Web.OData.Routing.CastPathSegment.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Routing.CastPathSegment" /> class.</summary>
      <param name="castTypeName">Name of the cast type.</param>
    </member>
    <member name="P:System.Web.OData.Routing.CastPathSegment.CastType">
      <summary>Gets the type of the cast.</summary>
    </member>
    <member name="P:System.Web.OData.Routing.CastPathSegment.CastTypeName">
      <summary>Gets the name of the cast type.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.CastPathSegment.GetEdmType(Microsoft.OData.Edm.IEdmType)">
      <summary>Gets the EDM type for this segment.</summary>
      <returns>The EDM type for this segment.</returns>
      <param name="previousEdmType">The EDM type of the previous path segment.</param>
    </member>
    <member name="M:System.Web.OData.Routing.CastPathSegment.GetNavigationSource(Microsoft.OData.Edm.IEdmNavigationSource)"></member>
    <member name="P:System.Web.OData.Routing.CastPathSegment.SegmentKind">
      <summary>Gets the segment kind for the current segment.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.CastPathSegment.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents this instance.</summary>
      <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
    </member>
    <member name="M:System.Web.OData.Routing.CastPathSegment.TryMatch(System.Web.OData.Routing.ODataPathSegment,System.Collections.Generic.IDictionary{System.String,System.Object})"></member>
    <member name="T:System.Web.OData.Routing.ComplexCastPathSegment">
      <summary>An <see cref="T:System.Web.OData.Routing.ODataPathSegment" /> implementation representing a complex type cast.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.ComplexCastPathSegment.#ctor(Microsoft.OData.Edm.IEdmComplexType)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Routing.ComplexCastPathSegment" /> class.</summary>
      <param name="castType">The type of the cast.</param>
    </member>
    <member name="M:System.Web.OData.Routing.ComplexCastPathSegment.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Routing.ComplexCastPathSegment" /> class.</summary>
      <param name="castTypeName">Name of the cast type.</param>
    </member>
    <member name="P:System.Web.OData.Routing.ComplexCastPathSegment.CastType">
      <summary>Gets the type of the cast.</summary>
    </member>
    <member name="P:System.Web.OData.Routing.ComplexCastPathSegment.CastTypeName">
      <summary>Gets the name of the cast type.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.ComplexCastPathSegment.GetEdmType(Microsoft.OData.Edm.IEdmType)">
      <summary>Gets the EDM type for this segment.</summary>
      <returns>The EDM type for this segment.</returns>
      <param name="previousEdmType">The EDM type of the previous path segment.</param>
    </member>
    <member name="M:System.Web.OData.Routing.ComplexCastPathSegment.GetNavigationSource(Microsoft.OData.Edm.IEdmNavigationSource)"></member>
    <member name="P:System.Web.OData.Routing.ComplexCastPathSegment.SegmentKind">
      <summary>Gets the segment kind for the current segment.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.ComplexCastPathSegment.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents this instance.</summary>
      <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
    </member>
    <member name="M:System.Web.OData.Routing.ComplexCastPathSegment.TryMatch(System.Web.OData.Routing.ODataPathSegment,System.Collections.Generic.IDictionary{System.String,System.Object})"></member>
    <member name="T:System.Web.OData.Routing.CountPathSegment">
      <summary>An <see cref="T:System.Web.OData.Routing.ODataPathSegment" /> implementation representing a $count segment.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.CountPathSegment.#ctor"></member>
    <member name="M:System.Web.OData.Routing.CountPathSegment.GetEdmType(Microsoft.OData.Edm.IEdmType)"></member>
    <member name="M:System.Web.OData.Routing.CountPathSegment.GetNavigationSource(Microsoft.OData.Edm.IEdmNavigationSource)"></member>
    <member name="P:System.Web.OData.Routing.CountPathSegment.SegmentKind">
      <summary>Gets the segment kind for the current segment.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.CountPathSegment.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents this instance.</summary>
      <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
    </member>
    <member name="M:System.Web.OData.Routing.CountPathSegment.TryMatch(System.Web.OData.Routing.ODataPathSegment,System.Collections.Generic.IDictionary{System.String,System.Object})"></member>
    <member name="T:System.Web.OData.Routing.DefaultODataPathHandler">
      <summary>Parses an OData path as an <see cref="T:System.Web.OData.Routing.ODataPath" /> and converts an <see cref="T:System.Web.OData.Routing.ODataPath" /> into an OData link.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.DefaultODataPathHandler.#ctor"></member>
    <member name="M:System.Web.OData.Routing.DefaultODataPathHandler.Link(System.Web.OData.Routing.ODataPath)">
      <summary>Converts an instance of <see cref="T:System.Web.OData.Routing.ODataPath" /> into an OData link.</summary>
      <returns>The generated OData link.</returns>
      <param name="path">The OData path to convert into a link.</param>
    </member>
    <member name="M:System.Web.OData.Routing.DefaultODataPathHandler.Parse(Microsoft.OData.Edm.IEdmModel,System.String,System.String)">
      <summary>Parses the specified OData path as an <see cref="T:System.Web.OData.Routing.ODataPath" /> that contains additional information about the EDM type and entity set for the path.</summary>
      <returns>A parsed representation of the path, or null if the path does not match the model.</returns>
      <param name="model">The model to use for path parsing.</param>
      <param name="serviceRoot">The service root of the OData path.</param>
      <param name="odataPath">The OData path to parse.</param>
    </member>
    <member name="M:System.Web.OData.Routing.DefaultODataPathHandler.ParseTemplate(Microsoft.OData.Edm.IEdmModel,System.String)">
      <summary>Parses the specified OData path template as an <see cref="T:System.Web.OData.Routing.ODataPathTemplate" /> that can be matched to an <see cref="T:System.Web.OData.Routing.ODataPath" />.</summary>
      <returns>A parsed representation of the path template, or null if the path does not match the model.</returns>
      <param name="model">The model to use for path parsing.</param>
      <param name="odataPathTemplate">The OData path template to parse.</param>
    </member>
    <member name="T:System.Web.OData.Routing.EntitySetPathSegment">
      <summary>An <see cref="T:System.Web.OData.Routing.ODataPathSegment" /> implementation representing an entity set.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.EntitySetPathSegment.#ctor(Microsoft.OData.Edm.IEdmEntitySetBase)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Routing.EntitySetPathSegment" /> class.</summary>
      <param name="entitySet">The entity set being accessed.</param>
    </member>
    <member name="M:System.Web.OData.Routing.EntitySetPathSegment.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Routing.EntitySetPathSegment" /> class.</summary>
      <param name="entitySetName">Name of the entity set.</param>
    </member>
    <member name="P:System.Web.OData.Routing.EntitySetPathSegment.EntitySetBase">
      <summary>Gets the entity set represented by this segment.</summary>
    </member>
    <member name="P:System.Web.OData.Routing.EntitySetPathSegment.EntitySetName">
      <summary>Gets the name of the entity set.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.EntitySetPathSegment.GetEdmType(Microsoft.OData.Edm.IEdmType)">
      <summary>Gets the EDM type for this segment.</summary>
      <returns>The EDM type for this segment.</returns>
      <param name="previousEdmType">The EDM type of the previous path segment.</param>
    </member>
    <member name="M:System.Web.OData.Routing.EntitySetPathSegment.GetNavigationSource(Microsoft.OData.Edm.IEdmNavigationSource)"></member>
    <member name="P:System.Web.OData.Routing.EntitySetPathSegment.SegmentKind">
      <summary>Gets the segment kind for the current segment.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.EntitySetPathSegment.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents this instance.</summary>
      <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
    </member>
    <member name="M:System.Web.OData.Routing.EntitySetPathSegment.TryMatch(System.Web.OData.Routing.ODataPathSegment,System.Collections.Generic.IDictionary{System.String,System.Object})"></member>
    <member name="T:System.Web.OData.Routing.IODataPathHandler">
      <summary>Exposes the ability to parse an OData path as an <see cref="T:System.Web.OData.Routing.ODataPath" /> and convert an <see cref="T:System.Web.OData.Routing.ODataPath" /> into an OData link.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.IODataPathHandler.Link(System.Web.OData.Routing.ODataPath)">
      <summary>Converts an instance of <see cref="T:System.Web.OData.Routing.ODataPath" /> into an OData link.</summary>
      <returns>The generated OData link.</returns>
      <param name="path">The OData path to convert into a link.</param>
    </member>
    <member name="M:System.Web.OData.Routing.IODataPathHandler.Parse(Microsoft.OData.Edm.IEdmModel,System.String,System.String)">
      <summary>Parses the specified OData path as an <see cref="T:System.Web.OData.Routing.ODataPath" /> that contains additional information about the EDM type and entity set for the path.</summary>
      <returns>A parsed representation of the URI, or null if the URI does not match the model.</returns>
      <param name="model">The model to use for path parsing.</param>
      <param name="serviceRoot">The service root of the OData path.</param>
      <param name="odataPath">The OData path to parse.</param>
    </member>
    <member name="T:System.Web.OData.Routing.IODataPathTemplateHandler">
      <summary>Exposes the ability to parse an OData path template as an <see cref="T:System.Web.OData.Routing.ODataPathTemplate" />.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.IODataPathTemplateHandler.ParseTemplate(Microsoft.OData.Edm.IEdmModel,System.String)">
      <summary>Parses the specified OData path template as an <see cref="T:System.Web.OData.Routing.ODataPathTemplate" />.</summary>
      <returns>A parsed representation of the template, or null if the template does not match the model.</returns>
      <param name="model">The model to use for path template parsing.</param>
      <param name="odataPathTemplate">The OData path template to parse.</param>
    </member>
    <member name="T:System.Web.OData.Routing.KeyValuePathSegment">
      <summary>An <see cref="T:System.Web.OData.Routing.ODataPathSegment" /> implementation representing an indexing into an entity collection by key.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.KeyValuePathSegment.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Routing.KeyValuePathSegment" /> class.</summary>
      <param name="value">The key value to use for indexing into the collection.</param>
    </member>
    <member name="M:System.Web.OData.Routing.KeyValuePathSegment.GetEdmType(Microsoft.OData.Edm.IEdmType)"></member>
    <member name="M:System.Web.OData.Routing.KeyValuePathSegment.GetNavigationSource(Microsoft.OData.Edm.IEdmNavigationSource)"></member>
    <member name="P:System.Web.OData.Routing.KeyValuePathSegment.SegmentKind">
      <summary>Gets the segment kind for the current segment.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.KeyValuePathSegment.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents this instance.</summary>
      <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
    </member>
    <member name="M:System.Web.OData.Routing.KeyValuePathSegment.TryMatch(System.Web.OData.Routing.ODataPathSegment,System.Collections.Generic.IDictionary{System.String,System.Object})"></member>
    <member name="P:System.Web.OData.Routing.KeyValuePathSegment.Value">
      <summary>The raw text of the path segment and the source of the Values collection.</summary>
    </member>
    <member name="T:System.Web.OData.Routing.KeyValuePathSegmentTemplate">
      <summary>Represents a template that can match a <see cref="T:System.Web.OData.Routing.KeyValuePathSegment" />.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.KeyValuePathSegmentTemplate.#ctor(System.Web.OData.Routing.KeyValuePathSegment)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Routing.KeyValuePathSegmentTemplate" /> class.</summary>
      <param name="keyValueSegment">The key value segment to be parsed as a template.</param>
    </member>
    <member name="P:System.Web.OData.Routing.KeyValuePathSegmentTemplate.ParameterMappings">
      <summary>Gets the dictionary representing the mappings from the key names in the segment to the key names in route data.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.KeyValuePathSegmentTemplate.TryMatch(System.Web.OData.Routing.ODataPathSegment,System.Collections.Generic.IDictionary{System.String,System.Object})"></member>
    <member name="T:System.Web.OData.Routing.MetadataPathSegment">
      <summary>An <see cref="T:System.Web.OData.Routing.ODataPathSegment" /> implementation representing a $metadata segment.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.MetadataPathSegment.#ctor"></member>
    <member name="M:System.Web.OData.Routing.MetadataPathSegment.GetEdmType(Microsoft.OData.Edm.IEdmType)">
      <summary>Gets the EDM type for this segment.</summary>
      <returns>The EDM type for this segment.</returns>
      <param name="previousEdmType">The EDM type of the previous path segment.</param>
    </member>
    <member name="M:System.Web.OData.Routing.MetadataPathSegment.GetNavigationSource(Microsoft.OData.Edm.IEdmNavigationSource)"></member>
    <member name="P:System.Web.OData.Routing.MetadataPathSegment.SegmentKind">
      <summary>Gets the segment kind for the current segment.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.MetadataPathSegment.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents this instance.</summary>
      <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
    </member>
    <member name="M:System.Web.OData.Routing.MetadataPathSegment.TryMatch(System.Web.OData.Routing.ODataPathSegment,System.Collections.Generic.IDictionary{System.String,System.Object})"></member>
    <member name="T:System.Web.OData.Routing.NavigationPathSegment">
      <summary>An <see cref="T:System.Web.OData.Routing.ODataPathSegment" /> implementation representing a navigation.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.NavigationPathSegment.#ctor(Microsoft.OData.Edm.IEdmNavigationProperty)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Routing.NavigationPathSegment" /> class.</summary>
      <param name="navigationProperty">The navigation property being accessed by this segment.</param>
    </member>
    <member name="M:System.Web.OData.Routing.NavigationPathSegment.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Routing.NavigationPathSegment" /> class.</summary>
      <param name="navigationPropertyName">Name of the navigation property.</param>
    </member>
    <member name="M:System.Web.OData.Routing.NavigationPathSegment.GetEdmType(Microsoft.OData.Edm.IEdmType)"></member>
    <member name="M:System.Web.OData.Routing.NavigationPathSegment.GetNavigationSource(Microsoft.OData.Edm.IEdmNavigationSource)"></member>
    <member name="P:System.Web.OData.Routing.NavigationPathSegment.NavigationProperty">
      <summary>Gets the navigation property being accessed by this segment.</summary>
    </member>
    <member name="P:System.Web.OData.Routing.NavigationPathSegment.NavigationPropertyName">
      <summary>Gets the name of the navigation property.</summary>
    </member>
    <member name="P:System.Web.OData.Routing.NavigationPathSegment.SegmentKind">
      <summary>Gets the segment kind for the current segment.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.NavigationPathSegment.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents this instance.</summary>
      <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
    </member>
    <member name="M:System.Web.OData.Routing.NavigationPathSegment.TryMatch(System.Web.OData.Routing.ODataPathSegment,System.Collections.Generic.IDictionary{System.String,System.Object})"></member>
    <member name="T:System.Web.OData.Routing.ODataActionSelector">
      <summary>An implementation of <see cref="T:System.Web.Controllers.IHttpActionSelector" /> that uses the server's OData routing conventions to select an action for OData requests.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.ODataActionSelector.#ctor(System.Web.Http.Controllers.IHttpActionSelector)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Routing.ODataActionSelector" /> class.</summary>
      <param name="innerSelector">The inner controller selector to call.</param>
    </member>
    <member name="M:System.Web.OData.Routing.ODataActionSelector.GetActionMapping(System.Web.Http.Controllers.HttpControllerDescriptor)">
      <summary>Returns a map, keyed by action string, of all <see cref="T:System.Web.ControllersActionDescriptor" /> that the selector can select. This is primarily called by <see cref="T:System.Web.Description.IApiExplorer" /> to discover all the possible actions in the controller.</summary>
      <returns>A map of <see cref="T:System.Web.ControllersActionDescriptor" /> that the selector can select, or null if the selector does not have a well-defined mapping of <see cref="T:System.Web.ControllersActionDescriptor" /> .</returns>
      <param name="controllerDescriptor">The controller descriptor.</param>
      <exception cref="T:System.NotImplementedException"></exception>
    </member>
    <member name="M:System.Web.OData.Routing.ODataActionSelector.SelectAction(System.Web.Http.Controllers.HttpControllerContext)">
      <summary>Selects an action for the <see cref="T:System.Web.Controllers.ApiControllerActionSelector" /> .</summary>
      <returns>The selected action.</returns>
      <param name="controllerContext">The controller context.</param>
    </member>
    <member name="T:System.Web.OData.Routing.ODataPath">
      <summary>Provides an object representation for an OData path with additional information about the EDM type and entity set for the path.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.ODataPath.#ctor(System.Collections.Generic.IList{System.Web.OData.Routing.ODataPathSegment})">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Routing.ODataPath" /> class.</summary>
      <param name="segments">The path segments for the path.</param>
    </member>
    <member name="M:System.Web.OData.Routing.ODataPath.#ctor(System.Web.OData.Routing.ODataPathSegment[])">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Routing.ODataPath" /> class.</summary>
      <param name="segments">The path segments for the path.</param>
    </member>
    <member name="P:System.Web.OData.Routing.ODataPath.EdmType">
      <summary>Gets or sets the EDM type of the path.</summary>
    </member>
    <member name="P:System.Web.OData.Routing.ODataPath.NavigationSource">
      <summary>Gets or sets the navigation source of the path.</summary>
    </member>
    <member name="P:System.Web.OData.Routing.ODataPath.PathTemplate">
      <summary>Gets the path template describing the types of segments in the path.</summary>
    </member>
    <member name="P:System.Web.OData.Routing.ODataPath.Segments">
      <summary>Gets the path segments for the OData path.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.ODataPath.ToString"></member>
    <member name="T:System.Web.OData.Routing.ODataPathParameterBindingAttribute">
      <summary>Implementation of <see cref="T:System.Web.Http.ParameterBindingAttribute" /> used to bind an instance of <see cref="T:System.Web.OData.Routing.ODataPath" /> as an action parameter.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.ODataPathParameterBindingAttribute.#ctor"></member>
    <member name="M:System.Web.OData.Routing.ODataPathParameterBindingAttribute.GetBinding(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>Gets the parameter binding.</summary>
      <returns>The parameter binding.</returns>
      <param name="parameter">The parameter description.</param>
    </member>
    <member name="T:System.Web.OData.Routing.ODataPathRouteConstraint">
      <summary>An implementation of <see cref="T:System.Web.Http.Routing.IHttpRouteConstraint" /> that only matches OData paths.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.ODataPathRouteConstraint.#ctor(System.Web.OData.Routing.IODataPathHandler,Microsoft.OData.Edm.IEdmModel,System.String,System.Collections.Generic.IEnumerable{System.Web.OData.Routing.Conventions.IODataRoutingConvention})">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Routing.ODataPathRouteConstraint" /> class.</summary>
      <param name="pathHandler">The OData path handler to use for parsing.</param>
      <param name="model">The EDM model to use for parsing the path.</param>
      <param name="routeName">The name of the route this constraint is associated with.</param>
      <param name="routingConventions">The OData routing conventions to use for selecting the controller name.</param>
    </member>
    <member name="P:System.Web.OData.Routing.ODataPathRouteConstraint.EdmModel">
      <summary>Gets the EDM model to use for parsing the path.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.ODataPathRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Determines whether this instance equals a specified route.</summary>
      <returns>True if this instance equals a specified route; otherwise, false.</returns>
      <param name="request">The request.</param>
      <param name="route">The route to compare.</param>
      <param name="parameterName">The name of the parameter.</param>
      <param name="values">A list of parameter values.</param>
      <param name="routeDirection">The route direction.</param>
    </member>
    <member name="P:System.Web.OData.Routing.ODataPathRouteConstraint.PathHandler">
      <summary>Gets the OData path handler to use for parsing.</summary>
    </member>
    <member name="P:System.Web.OData.Routing.ODataPathRouteConstraint.RouteName">
      <summary>Gets the name of the route this constraint is associated with.</summary>
    </member>
    <member name="P:System.Web.OData.Routing.ODataPathRouteConstraint.RoutingConventions">
      <summary>Gets the OData routing conventions to use for selecting the controller name.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.ODataPathRouteConstraint.SelectControllerName(System.Web.OData.Routing.ODataPath,System.Net.Http.HttpRequestMessage)">
      <summary>Selects the name of the controller to dispatch the request to.</summary>
      <returns>The name of the controller to dispatch to, or null if one cannot be resolved.</returns>
      <param name="path">The OData path of the request.</param>
      <param name="request">The request.</param>
    </member>
    <member name="T:System.Web.OData.Routing.ODataPathSegment">
      <summary>Provides an object representation for an OData path segment with additional information about the EDM type and entity set for the path.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.ODataPathSegment.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Routing.ODataPathSegment" /> class.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.ODataPathSegment.GetEdmType(Microsoft.OData.Edm.IEdmType)">
      <summary>Gets the EDM type for this segment.</summary>
      <returns>The EDM type for this segment.</returns>
      <param name="previousEdmType">The EDM type of the previous path segment.</param>
    </member>
    <member name="M:System.Web.OData.Routing.ODataPathSegment.GetNavigationSource(Microsoft.OData.Edm.IEdmNavigationSource)">
      <summary>Gets the navigation source for this segment.</summary>
      <returns>The navigation source for this segment.</returns>
      <param name="previousNavigationSource">The navigation source of the previous path segment.</param>
    </member>
    <member name="P:System.Web.OData.Routing.ODataPathSegment.SegmentKind">
      <summary>Gets the segment kind for the current segment.</summary>
    </member>
    <member name="T:System.Web.OData.Routing.ODataPathSegmentTemplate">
      <summary>Represents a template that could match an <see cref="T:System.Web.OData.Routing.ODataPathSegment" />.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.ODataPathSegmentTemplate.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Routing.ODataPathSegmentTemplate" /> class.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.ODataPathSegmentTemplate.TryMatch(System.Web.OData.Routing.ODataPathSegment,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Matches the template with an <see cref="T:System.Web.OData.Routing.ODataPathSegment" />.</summary>
      <returns>
        <see cref="true" /> if the segment matches the template; otherwise, <see cref="false" />.</returns>
      <param name="pathSegment">The path segment to match this template with.</param>
      <param name="values">The dictionary of matches to be updated if the segment matches the template.</param>
    </member>
    <member name="T:System.Web.OData.Routing.ODataPathTemplate">
      <summary>Represents a template for an <see cref="T:System.Web.OData.Routing.ODataPath" /> that can be matched to an actual <see cref="T:System.Web.OData.Routing.ODataPath" />.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.ODataPathTemplate.#ctor(System.Collections.Generic.IList{System.Web.OData.Routing.ODataPathSegmentTemplate})">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Routing.ODataPath" /> class.</summary>
      <param name="segments">The path segments for the path.</param>
    </member>
    <member name="M:System.Web.OData.Routing.ODataPathTemplate.#ctor(System.Web.OData.Routing.ODataPathSegmentTemplate[])">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Routing.ODataPathTemplate" /> class.</summary>
      <param name="segments">The path segment templates for the path.</param>
    </member>
    <member name="P:System.Web.OData.Routing.ODataPathTemplate.Segments">
      <summary>Gets the path segments for the OData path.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.ODataPathTemplate.TryMatch(System.Web.OData.Routing.ODataPath,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Matches the current template with an OData path.</summary>
      <returns>
        <see cref="true" /> in case of a match; otherwise, <see cref="false" />.</returns>
      <param name="path">The OData path to be matched against.</param>
      <param name="values">The dictionary of matches to be updated in case of a match.</param>
    </member>
    <member name="T:System.Web.OData.Routing.ODataRoute">
      <summary>A route implementation for OData routes. It supports passing in a route prefix for the route as well as a path constraint that parses the request path as OData.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.ODataRoute.#ctor(System.String,System.Web.OData.Routing.ODataPathRouteConstraint)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Routing.ODataRoute" /> class.</summary>
      <param name="routePrefix">The route prefix.</param>
      <param name="pathConstraint">The OData path constraint.</param>
    </member>
    <member name="M:System.Web.OData.Routing.ODataRoute.#ctor(System.String,System.Web.OData.Routing.ODataPathRouteConstraint,System.Web.Http.Routing.HttpRouteValueDictionary,System.Web.Http.Routing.HttpRouteValueDictionary,System.Web.Http.Routing.HttpRouteValueDictionary,System.Net.Http.HttpMessageHandler)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Routing.ODataRoute" /> class.</summary>
      <param name="routePrefix">The route prefix.</param>
      <param name="pathConstraint">The OData path constraint.</param>
      <param name="defaults">The default values for the route.</param>
      <param name="constraints">The route constraints.</param>
      <param name="dataTokens">The data tokens.</param>
      <param name="handler">The message handler for the route.</param>
    </member>
    <member name="M:System.Web.OData.Routing.ODataRoute.GetVirtualPath(System.Net.Http.HttpRequestMessage,System.Collections.Generic.IDictionary{System.String,System.Object})"></member>
    <member name="P:System.Web.OData.Routing.ODataRoute.PathRouteConstraint">
      <summary>Gets the <see cref="T:System.Web.OData.Routing.ODataPathRouteConstraint" /> on this route.</summary>
    </member>
    <member name="P:System.Web.OData.Routing.ODataRoute.RoutePrefix">
      <summary>Gets the route prefix.</summary>
    </member>
    <member name="T:System.Web.OData.Routing.ODataRouteAttribute">
      <summary>Represents an attribute that can be placed on an action of an <see cref="T:System.Web.OData.ODataController" /> to specify the OData URLs that the action handles.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.ODataRouteAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Routing.ODataRouteAttribute" /> class.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.ODataRouteAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Routing.ODataRouteAttribute" /> class.</summary>
      <param name="pathTemplate">The OData URL path template that this action handles.</param>
    </member>
    <member name="P:System.Web.OData.Routing.ODataRouteAttribute.PathTemplate">
      <summary>Gets the OData URL path template that this action handles.</summary>
    </member>
    <member name="T:System.Web.OData.Routing.ODataRouteConstants">
      <summary>This class contains route constants for OData.</summary>
    </member>
    <member name="F:System.Web.OData.Routing.ODataRouteConstants.Action">
      <summary>Route data key for the action name.</summary>
    </member>
    <member name="F:System.Web.OData.Routing.ODataRouteConstants.Batch">
      <summary>Route template suffix for OData batch.</summary>
    </member>
    <member name="F:System.Web.OData.Routing.ODataRouteConstants.ConstraintName">
      <summary>Parameter name to use for the OData path route constraint.</summary>
    </member>
    <member name="F:System.Web.OData.Routing.ODataRouteConstants.Controller">
      <summary>Route data key for the controller name.</summary>
    </member>
    <member name="F:System.Web.OData.Routing.ODataRouteConstants.Key">
      <summary>Route data key for entity keys.</summary>
    </member>
    <member name="F:System.Web.OData.Routing.ODataRouteConstants.NavigationProperty">
      <summary>Route data key for the navigation property name when manipulating links.</summary>
    </member>
    <member name="F:System.Web.OData.Routing.ODataRouteConstants.ODataPath">
      <summary>Route variable name for the OData path.</summary>
    </member>
    <member name="F:System.Web.OData.Routing.ODataRouteConstants.ODataPathTemplate">
      <summary>Wildcard route template for the OData path route variable.</summary>
    </member>
    <member name="F:System.Web.OData.Routing.ODataRouteConstants.RelatedKey">
      <summary>Route data key for the related key when deleting links.</summary>
    </member>
    <member name="F:System.Web.OData.Routing.ODataRouteConstants.VersionConstraintName">
      <summary>Parameter name to use for the OData version route constraint.</summary>
    </member>
    <member name="T:System.Web.OData.Routing.ODataRoutePrefixAttribute">
      <summary>Represents an attribute that can be placed on an OData controller to specify the prefix that will be used for all actions of that controller.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.ODataRoutePrefixAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Routing.ODataRouteAttribute" /> class.</summary>
      <param name="prefix">The OData URL path template that this action handles.</param>
    </member>
    <member name="P:System.Web.OData.Routing.ODataRoutePrefixAttribute.Prefix">
      <summary>Gets the OData URL path template that this action handles.</summary>
    </member>
    <member name="T:System.Web.OData.Routing.ODataSegmentKinds">
      <summary>Provides the values of segment kinds for implementations of <see cref="T:System.Web.OData.Routing.ODataPathSegment" />.</summary>
    </member>
    <member name="F:System.Web.OData.Routing.ODataSegmentKinds.Action">
      <summary>Represents a segment indicating a bound OData action.</summary>
    </member>
    <member name="F:System.Web.OData.Routing.ODataSegmentKinds.Batch">
      <summary>Represents the OData $batch segment.</summary>
    </member>
    <member name="F:System.Web.OData.Routing.ODataSegmentKinds.Cast">
      <summary>Represents a segment indicating a type cast.</summary>
    </member>
    <member name="F:System.Web.OData.Routing.ODataSegmentKinds.ComplexCast">
      <summary>Represents a segment indicating a complex type cast.</summary>
    </member>
    <member name="F:System.Web.OData.Routing.ODataSegmentKinds.Count">
      <summary>Represents the OData $count segment.</summary>
    </member>
    <member name="F:System.Web.OData.Routing.ODataSegmentKinds.EntitySet">
      <summary>Represents a segment indicating an entity set.</summary>
    </member>
    <member name="F:System.Web.OData.Routing.ODataSegmentKinds.Function">
      <summary>Represents a segment indicating a bound OData function.</summary>
    </member>
    <member name="F:System.Web.OData.Routing.ODataSegmentKinds.Key">
      <summary>Represents a segment indicating an index by key operation.</summary>
    </member>
    <member name="F:System.Web.OData.Routing.ODataSegmentKinds.Metadata">
      <summary>Represents the OData $metadata segment.</summary>
    </member>
    <member name="F:System.Web.OData.Routing.ODataSegmentKinds.Navigation">
      <summary>Represents a segment indicating a navigation.</summary>
    </member>
    <member name="F:System.Web.OData.Routing.ODataSegmentKinds.Property">
      <summary>Represents a segment indicating a property access.</summary>
    </member>
    <member name="F:System.Web.OData.Routing.ODataSegmentKinds.Ref">
      <summary>Represents the OData $ref segment.</summary>
    </member>
    <member name="F:System.Web.OData.Routing.ODataSegmentKinds.ServiceBase">
      <summary>Represents the service root segment (for OData service document).</summary>
    </member>
    <member name="F:System.Web.OData.Routing.ODataSegmentKinds.Singleton">
      <summary>Represents a segment indicating a singleton.</summary>
    </member>
    <member name="F:System.Web.OData.Routing.ODataSegmentKinds.UnboundAction">
      <summary>Represents a segment indicating an unbound OData action.</summary>
    </member>
    <member name="F:System.Web.OData.Routing.ODataSegmentKinds.UnboundFunction">
      <summary>Represents a segment indicating an unbound OData function.</summary>
    </member>
    <member name="F:System.Web.OData.Routing.ODataSegmentKinds.Unresolved">
      <summary>Represents a segment that is not understood.</summary>
    </member>
    <member name="F:System.Web.OData.Routing.ODataSegmentKinds.Value">
      <summary>Represents the OData $value segment.</summary>
    </member>
    <member name="T:System.Web.OData.Routing.ODataVersionConstraint">
      <summary>An implementation of <see cref="T:System.Web.Http.Routing.IHttpRouteConstraint" /> that only matches a specific OData protocol version. This constraint won't match incomming requests that contain any of the previous OData version headers (for OData versions 1.0 to 3.0) regardless of the version in the current version headers.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.ODataVersionConstraint.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Web.OData.Routing.ODataVersionConstraint" /> class that will have a default version of 4.0.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.ODataVersionConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)"></member>
    <member name="P:System.Web.OData.Routing.ODataVersionConstraint.Version">
      <summary>The version of the OData protocol that an OData-Version or OData-MaxVersion request header must have in order to be processed by the OData service with this route constraint.</summary>
    </member>
    <member name="T:System.Web.OData.Routing.PropertyAccessPathSegment">
      <summary>An <see cref="T:System.Web.OData.Routing.ODataPathSegment" /> implementation representing a property access.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.PropertyAccessPathSegment.#ctor(Microsoft.OData.Edm.IEdmProperty)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Routing.PropertyAccessPathSegment" /> class.</summary>
      <param name="property">The property being accessed by this segment.</param>
    </member>
    <member name="M:System.Web.OData.Routing.PropertyAccessPathSegment.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Routing.PropertyAccessPathSegment" /> class.</summary>
      <param name="propertyName">Name of the property.</param>
    </member>
    <member name="M:System.Web.OData.Routing.PropertyAccessPathSegment.GetEdmType(Microsoft.OData.Edm.IEdmType)"></member>
    <member name="M:System.Web.OData.Routing.PropertyAccessPathSegment.GetNavigationSource(Microsoft.OData.Edm.IEdmNavigationSource)"></member>
    <member name="P:System.Web.OData.Routing.PropertyAccessPathSegment.Property">
      <summary>Gets the property property being accessed by this segment.</summary>
    </member>
    <member name="P:System.Web.OData.Routing.PropertyAccessPathSegment.PropertyName">
      <summary>Gets the name of the property.</summary>
    </member>
    <member name="P:System.Web.OData.Routing.PropertyAccessPathSegment.SegmentKind">
      <summary>Gets the segment kind for the current segment.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.PropertyAccessPathSegment.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents this instance.</summary>
      <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
    </member>
    <member name="M:System.Web.OData.Routing.PropertyAccessPathSegment.TryMatch(System.Web.OData.Routing.ODataPathSegment,System.Collections.Generic.IDictionary{System.String,System.Object})"></member>
    <member name="T:System.Web.OData.Routing.RefPathSegment">
      <summary>An <see cref="T:System.Web.OData.Routing.ODataPathSegment" /> implementation representing a $ref segment.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.RefPathSegment.#ctor"></member>
    <member name="M:System.Web.OData.Routing.RefPathSegment.GetEdmType(Microsoft.OData.Edm.IEdmType)"></member>
    <member name="M:System.Web.OData.Routing.RefPathSegment.GetNavigationSource(Microsoft.OData.Edm.IEdmNavigationSource)"></member>
    <member name="P:System.Web.OData.Routing.RefPathSegment.SegmentKind"></member>
    <member name="M:System.Web.OData.Routing.RefPathSegment.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents this instance.</summary>
      <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
    </member>
    <member name="M:System.Web.OData.Routing.RefPathSegment.TryMatch(System.Web.OData.Routing.ODataPathSegment,System.Collections.Generic.IDictionary{System.String,System.Object})"></member>
    <member name="T:System.Web.OData.Routing.SingletonPathSegment">
      <summary>An <see cref="T:System.Web.OData.Routing.ODataPathSegment" /> implementation representing a singleton in a path.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.SingletonPathSegment.#ctor(Microsoft.OData.Edm.IEdmSingleton)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Routing.SingletonPathSegment" /> class.</summary>
      <param name="singleton">The singleton being accessed.</param>
    </member>
    <member name="M:System.Web.OData.Routing.SingletonPathSegment.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Routing.SingletonPathSegment" /> class.</summary>
      <param name="singletonName">Name of the singleton.</param>
    </member>
    <member name="M:System.Web.OData.Routing.SingletonPathSegment.GetEdmType(Microsoft.OData.Edm.IEdmType)"></member>
    <member name="M:System.Web.OData.Routing.SingletonPathSegment.GetNavigationSource(Microsoft.OData.Edm.IEdmNavigationSource)"></member>
    <member name="P:System.Web.OData.Routing.SingletonPathSegment.SegmentKind">
      <summary>Gets the segment kind for the current segment.</summary>
    </member>
    <member name="P:System.Web.OData.Routing.SingletonPathSegment.Singleton">
      <summary>Gets the singleton represented by this segment.</summary>
    </member>
    <member name="P:System.Web.OData.Routing.SingletonPathSegment.SingletonName">
      <summary>Gets the name of the singleton.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.SingletonPathSegment.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents this instance.</summary>
      <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
    </member>
    <member name="M:System.Web.OData.Routing.SingletonPathSegment.TryMatch(System.Web.OData.Routing.ODataPathSegment,System.Collections.Generic.IDictionary{System.String,System.Object})"></member>
    <member name="T:System.Web.OData.Routing.UnboundActionPathSegment">
      <summary>An <see cref="T:System.Web.OData.Routing.ODataPathSegment" /> implementation representing an unbound action invocation.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.UnboundActionPathSegment.#ctor(Microsoft.OData.Edm.IEdmActionImport)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Routing.UnboundActionPathSegment" /> class.</summary>
      <param name="action">The action being invoked.</param>
    </member>
    <member name="P:System.Web.OData.Routing.UnboundActionPathSegment.Action">
      <summary>Gets the action being invoked.</summary>
    </member>
    <member name="P:System.Web.OData.Routing.UnboundActionPathSegment.ActionName">
      <summary>Gets the name of the action.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.UnboundActionPathSegment.GetEdmType(Microsoft.OData.Edm.IEdmType)"></member>
    <member name="M:System.Web.OData.Routing.UnboundActionPathSegment.GetNavigationSource(Microsoft.OData.Edm.IEdmNavigationSource)"></member>
    <member name="P:System.Web.OData.Routing.UnboundActionPathSegment.SegmentKind">
      <summary>Gets the segment kind for the current segment.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.UnboundActionPathSegment.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents this instance.</summary>
      <returns>A <see cref="T:System.String" /> to represent this instance.</returns>
    </member>
    <member name="M:System.Web.OData.Routing.UnboundActionPathSegment.TryMatch(System.Web.OData.Routing.ODataPathSegment,System.Collections.Generic.IDictionary{System.String,System.Object})"></member>
    <member name="T:System.Web.OData.Routing.UnboundFunctionPathSegment">
      <summary>An <see cref="T:System.Web.OData.Routing.ODataPathSegment" /> implementation representing an unbound function invocation.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.UnboundFunctionPathSegment.#ctor(Microsoft.OData.Edm.IEdmFunctionImport,Microsoft.OData.Edm.IEdmModel,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Routing.UnboundFunctionPathSegment" /> class.</summary>
      <param name="function">The function being invoked.</param>
      <param name="model">The edm model containing the function.</param>
      <param name="parameterValues">The raw parameter values indexed by the parameter names.</param>
    </member>
    <member name="P:System.Web.OData.Routing.UnboundFunctionPathSegment.Function">
      <summary>Gets the function being invoked.</summary>
    </member>
    <member name="P:System.Web.OData.Routing.UnboundFunctionPathSegment.FunctionName">
      <summary>Gets the name of the function.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.UnboundFunctionPathSegment.GetEdmType(Microsoft.OData.Edm.IEdmType)"></member>
    <member name="M:System.Web.OData.Routing.UnboundFunctionPathSegment.GetNavigationSource(Microsoft.OData.Edm.IEdmNavigationSource)"></member>
    <member name="M:System.Web.OData.Routing.UnboundFunctionPathSegment.GetParameterValue(System.String)">
      <summary>Gets the parameter value.</summary>
      <returns>The value of the parameter.</returns>
      <param name="parameterName">The name of the parameter.</param>
    </member>
    <member name="P:System.Web.OData.Routing.UnboundFunctionPathSegment.SegmentKind">
      <summary>Gets the segment kind for the current segment.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.UnboundFunctionPathSegment.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents this instance.</summary>
      <returns>a <see cref="T:System.String" /> to represent this instance.</returns>
    </member>
    <member name="M:System.Web.OData.Routing.UnboundFunctionPathSegment.TryMatch(System.Web.OData.Routing.ODataPathSegment,System.Collections.Generic.IDictionary{System.String,System.Object})"></member>
    <member name="T:System.Web.OData.Routing.UnboundFunctionPathSegmentTemplate">
      <summary>Represents a template that can match a <see cref="T:System.Web.OData.Routing.UnboundFunctionPathSegment" />.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.UnboundFunctionPathSegmentTemplate.#ctor(System.Web.OData.Routing.UnboundFunctionPathSegment)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Routing.UnboundFunctionPathSegmentTemplate" /> class.</summary>
      <param name="function">The function segment to be templatized.</param>
    </member>
    <member name="P:System.Web.OData.Routing.UnboundFunctionPathSegmentTemplate.ParameterMappings">
      <summary>Gets the dictionary representing the mappings from the parameter names in the current function segment to the parameter names in route data.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.UnboundFunctionPathSegmentTemplate.TryMatch(System.Web.OData.Routing.ODataPathSegment,System.Collections.Generic.IDictionary{System.String,System.Object})"></member>
    <member name="T:System.Web.OData.Routing.UnresolvedPathSegment">
      <summary>An <see cref="T:System.Web.OData.Routing.ODataPathSegment" /> implementation representing a segment that could not be resolved.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.UnresolvedPathSegment.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Routing.UnresolvedPathSegment" /> class.</summary>
      <param name="segmentValue">The unresolved segment value.</param>
    </member>
    <member name="M:System.Web.OData.Routing.UnresolvedPathSegment.GetEdmType(Microsoft.OData.Edm.IEdmType)"></member>
    <member name="M:System.Web.OData.Routing.UnresolvedPathSegment.GetNavigationSource(Microsoft.OData.Edm.IEdmNavigationSource)"></member>
    <member name="P:System.Web.OData.Routing.UnresolvedPathSegment.SegmentKind">
      <summary>Gets the segment kind for the current segment.</summary>
    </member>
    <member name="P:System.Web.OData.Routing.UnresolvedPathSegment.SegmentValue">
      <summary>Gets the unresolved segment value.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.UnresolvedPathSegment.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents this instance.</summary>
      <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
    </member>
    <member name="M:System.Web.OData.Routing.UnresolvedPathSegment.TryMatch(System.Web.OData.Routing.ODataPathSegment,System.Collections.Generic.IDictionary{System.String,System.Object})"></member>
    <member name="T:System.Web.OData.Routing.ValuePathSegment">
      <summary>An <see cref="T:System.Web.OData.Routing.ODataPathSegment" /> implementation representing a $value segment.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.ValuePathSegment.#ctor"></member>
    <member name="M:System.Web.OData.Routing.ValuePathSegment.GetEdmType(Microsoft.OData.Edm.IEdmType)"></member>
    <member name="M:System.Web.OData.Routing.ValuePathSegment.GetNavigationSource(Microsoft.OData.Edm.IEdmNavigationSource)"></member>
    <member name="P:System.Web.OData.Routing.ValuePathSegment.SegmentKind">
      <summary>Gets the segment kind for the current segment.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.ValuePathSegment.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents this instance.</summary>
      <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
    </member>
    <member name="M:System.Web.OData.Routing.ValuePathSegment.TryMatch(System.Web.OData.Routing.ODataPathSegment,System.Collections.Generic.IDictionary{System.String,System.Object})"></member>
    <member name="T:System.Web.OData.Routing.Conventions.ActionRoutingConvention">
      <summary>An implementation of <see cref="T:System.Web.OData.Routing.Conventions.IODataRoutingConvention" /> that handles action invocations.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.Conventions.ActionRoutingConvention.#ctor"></member>
    <member name="M:System.Web.OData.Routing.Conventions.ActionRoutingConvention.SelectAction(System.Web.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})"></member>
    <member name="T:System.Web.OData.Routing.Conventions.AttributeRoutingConvention">
      <summary>Represents a routing convention that looks for <see cref="T:System.Web.OData.Routing.ODataRouteAttribute" />s to match an <see cref="T:System.Web.OData.Routing.ODataPath" /> to a controller and an action.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.Conventions.AttributeRoutingConvention.#ctor(Microsoft.OData.Edm.IEdmModel,System.Collections.Generic.IEnumerable{System.Web.Http.Controllers.HttpControllerDescriptor})">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Routing.Conventions.AttributeRoutingConvention" /> class.</summary>
      <param name="model">The <see cref="T:Microsoft.OData.Edm.IEdmModel" /> to be used for parsing the route templates.</param>
      <param name="controllers">The collection of controllers to search for a match.</param>
    </member>
    <member name="M:System.Web.OData.Routing.Conventions.AttributeRoutingConvention.#ctor(Microsoft.OData.Edm.IEdmModel,System.Collections.Generic.IEnumerable{System.Web.Http.Controllers.HttpControllerDescriptor},System.Web.OData.Routing.IODataPathTemplateHandler)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Routing.Conventions.AttributeRoutingConvention" /> class.</summary>
      <param name="model">The <see cref="T:Microsoft.OData.Edm.IEdmModel" /> to be used for parsing the route templates.</param>
      <param name="controllers">The collection of controllers to search for a match.</param>
      <param name="pathTemplateHandler">The path template handler to be used for parsing the path templates.</param>
    </member>
    <member name="M:System.Web.OData.Routing.Conventions.AttributeRoutingConvention.#ctor(Microsoft.OData.Edm.IEdmModel,System.Web.Http.HttpConfiguration)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Routing.Conventions.AttributeRoutingConvention" /> class.</summary>
      <param name="model">The <see cref="T:Microsoft.OData.Edm.IEdmModel" /> to be used for parsing the route templates.</param>
      <param name="configuration">The <see cref="T:System.Web.Http.HttpConfiguration" /> to use for figuring out all the controllers to look for a match.</param>
    </member>
    <member name="M:System.Web.OData.Routing.Conventions.AttributeRoutingConvention.#ctor(Microsoft.OData.Edm.IEdmModel,System.Web.Http.HttpConfiguration,System.Web.OData.Routing.IODataPathTemplateHandler)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.OData.Routing.Conventions.AttributeRoutingConvention" /> class.</summary>
      <param name="model">The <see cref="T:Microsoft.OData.Edm.IEdmModel" /> to be used for parsing the route templates.</param>
      <param name="configuration">The <see cref="T:System.Web.Http.HttpConfiguration" /> to use for figuring out all the controllers to look for a match.</param>
      <param name="pathTemplateHandler">The path template handler to be used for parsing the path templates.</param>
    </member>
    <member name="P:System.Web.OData.Routing.Conventions.AttributeRoutingConvention.Model">
      <summary>Gets the <see cref="T:Microsoft.OData.Edm.IEdmModel" /> to be used for parsing the route templates.</summary>
    </member>
    <member name="P:System.Web.OData.Routing.Conventions.AttributeRoutingConvention.ODataPathTemplateHandler">
      <summary>Gets the <see cref="T:System.Web.OData.Routing.IODataPathTemplateHandler" /> to be used for parsing the route templates.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.Conventions.AttributeRoutingConvention.SelectAction(System.Web.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})"></member>
    <member name="M:System.Web.OData.Routing.Conventions.AttributeRoutingConvention.SelectController(System.Web.OData.Routing.ODataPath,System.Net.Http.HttpRequestMessage)"></member>
    <member name="M:System.Web.OData.Routing.Conventions.AttributeRoutingConvention.ShouldMapController(System.Web.Http.Controllers.HttpControllerDescriptor)">
      <summary>Specifies whether OData route attributes on this controller should be mapped.</summary>
      <returns>
        <see cref="true" /> if this controller should be included in the map; <see cref="false" /> otherwise.</returns>
      <param name="controller">The controller.</param>
    </member>
    <member name="T:System.Web.OData.Routing.Conventions.EntityRoutingConvention">
      <summary>An implementation of <see cref="T:System.Web.OData.Routing.Conventions.IODataRoutingConvention" /> that handles operating on entities by key.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.Conventions.EntityRoutingConvention.#ctor"></member>
    <member name="M:System.Web.OData.Routing.Conventions.EntityRoutingConvention.SelectAction(System.Web.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})"></member>
    <member name="T:System.Web.OData.Routing.Conventions.EntitySetRoutingConvention">
      <summary>An implementation of <see cref="T:System.Web.OData.Routing.Conventions.IODataRoutingConvention" /> that handles entity sets.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.Conventions.EntitySetRoutingConvention.#ctor"></member>
    <member name="M:System.Web.OData.Routing.Conventions.EntitySetRoutingConvention.SelectAction(System.Web.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})">
      <summary>Selects the action for OData requests.</summary>
      <returns>null if the request isn't handled by this convention; otherwise, the name of the selected action</returns>
      <param name="odataPath">The OData path.</param>
      <param name="controllerContext">The controller context.</param>
      <param name="actionMap">The action map.</param>
    </member>
    <member name="T:System.Web.OData.Routing.Conventions.FunctionRoutingConvention">
      <summary>An implementation of <see cref="T:System.Web.OData.Routing.Conventions.IODataRoutingConvention" /> that handles function invocations.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.Conventions.FunctionRoutingConvention.#ctor"></member>
    <member name="M:System.Web.OData.Routing.Conventions.FunctionRoutingConvention.SelectAction(System.Web.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})"></member>
    <member name="T:System.Web.OData.Routing.Conventions.IODataRoutingConvention">
      <summary>Provides an abstraction for selecting a controller and an action for OData requests.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.Conventions.IODataRoutingConvention.SelectAction(System.Web.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})">
      <summary>Selects the action for OData requests.</summary>
      <returns>null if the request isn't handled by this convention; otherwise, the name of the selected action</returns>
      <param name="odataPath">The OData path.</param>
      <param name="controllerContext">The controller context.</param>
      <param name="actionMap">The action map.</param>
    </member>
    <member name="M:System.Web.OData.Routing.Conventions.IODataRoutingConvention.SelectController(System.Web.OData.Routing.ODataPath,System.Net.Http.HttpRequestMessage)">
      <summary>Selects the controller for OData requests.</summary>
      <returns>null if the request isn't handled by this convention; otherwise, the name of the selected controller</returns>
      <param name="odataPath">The OData path.</param>
      <param name="request">The request.</param>
    </member>
    <member name="T:System.Web.OData.Routing.Conventions.MetadataRoutingConvention">
      <summary>An implementation of <see cref="T:System.Web.OData.Routing.Conventions.IODataRoutingConvention" /> that handles OData metadata requests.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.Conventions.MetadataRoutingConvention.#ctor"></member>
    <member name="M:System.Web.OData.Routing.Conventions.MetadataRoutingConvention.SelectAction(System.Web.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})">
      <summary>Selects the action for OData requests.</summary>
      <returns>null if the request isn't handled by this convention; otherwise, the name of the selected action</returns>
      <param name="odataPath">The OData path.</param>
      <param name="controllerContext">The controller context.</param>
      <param name="actionMap">The action map.</param>
    </member>
    <member name="M:System.Web.OData.Routing.Conventions.MetadataRoutingConvention.SelectController(System.Web.OData.Routing.ODataPath,System.Net.Http.HttpRequestMessage)">
      <summary>Selects the controller for OData requests.</summary>
      <returns>null if the request isn't handled by this convention; otherwise, the name of the selected controller</returns>
      <param name="odataPath">The OData path.</param>
      <param name="request">The request.</param>
    </member>
    <member name="T:System.Web.OData.Routing.Conventions.NavigationRoutingConvention">
      <summary>An implementation of <see cref="T:System.Web.OData.Routing.Conventions.IODataRoutingConvention" /> that handles navigation properties.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.Conventions.NavigationRoutingConvention.#ctor"></member>
    <member name="M:System.Web.OData.Routing.Conventions.NavigationRoutingConvention.SelectAction(System.Web.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})"></member>
    <member name="T:System.Web.OData.Routing.Conventions.NavigationSourceRoutingConvention">
      <summary>An implementation of <see cref="T:System.Web.OData.Routing.Conventions.IODataRoutingConvention" /> that handles navigation sources (entity sets or singletons)</summary>
    </member>
    <member name="M:System.Web.OData.Routing.Conventions.NavigationSourceRoutingConvention.#ctor"></member>
    <member name="M:System.Web.OData.Routing.Conventions.NavigationSourceRoutingConvention.SelectAction(System.Web.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})">
      <summary>Selects the action for OData requests.</summary>
      <returns>null if the request isn't handled by this convention; otherwise, the name of the selected action</returns>
      <param name="odataPath">The OData path.</param>
      <param name="controllerContext">The controller context.</param>
      <param name="actionMap">The action map.</param>
    </member>
    <member name="M:System.Web.OData.Routing.Conventions.NavigationSourceRoutingConvention.SelectController(System.Web.OData.Routing.ODataPath,System.Net.Http.HttpRequestMessage)">
      <summary>Selects the controller for OData requests.</summary>
      <returns>null if the request isn't handled by this convention; otherwise, the name of the selected controller</returns>
      <param name="odataPath">The OData path.</param>
      <param name="request">The request.</param>
    </member>
    <member name="T:System.Web.OData.Routing.Conventions.ODataRoutingConventions">
      <summary>Provides helper methods for creating routing conventions.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.Conventions.ODataRoutingConventions.CreateDefault">
      <summary>Creates a mutable list of the default OData routing conventions.</summary>
      <returns>A mutable list of the default OData routing conventions.</returns>
    </member>
    <member name="M:System.Web.OData.Routing.Conventions.ODataRoutingConventions.CreateDefaultWithAttributeRouting(System.Web.Http.HttpConfiguration,Microsoft.OData.Edm.IEdmModel)">
      <summary>Creates a mutable list of the default OData routing conventions with attribute routing enabled.</summary>
      <returns>A mutable list of the default OData routing conventions.</returns>
      <param name="configuration">The server configuration.</param>
      <param name="model">The EDM model to use for parsing OData paths.</param>
    </member>
    <member name="T:System.Web.OData.Routing.Conventions.PropertyRoutingConvention">
      <summary>An implementation of <see cref="T:System.Web.OData.Routing.Conventions.IODataRoutingConvention" /> that handles reading structural properties.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.Conventions.PropertyRoutingConvention.#ctor"></member>
    <member name="M:System.Web.OData.Routing.Conventions.PropertyRoutingConvention.SelectAction(System.Web.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})"></member>
    <member name="T:System.Web.OData.Routing.Conventions.RefRoutingConvention">
      <summary>An implementation of <see cref="T:System.Web.OData.Routing.Conventions.IODataRoutingConvention" /> that handles entity reference manipulations.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.Conventions.RefRoutingConvention.#ctor"></member>
    <member name="M:System.Web.OData.Routing.Conventions.RefRoutingConvention.SelectAction(System.Web.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})"></member>
    <member name="T:System.Web.OData.Routing.Conventions.SingletonRoutingConvention">
      <summary>An implementation of <see cref="T:System.Web.OData.Routing.Conventions.IODataRoutingConvention" /> that handles the singleton.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.Conventions.SingletonRoutingConvention.#ctor"></member>
    <member name="M:System.Web.OData.Routing.Conventions.SingletonRoutingConvention.SelectAction(System.Web.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})"></member>
    <member name="T:System.Web.OData.Routing.Conventions.UnmappedRequestRoutingConvention">
      <summary>An implementation of <see cref="T:System.Web.OData.Routing.Conventions.IODataRoutingConvention" /> that always selects the action named HandleUnmappedRequest if that action is present.</summary>
    </member>
    <member name="M:System.Web.OData.Routing.Conventions.UnmappedRequestRoutingConvention.#ctor"></member>
    <member name="M:System.Web.OData.Routing.Conventions.UnmappedRequestRoutingConvention.SelectAction(System.Web.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})"></member>
  </members>
</doc>